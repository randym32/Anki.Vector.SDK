{
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "api/Anki.Vector.Types.PhotoInfo.html": {
    "href": "api/Anki.Vector.Types.PhotoInfo.html",
    "title": "Class PhotoInfo",
    "keywords": "Class PhotoInfo Store photo information Inheritance Object PhotoInfo Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class PhotoInfo Properties | Improve this Doc View Source DateTime Gets the photo taken on date and time. public DateTime DateTime { get; } Property Type DateTime | Improve this Doc View Source PhotoCopiedToApp Gets a value indicating whether photo was copied to application. public bool PhotoCopiedToApp { get; } Property Type Boolean | Improve this Doc View Source PhotoId Gets the photo identifier. public uint PhotoId { get; } Property Type UInt32 | Improve this Doc View Source ThumbCopiedToApp Gets a value indicating whether thumb was copied to application. public bool ThumbCopiedToApp { get; } Property Type Boolean"
  },
  "api/Anki.Vector.DriveDirection.html": {
    "href": "api/Anki.Vector.DriveDirection.html",
    "title": "Enum DriveDirection",
    "keywords": "Enum DriveDirection The drive direction (forwards or backwards) Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public enum DriveDirection Fields Name Description Backwards Move backwards movement Forwards Move forwards movement None No forward/backward movement"
  },
  "api/Anki.Vector.StimulationInfo.html": {
    "href": "api/Anki.Vector.StimulationInfo.html",
    "title": "Class StimulationInfo",
    "keywords": "Class StimulationInfo Vector stimulation info Inheritance Object StimulationInfo Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class StimulationInfo Properties | Improve this Doc View Source Acceleration Gets the acceleration per second squared. public float Acceleration { get; } Property Type Single | Improve this Doc View Source EmotionEvents Gets the emotion events. public IReadOnlyList<string> EmotionEvents { get; } Property Type IReadOnlyList < String > | Improve this Doc View Source MaxValue Gets the maximum value. public float MaxValue { get; } Property Type Single | Improve this Doc View Source MinValue Gets the minimum value. public float MinValue { get; } Property Type Single | Improve this Doc View Source Value Gets the stimulation value. public float Value { get; } Property Type Single | Improve this Doc View Source ValueBeforeEvent Gets the stimulation value before event. Matches value if there were no events. public float ValueBeforeEvent { get; } Property Type Single | Improve this Doc View Source Velocity Gets the velocity per second public float Velocity { get; } Property Type Single Methods | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/Anki.Vector.TurnDirection.html": {
    "href": "api/Anki.Vector.TurnDirection.html",
    "title": "Enum TurnDirection",
    "keywords": "Enum TurnDirection The drive turn direction (left, right) Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public enum TurnDirection Fields Name Description Left Turn left None No turning Right Turn right"
  },
  "api/Anki.Vector.Types.ActionResult.html": {
    "href": "api/Anki.Vector.Types.ActionResult.html",
    "title": "Class ActionResult",
    "keywords": "Class ActionResult The result of the action method Inheritance Object ActionResult Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class ActionResult Properties | Improve this Doc View Source IsSuccess Gets a value indicating whether this instance indicates success. public bool IsSuccess { get; } Property Type Boolean | Improve this Doc View Source Result Gets the result. public ActionResultCode Result { get; } Property Type ActionResultCode | Improve this Doc View Source StatusCode Gets the status code. public StatusCode StatusCode { get; } Property Type StatusCode"
  },
  "api/Anki.Vector.Types.ActionResultCode.html": {
    "href": "api/Anki.Vector.Types.ActionResultCode.html",
    "title": "Enum ActionResultCode",
    "keywords": "Enum ActionResultCode The result of an action Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum ActionResultCode Fields Name Description Abort ActionResultCancelledWhileRunning ActionResultRunning ActionResultSuccess AnimAborted BadMarker BadMessageTag BadObject BadPose BadTag ChargerUnpluggedAbort CliffAlignFailedNoTurning CliffAlignFailedNoWhite CliffAlignFailedOverTurning CliffAlignFailedStopped CliffAlignFailedTimeout DidNotReachPreactionPose FailedSettingCalibration FailedTraversingPath FollowingPathButNotTraversing Interrupted InvalidOffTreadsState LastPickAndPlaceFailed MismatchedUpAxis MotorStoppedMakingProgress NoAnimName NoDistanceSet NoFace NoGoalSet NoPreactionPoses NotCarryingObjectAbort NotCarryingObjectRetry NotOnChargerAbort NotOnChargerRetry NotStarted NullSubaction PathPlanningFailedAbort PathPlanningFailedRetry PickupObjectUnexpectedlyMoving PickupObjectUnexpectedlyNotMoving PlacementGoalNotFree Retry SendMessageToRobotFailed ShouldntDriveOnCharger StillCarryingObject StillOnCharger Timeout TracksLocked UnexpectedDockAction UnexpectedPitchAngle UnknownToolCode UpdateDerivedFailed VisualObservationFailed"
  },
  "api/Anki.Vector.Types.BehaviorResultCode.html": {
    "href": "api/Anki.Vector.Types.BehaviorResultCode.html",
    "title": "Enum BehaviorResultCode",
    "keywords": "Enum BehaviorResultCode The result of a behavior Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum BehaviorResultCode Fields Name Description Complete Invalid WontActivate"
  },
  "api/Anki.Vector.Types.ButtonWakeWord.html": {
    "href": "api/Anki.Vector.Types.ButtonWakeWord.html",
    "title": "Enum ButtonWakeWord",
    "keywords": "Enum ButtonWakeWord The service that responds when clicking Vector's back button Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum ButtonWakeWord Fields Name Description Alexa The button triggers Alexa. HeyVector The button triggers Hey Vector."
  },
  "api/Anki.Vector.Types.CheckUpdateStatus.html": {
    "href": "api/Anki.Vector.Types.CheckUpdateStatus.html",
    "title": "Class CheckUpdateStatus",
    "keywords": "Class CheckUpdateStatus The result of check update status methods. Inheritance Object CheckUpdateStatus Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class CheckUpdateStatus Properties | Improve this Doc View Source Expected Gets the expected number of bytes to download public long Expected { get; } Property Type Int64 | Improve this Doc View Source Progress Gets the current number of bytes downloaded public long Progress { get; } Property Type Int64 | Improve this Doc View Source UpdateStatus Gets the update status. public UpdateStatus UpdateStatus { get; } Property Type UpdateStatus | Improve this Doc View Source UpdateVersion Gets the update version. public string UpdateVersion { get; } Property Type String"
  },
  "api/Anki.Vector.Types.CubeBatteryLevel.html": {
    "href": "api/Anki.Vector.Types.CubeBatteryLevel.html",
    "title": "Enum CubeBatteryLevel",
    "keywords": "Enum CubeBatteryLevel Cube battery level Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum CubeBatteryLevel Fields Name Description Low 1.1V or less. Normal Normal operating levels."
  },
  "api/Anki.Vector.Types.CubeBatteryState.html": {
    "href": "api/Anki.Vector.Types.CubeBatteryState.html",
    "title": "Class CubeBatteryState",
    "keywords": "Class CubeBatteryState The state of the cube battery. Inheritance Object CubeBatteryState Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class CubeBatteryState Properties | Improve this Doc View Source BatteryLevel Gets the battery level. public CubeBatteryLevel BatteryLevel { get; } Property Type CubeBatteryLevel | Improve this Doc View Source BatteryVolts Gets the battery volts. public float BatteryVolts { get; } Property Type Single | Improve this Doc View Source FactoryId Gets the factory identifier of the cube. public string FactoryId { get; } Property Type String | Improve this Doc View Source TimeSinceLastReadingSec Gets the time since last reading in seconds. public float TimeSinceLastReadingSec { get; } Property Type Single"
  },
  "api/Anki.Vector.Types.CustomObjectMarker.html": {
    "href": "api/Anki.Vector.Types.CustomObjectMarker.html",
    "title": "Enum CustomObjectMarker",
    "keywords": "Enum CustomObjectMarker Defines all available custom object markers. Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum CustomObjectMarker Fields Name Description CustomMarkerCircles2 The custom marker circles2. Images/SDK_2Circles.png CustomMarkerCircles3 The custom marker circles3. Images/SDK_3Circles.png CustomMarkerCircles4 The custom marker circles4. Images/SDK_4Circles.png CustomMarkerCircles5 The custom marker circles5. Images/SDK_5Circles.png CustomMarkerDiamonds2 The custom marker diamonds2. Images/SDK_2Diamonds.png CustomMarkerDiamonds3 The custom marker diamonds3. Images/SDK_3Diamonds.png CustomMarkerDiamonds4 The custom marker diamonds4. Images/SDK_4Diamonds.png CustomMarkerDiamonds5 The custom marker diamonds5. Images/SDK_5Diamonds.png CustomMarkerHexagons2 The custom marker hexagons2. Images/SDK_2Hexagons.png CustomMarkerHexagons3 The custom marker hexagons3. Images/SDK_3Hexagons.png CustomMarkerHexagons4 The custom marker hexagons4. Images/SDK_4Hexagons.png CustomMarkerHexagons5 The custom marker hexagons5. Images/SDK_5Hexagons.png CustomMarkerTriangles2 The custom marker triangles2. Images/SDK_2Triangles.png CustomMarkerTriangles3 The custom marker triangles3. Images/SDK_3Triangles.png CustomMarkerTriangles4 The custom marker triangles4. Images/SDK_4Triangles.png CustomMarkerTriangles5 The custom marker triangles5. Images/SDK_5Triangles.png Undefined The marker is not defined"
  },
  "api/Anki.Vector.Types.CustomObjectType.html": {
    "href": "api/Anki.Vector.Types.CustomObjectType.html",
    "title": "Enum CustomObjectType",
    "keywords": "Enum CustomObjectType Custom object type. Vector has 20 slots for custom object types. You can define a Anki.Vector.ExternalInterface.CustomBoxDefinition , Anki.Vector.ExternalInterface.CustomCubeDefinition , or Anki.Vector.ExternalInterface.CustomWallDefinition in these slots and Vector will recognize objects of those types. Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum CustomObjectType Fields Name Description None Not a custom object type. Type1 Custom object type #1. Type10 Custom object type #10. Type11 Custom object type #11. Type12 Custom object type #12. Type13 Custom object type #13. Type14 Custom object type #14. Type15 Custom object type #15. Type16 Custom object type #16. Type17 Custom object type #17. Type18 Custom object type #18. Type19 Custom object type #19. Type2 Custom object type #2. Type20 Custom object type #20. Type3 Custom object type #3. Type4 Custom object type #4. Type5 Custom object type #5. Type6 Custom object type #6. Type7 Custom object type #7. Type8 Custom object type #8. Type9 Custom object type #9."
  },
  "api/Anki.Vector.Types.EyeColor.html": {
    "href": "api/Anki.Vector.Types.EyeColor.html",
    "title": "Enum EyeColor",
    "keywords": "Enum EyeColor Vector's eye color setting Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum EyeColor Fields Name Description ConfusionMatrixGreen Green FalsePositivePurple Purple NonLinearLime Lime OverfitOrange Orange SingularitySapphire Sapphire TipOverTeal Teal UncannyYellow Yellow"
  },
  "api/Anki.Vector.Types.IAnimation.html": {
    "href": "api/Anki.Vector.Types.IAnimation.html",
    "title": "Interface IAnimation",
    "keywords": "Interface IAnimation Interface for animation and animation triggers Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public interface IAnimation Properties | Improve this Doc View Source FriendlyName Gets the friendly name of the animation or trigger string FriendlyName { get; } Property Type String | Improve this Doc View Source Name Gets the name of the animation or trigger string Name { get; } Property Type String"
  },
  "api/Anki.Vector.Objects.FacialExpression.html": {
    "href": "api/Anki.Vector.Objects.FacialExpression.html",
    "title": "Enum FacialExpression",
    "keywords": "Enum FacialExpression Facial expressions Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public enum FacialExpression Fields Name Description Anger Angry expression Happiness Happy expression Neutral Neutral expression Sadness Sad expression Surprise Surprise expression Unknown Unknown expression"
  },
  "api/Anki.Vector.Objects.ObjectType.html": {
    "href": "api/Anki.Vector.Objects.ObjectType.html",
    "title": "Enum ObjectType",
    "keywords": "Enum ObjectType The type of the object Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public enum ObjectType Fields Name Description BlockLightcube1 Light cube ChargerBasic Charger CustomObject Custom object InvalidObject Invalid object UnknownObject Unknown object"
  },
  "api/Anki.Vector.Types.BatteryState.html": {
    "href": "api/Anki.Vector.Types.BatteryState.html",
    "title": "Class BatteryState",
    "keywords": "Class BatteryState The state of the robot battery. Inheritance Object BatteryState Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class BatteryState Properties | Improve this Doc View Source BatteryLevel Gets the battery level. public BatteryLevel BatteryLevel { get; } Property Type BatteryLevel | Improve this Doc View Source BatteryVolts Gets the battery volts. public float BatteryVolts { get; } Property Type Single | Improve this Doc View Source CubeBattery Gets the cube battery state. public CubeBatteryState CubeBattery { get; } Property Type CubeBatteryState | Improve this Doc View Source IsCharging Gets a value indicating whether the robot is charging. public bool IsCharging { get; } Property Type Boolean | Improve this Doc View Source IsOnChargerPlatform Gets a value indicating whether the robot is on charger platform. public bool IsOnChargerPlatform { get; } Property Type Boolean | Improve this Doc View Source SuggestedChargerSec Gets the suggested charger time in seconds. public float SuggestedChargerSec { get; } Property Type Single"
  },
  "api/Anki.Vector.AlignmentType.html": {
    "href": "api/Anki.Vector.AlignmentType.html",
    "title": "Enum AlignmentType",
    "keywords": "Enum AlignmentType Which part of the robot to align with an object. Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public enum AlignmentType Fields Name Description Body Front of body aligned with object LiftFinger Fingers aligned with object LiftPlate Lift plate aligned with object"
  },
  "api/Anki.Vector.Types.CloudConnection.html": {
    "href": "api/Anki.Vector.Types.CloudConnection.html",
    "title": "Class CloudConnection",
    "keywords": "Class CloudConnection Cloud connection information Inheritance Object CloudConnection Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class CloudConnection Properties | Improve this Doc View Source Code Gets the cloud connection code. public CloudConnectionCode Code { get; } Property Type CloudConnectionCode | Improve this Doc View Source ExpectedPackets Gets the expected packets. public int ExpectedPackets { get; } Property Type Int32 | Improve this Doc View Source NumPackets Gets the number packets. public int NumPackets { get; } Property Type Int32"
  },
  "api/Anki.Vector.Types.CloudConnectionCode.html": {
    "href": "api/Anki.Vector.Types.CloudConnectionCode.html",
    "title": "Enum CloudConnectionCode",
    "keywords": "Enum CloudConnectionCode Cloud connection code Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum CloudConnectionCode Fields Name Description Available Available BadConnectivity Bad connectivity FailedAuth Failed Authorization FailedTls Failed TLS InsufficientBandwidth Insufficient bandwidth Unknown Unknown"
  },
  "api/Anki.Vector.Events.AlexaAuthState.html": {
    "href": "api/Anki.Vector.Events.AlexaAuthState.html",
    "title": "Enum AlexaAuthState",
    "keywords": "Enum AlexaAuthState Alexa authorization state Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum AlexaAuthState Fields Name Description AlexaAuthAuthorized Opted in, and authorized / in use AlexaAuthInvalid Invalid/error/versioning issue AlexaAuthRequestingAuth Opted in, and attempting to authorize AlexaAuthUninitialized Not opted in, or opt-in attempted but failed AlexaAuthWaitingForCode Opted in, and waiting on the user to enter a code"
  },
  "api/Anki.Vector.Objects.UpAxis.html": {
    "href": "api/Anki.Vector.Objects.UpAxis.html",
    "title": "Enum UpAxis",
    "keywords": "Enum UpAxis The up access of the object Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public enum UpAxis Fields Name Description InvalidAxis Invalid axis XNegative Negative X axis is up XPositive Positive X axis is up YNegative Negative Y axis is up YPositive Positive X axis is up ZNegative Negative Z axis up ZPositive Positive Z axis up"
  },
  "api/Anki.Vector.PlaybackResult.html": {
    "href": "api/Anki.Vector.PlaybackResult.html",
    "title": "Enum PlaybackResult",
    "keywords": "Enum PlaybackResult The playback result Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public enum PlaybackResult Fields Name Description BufferOverrun The robot overran the audio buffer\\ Cancelled The playback was cancelled Completed The playback completed successfully OtherFailure An unspecified playback failure"
  },
  "api/Anki.Vector.Types.BehaviorResult.html": {
    "href": "api/Anki.Vector.Types.BehaviorResult.html",
    "title": "Class BehaviorResult",
    "keywords": "Class BehaviorResult Result from the behavior methods Inheritance Object BehaviorResult Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class BehaviorResult Properties | Improve this Doc View Source Result Gets the result. public BehaviorResultCode Result { get; } Property Type BehaviorResultCode | Improve this Doc View Source StatusCode Gets the status code. public StatusCode StatusCode { get; } Property Type StatusCode"
  },
  "api/Anki.Vector.Types.LatestAttentionTransfer.html": {
    "href": "api/Anki.Vector.Types.LatestAttentionTransfer.html",
    "title": "Class LatestAttentionTransfer",
    "keywords": "Class LatestAttentionTransfer Vector attention transfer info event args Inheritance Object LatestAttentionTransfer Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class LatestAttentionTransfer Properties | Improve this Doc View Source Reason Gets the reason that the attention was changed. public AttentionTransferReason Reason { get; } Property Type AttentionTransferReason | Improve this Doc View Source SecondsAgo Gets how long ago the attention was changed. public float SecondsAgo { get; } Property Type Single Methods | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/Anki.Vector.Types.MotionProfile.html": {
    "href": "api/Anki.Vector.Types.MotionProfile.html",
    "title": "Class MotionProfile",
    "keywords": "Class MotionProfile Tells Vector how to drive when receiving navigation and movement actions such as GoToPose and DockWithCube. Inheritance Object MotionProfile Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class MotionProfile Properties | Improve this Doc View Source AccelMmps2 Gets or sets the acceleration in mm/s2 public float AccelMmps2 { get; set; } Property Type Single | Improve this Doc View Source DecelMmps2 Gets or sets the deceleration in mm/s2 public float DecelMmps2 { get; set; } Property Type Single | Improve this Doc View Source DockAccelMmps2 Gets or sets the docking acceleration mm/s2. public float DockAccelMmps2 { get; set; } Property Type Single | Improve this Doc View Source DockDecelMmps2 Gets or sets the docking deceleration in mm/s2 public float DockDecelMmps2 { get; set; } Property Type Single | Improve this Doc View Source DockSpeedMmps Gets or sets the docking speed in mm/s2 public float DockSpeedMmps { get; set; } Property Type Single | Improve this Doc View Source IsCustom Gets a value indicating whether this motion profile has been customized public bool IsCustom { get; } Property Type Boolean | Improve this Doc View Source PointTurnAccelRadPerSec2 Gets or sets the point turn acceleration in radians/s2 public float PointTurnAccelRadPerSec2 { get; set; } Property Type Single | Improve this Doc View Source PointTurnDecelRadPerSec2 Gets or sets the point turn deceleration in radians/s2 public float PointTurnDecelRadPerSec2 { get; set; } Property Type Single | Improve this Doc View Source PointTurnSpeedRadPerSec Gets or sets the point turn speed in radians/s public float PointTurnSpeedRadPerSec { get; set; } Property Type Single | Improve this Doc View Source ReverseSpeedMmps Gets or sets the reverse speed mm/s public float ReverseSpeedMmps { get; set; } Property Type Single | Improve this Doc View Source SpeedMmps Gets or sets the forward speed in mm/s public float SpeedMmps { get; set; } Property Type Single Methods | Improve this Doc View Source SetDefault() Sets motion profile back to the default values public void SetDefault()"
  },
  "api/Anki.Vector.IRemoteRobotConfiguration.html": {
    "href": "api/Anki.Vector.IRemoteRobotConfiguration.html",
    "title": "Interface IRemoteRobotConfiguration",
    "keywords": "Interface IRemoteRobotConfiguration Robot configuration information for remote (over the Internet) connections. This structure does not include IP address, instead it has a RemoteHost property which can contain an IP address or hostname and optionally include the port to connect with. Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public interface IRemoteRobotConfiguration Properties | Improve this Doc View Source Certificate Gets the certificate text. string Certificate { get; } Property Type String | Improve this Doc View Source Guid Gets the unique identifier. string Guid { get; } Property Type String | Improve this Doc View Source RemoteHost Gets the remote robot host and port. This can be an IP address (196.168.5.123) or host name (home.whatever.com\") optionally followed by a colon and the port to connect to (196.168.5.123:4545 or home.whatever.com:4444) string RemoteHost { get; } Property Type String | Improve this Doc View Source RobotName Gets the name of the robot. This is in the form \"Vector-XXXX\" string RobotName { get; } Property Type String | Improve this Doc View Source SerialNumber Gets the robot serial number. string SerialNumber { get; } Property Type String"
  },
  "api/Anki.Vector.IRobotConfiguration.html": {
    "href": "api/Anki.Vector.IRobotConfiguration.html",
    "title": "Interface IRobotConfiguration",
    "keywords": "Interface IRobotConfiguration Robot configuration information Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public interface IRobotConfiguration Properties | Improve this Doc View Source Certificate Gets the certificate text. string Certificate { get; } Property Type String | Improve this Doc View Source Guid Gets the unique identifier. string Guid { get; } Property Type String | Improve this Doc View Source IPAddress Gets the robot IP address IPAddress IPAddress { get; } Property Type IPAddress | Improve this Doc View Source RobotName Gets the name of the robot. This is in the form \"Vector-XXXX\" string RobotName { get; } Property Type String | Improve this Doc View Source SerialNumber Gets the robot serial number. string SerialNumber { get; } Property Type String Extension Methods Authentication.TryValidate(IRobotConfiguration) Authentication.Validate(IRobotConfiguration) Authentication.FindRobotAddress(IRobotConfiguration)"
  },
  "api/Anki.Vector.Capabilities.html": {
    "href": "api/Anki.Vector.Capabilities.html",
    "title": "Class Capabilities",
    "keywords": "Class Capabilities Features supported by the current robot firmware. Inheritance Object Capabilities Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class Capabilities Properties | Improve this Doc View Source CameraSettings Gets a value indicating whether camera settings are supported. public bool CameraSettings { get; } Property Type Boolean | Improve this Doc View Source HighResolutionImageCapture Gets a value indicating whether high resolution image capture are supported. public bool HighResolutionImageCapture { get; } Property Type Boolean | Improve this Doc View Source SayTextPitch Gets a value indicating whether SayText supports the pitch parameter. public bool SayTextPitch { get; } Property Type Boolean"
  },
  "index.html": {
    "href": "index.html",
    "title": "Anki Vector .NET SDK",
    "keywords": "Anki Vector .NET SDK The Vector SDK gives you direct access to Anki Vector 's unprecedented set of advanced sensors, AI capabilities, and robotics technologies including computer vision, intelligent mapping and navigation, and a groundbreaking collection of expressive animations. About this SDK This SDK gives full access to all of Vector's hardware and software features available from the most recent (and final) version of Vector's firmware. This even includes some features currently not available from of the official Python SDK including face enrollment and adjusting Vector's permanent settings. The API design follows the design of the Python SDK but deviates in a few places for simplicity or consistency with the gRPC API. Getting Started Prerequisites Vector is powered on. You have successfully created an Anki account. Vector has been set up with the Vector companion app. The Vector companion app is not currently connected to Vector. Vector is connected to the same network as your computer. You can see Vector’s eyes on his screen. Download Microsoft development tools If you working on Windows, download Visual Studio 2019 Community Edition to get started. This version is free for personal use. Download Visual Studio 2019 Community Edition To get started on Mac and Linux, you can download .NET Core 3.0. Download .NET Core 3.0 Install SDK package from nuget https://www.nuget.org/packages/Anki.Vector.SDK Make sure your Vector robot is connected to the same Wifi as your computer using the Vector companion app . Vector SDK Configuration and Authentication In order to use the SDK, you need authenticate with the robot and create a configuration file that is stored in your user profile. This SDK uses the same configuration file as the Python SDK and the Vector Explorer application. The easiest way to get setup with Vector on your Windows PC is to install Vector Explorer and configure your robot through that application. However, you can also use the command line VectorConfigure application on Windows, Linux, and Mac OS. You will be prompted for your robot’s name, ip address and serial number. You will also be asked for your Anki login and password. Make sure to use the same account that was used to set up your Vector. These credentials give full access to your robot, including camera stream, audio stream and data. Do not share these credentials . Vector Explorer: https://www.weekendrobot.com/vectorexplorer VectorConfigure: https://www.weekendrobot.com/devtools SDK Example / Tutorial Programs You can download the samples Visual Studio solution containing tutorial projects and management applications. Visit Anki.Vector.Samples GitHub project Download Sample Visual Studio solution Troubleshooting Tutorial program does not run Before running a the program, be sure you can see Vector’s eyes. If instead you see an image of a mobile device, the Customer Care Info screen, a missing Wifi icon, or something else, please complete setup of your Vector first and then you will be ready set up the SDK. Vector behaves unexpectedly You may need to reboot your robot when you are finished running programs with the Vector SDK. To reboot your Vector remove him from the charger and hold down his backpack button until he turns complete off. To turn him back on again, place him back on the charger. Can't find robot name Your Vector robot name looks like \"Vector-E5S6\". Find your robot name by placing Vector on the charger and double-clicking Vector’s backpack button. Can't find serial number Your Vector’s serial number looks like \"00e20142\". Find your robot serial number on the underside of Vector. Or, find the serial number from Vector’s debug screen: double-click his backpack, move his arms up and down, then look for “ESN” on his screen. Can’t find Vector’s IP address Your Vector IP address looks like \"192.168.40.134\". Find the IP address from Vector’s debug screen: double-click his backpack, move his arms up and down, then look for \"IP\" on his screen. Note that the SDK will attempt to find Vector's IP address automatically. Advanced Tips Asynchronous API All API calls that talk to Vector in this SDK are asynchronous methods. This means that methods in the SDK will return before the operation is completed. Each method returns a Task instance that updates when the operation completes or fails. The intended way to calls these methods is to declare your methods as async and use the await keyword for each call. This gives the illusion of using synchronous calls while supporting asynchronous operation. For more information on asynchronous programming with async and await , click here . Also you can look at all the code samples (see below) for more examples on using async / await with this SDK. Any methods that return a Task instance should be called with the await keyword. Any methods that use await should be declared async and return a Task . Event handlers and the main method of a project can be declared async and start most operations. Moving Vector between Wifi networks The SDK will automatically discover your Vector, even on a new WiFi network, using mDNS. If this doesn't work, you may have to specify the IP address explictly when connecting to Vector with the SDK. Using multiple Vectors If your computer is configured with more than one Vector robot, you can specify which robot you want to use by passing its serial number or robot name as a parameter to the Robot.NewConnection method. using (var robot = await Robot.NewConnection(\"00e20142\")) { await robot.Control.RequestControl(); await robot.Behavior.SayText(\"Hello World\"); } or using (var robot = await Robot.NewConnection(\"Vector-B2R5\")) { await robot.Control.RequestControl(); await robot.Behavior.SayText(\"Hello World\"); } Keeping Vector Still Between SDK Scripts Vector can be controlled so that he will not move between SDK scripts. There is an example command-line application in the Anki.Vector.Samples project and a Windows Tray application available at https://www.weekendrobot.com/devtools . While normal robot behaviors are suppressed, Vector may look 'broken'. Closing the SDK scripts, disconnecting from the robot, or restarting the robot will all release behavior control. Getting Help There are numerous places to get help with this SDK. Official Anki developer forums : https://forums.anki.com/ Anki Vector developer subreddit : https://www.reddit.com/r/ankivectordevelopers Anki robots Discord chat : https://discord.gg/FT8EYwu Contributing View the Anki.Vector.SDK GitHub Project for information on contributing."
  },
  "api/Anki.Vector.Events.ObjectEventType.html": {
    "href": "api/Anki.Vector.Events.ObjectEventType.html",
    "title": "Enum ObjectEventType",
    "keywords": "Enum ObjectEventType Object event type Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum ObjectEventType Fields Name Description CubeConnectionLost Cube connection lost None No event ObjectAvailable Object available event ObjectConnectionState Object connection state event ObjectMoved Object moved event ObjectStoppedMoving Object stopped moving event ObjectTapped Object tapped ObjectUpAxisChanged Object up axis changed event RobotObservedObject Object observed"
  },
  "api/Anki.Vector.ControlPriority.html": {
    "href": "api/Anki.Vector.ControlPriority.html",
    "title": "Enum ControlPriority",
    "keywords": "Enum ControlPriority Vector control priority level Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public enum ControlPriority Fields Name Description Default Normal priority level. Directly under mandatory physical reactions. OverrideBehaviors Highest priority level. Suppresses most automatic physical reactions, use with caution. ReserveControl Enable long-running SDK control between script execution. Not to be used for regular behavior control."
  },
  "api/Anki.Vector.MotorSpeed.html": {
    "href": "api/Anki.Vector.MotorSpeed.html",
    "title": "Enum MotorSpeed",
    "keywords": "Enum MotorSpeed The speed of the motors for drive and move Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public enum MotorSpeed Fields Name Description Fast The fast speed Medium The medium (default) speed Slow The slow speed"
  },
  "api/Anki.Vector.MoveDirection.html": {
    "href": "api/Anki.Vector.MoveDirection.html",
    "title": "Enum MoveDirection",
    "keywords": "Enum MoveDirection The direction for moving head or lift (up, down) Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public enum MoveDirection Fields Name Description Down Down movement None No up/down movement Up Up movement"
  },
  "api/Anki.Vector.Events.FaceEnrollmentResult.html": {
    "href": "api/Anki.Vector.Events.FaceEnrollmentResult.html",
    "title": "Enum FaceEnrollmentResult",
    "keywords": "Enum FaceEnrollmentResult Face enrollment result Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum FaceEnrollmentResult Fields Name Description Cancelled Cancelled Incomplete Incomplete NameInUse Name in use NameStorageFull Name storage file SaveFailed Face save failed SawMultipleFaces Saw multiple faces SawWrongFace Saw the wrong face Success Successfully enrolled face TimedOut Timed out UnknownFailure Unknown failure"
  },
  "api/Anki.Vector.Events.UserIntent.html": {
    "href": "api/Anki.Vector.Events.UserIntent.html",
    "title": "Enum UserIntent",
    "keywords": "Enum UserIntent List of UserIntent events available to the SDK. Vector's voice recognition allows for variation in grammar and word selection, so the examples are not the only way to invoke the voice commands. This list reflect only the voice commands available to the SDK, as some are not available for development use. Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum UserIntent Fields Name Description CharacterAge example \"How old are you?\" CheckTimer example \"Check the timer.\" ExploreStart example \"Go explore.\" GlobalStop example \"Stop the timer.\" GreetingGoodbye example \"Goodbye!\" GreetingGoodmorning example \"Good morning!\" GreetingHello example \"Hello!\" ImperativeAbuse example \"I hate you.\" ImperativeAffirmative example \"Yes.\" ImperativeApology example \"I'm sorry.\" ImperativeCome example \"Come here.\" ImperativeDance example \"Dance.\" ImperativeFetchCube example \"Fetch your cube.\" ImperativeFindCube example \"Find your cube.\" ImperativeLookAtMe example \"Look at me.\" ImperativeLove example \"I love you.\" ImperativeNegative example \"No.\" ImperativePraise example \"Good Robot.\" ImperativeScold example \"Bad Robot.\" ImperativeVolumeDown example \"Volume down.\" ImperativeVolumeLevel example \"Volume 2.\" ImperativeVolumeUp example \"Volume up.\" KnowledgeQuestion example \"I have a question.\" MovementBackward example \"Go backward.\" MovementForward example \"Go forward.\" MovementTurnAround example \"Turn around.\" MovementTurnLeft example \"Turn left.\" MovementTurnRight example \"Turn right.\" NamesAsk example \"What's my name?\" PlayAnyGame example \"Play a game.\" PlayAnyTrick example \"Play a trick.\" PlayBlackjack example \"Let's play Blackjack.\" PlayFistBump example \"Fist bump.\" PlayPickupCube example \"Pick up your cube.\" PlayPopAWheelie example \"Pop a wheelie.\" PlayRollCube example \"Roll your cube.\" SeasonalHappyHolidays example \"Happy holidays!\" SeasonalHappyNewYear example \"Happy new year!\" SetTimer example \"Set timer for 10 minutes\" ShowClock example \"What time is it?\" TakePhoto example \"Take a selfie.\" WeatherResponse example \"What is the weather report?\""
  },
  "api/Anki.Vector.Exceptions.VectorAuthenticationFailureType.html": {
    "href": "api/Anki.Vector.Exceptions.VectorAuthenticationFailureType.html",
    "title": "Enum VectorAuthenticationFailureType",
    "keywords": "Enum VectorAuthenticationFailureType Type of authentication failure. Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public enum VectorAuthenticationFailureType Fields Name Description Connection Unable to connect to robot for authentication. IPAddress The IP address is missing and could not be determined automatically. Login The email address or password is not correct. SerialNumber The serial number is not valid. Unknown The authentication failure type is not known."
  },
  "api/Anki.Vector.Types.Angle.html": {
    "href": "api/Anki.Vector.Types.Angle.html",
    "title": "Class Angle",
    "keywords": "Class Angle Angle extensions Inheritance Object Angle Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public static class Angle Methods | Improve this Doc View Source Degrees(Int32) Convert degrees into radians public static float Degrees(this int degrees) Parameters Type Name Description Int32 degrees The number of degrees. Returns Type Description Single Radians | Improve this Doc View Source Degrees(Single) Convert degrees into radians public static float Degrees(this float degrees) Parameters Type Name Description Single degrees The number of degrees. Returns Type Description Single Radians"
  },
  "api/Anki.Vector.Types.AttentionTransferReason.html": {
    "href": "api/Anki.Vector.Types.AttentionTransferReason.html",
    "title": "Enum AttentionTransferReason",
    "keywords": "Enum AttentionTransferReason The reason for the last attention transfer Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum AttentionTransferReason Fields Name Description Invalid NoCloudConnection NoWifi UnmatchedIntent"
  },
  "api/Anki.Vector.Types.BatteryLevel.html": {
    "href": "api/Anki.Vector.Types.BatteryLevel.html",
    "title": "Enum BatteryLevel",
    "keywords": "Enum BatteryLevel Battery level Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum BatteryLevel Fields Name Description Full This state can only be achieved when Vector is on the charger Low 3.6V or less. If on charger, 4V or less. Nominal Normal operating levels. Unknown The level is unknown"
  },
  "api/Anki.Vector.Types.RobotLifetimeStats.html": {
    "href": "api/Anki.Vector.Types.RobotLifetimeStats.html",
    "title": "Class RobotLifetimeStats",
    "keywords": "Class RobotLifetimeStats Vector lifetime statistics Inheritance Object RobotLifetimeStats Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class RobotLifetimeStats Properties | Improve this Doc View Source AliveSeconds Gets the number of seconds Vector has been alive. [JsonProperty(\"Alive.seconds\")] public int AliveSeconds { get; } Property Type Int32 | Improve this Doc View Source DistanceDriven Gets the distance driven as millions of centimeters. [JsonProperty(\"Odom.Body\")] public decimal DistanceDriven { get; } Property Type Decimal | Improve this Doc View Source LifetimeSensoryScore Gets the lifetime sensory score. [JsonProperty(\"Stim.CumlPosDelta\")] public int LifetimeSensoryScore { get; } Property Type Int32 | Improve this Doc View Source PettingDuration Gets the duration of the petting in milliseconds. [JsonProperty(\"Pet.ms\")] public int PettingDuration { get; } Property Type Int32 | Improve this Doc View Source ReactedToTriggerWord Gets the number of times Vector reacted to the trigger word (Hey Vector). [JsonProperty(\"BStat.ReactedToTriggerWord\")] public int ReactedToTriggerWord { get; } Property Type Int32 | Improve this Doc View Source UtilitiesUsed Gets the number of utilities used. [JsonProperty(\"FeatureType.Utility\")] public int UtilitiesUsed { get; } Property Type Int32"
  },
  "api/Anki.Vector.Types.RobotSettings.html": {
    "href": "api/Anki.Vector.Types.RobotSettings.html",
    "title": "Class RobotSettings",
    "keywords": "Class RobotSettings THe permanently stored Vector robot settings Inheritance Object RobotSettings Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class RobotSettings Fields | Improve this Doc View Source Locales The supported locales public static readonly IReadOnlyDictionary<string, string> Locales Field Type IReadOnlyDictionary < String , String > | Improve this Doc View Source Timezones The supported timezones public static readonly IReadOnlyList<string> Timezones Field Type IReadOnlyList < String > Properties | Improve this Doc View Source ButtonWakeWord Gets or sets the button wake word. This is which service (Vector or Alexa) responds when his back button is pressed. [JsonProperty(\"button_wakeword\")] public ButtonWakeWord ButtonWakeWord { get; set; } Property Type ButtonWakeWord | Improve this Doc View Source Clock24Hour Gets or sets a value indicating whether clock is display in 24 hour style. [JsonProperty(\"clock_24_hour\")] public bool Clock24Hour { get; set; } Property Type Boolean | Improve this Doc View Source DefaultLocation Gets or sets the default physical location of Vector (city, state/prov, country). [JsonProperty(\"default_location\")] public string DefaultLocation { get; set; } Property Type String | Improve this Doc View Source DistIsMetric Gets or sets a value indicating whether distance is displayed in metric. [JsonProperty(\"dist_is_metric\")] public bool DistIsMetric { get; set; } Property Type Boolean | Improve this Doc View Source EyeColor Gets or sets Vector's eye color [JsonProperty(\"eye_color\")] public EyeColor EyeColor { get; set; } Property Type EyeColor | Improve this Doc View Source Locale Gets or sets the language locale of Vector (en_US, en_UK, en_AU). [JsonProperty(\"locale\")] public string Locale { get; set; } Property Type String | Improve this Doc View Source MasterVolume Gets or sets the master volume. [JsonProperty(\"master_volume\")] public RobotVolume MasterVolume { get; set; } Property Type RobotVolume | Improve this Doc View Source TempIsFahrenheit Gets or sets a value indicating whether temperature is displayed in Fahrenheit. [JsonProperty(\"temp_is_fahrenheit\")] public bool TempIsFahrenheit { get; set; } Property Type Boolean | Improve this Doc View Source TimeZone Gets or sets the time zone as a standard timezone database name (e.g. \"America/Los_Angeles\") [JsonProperty(\"time_zone\")] public string TimeZone { get; set; } Property Type String"
  },
  "api/Anki.Vector.Events.StatusType.html": {
    "href": "api/Anki.Vector.Events.StatusType.html",
    "title": "Enum StatusType",
    "keywords": "Enum StatusType Status type Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum StatusType Fields Name Description FaceEnrollmentCompleted Face enrollment completed event FeatureStatus AI Feature Status MeetVictorFaceScanComplete Face scan completed event MeetVictorFaceScanStarted Face scan started event None No event"
  },
  "api/Anki.Vector.Events.CubeBatteryLevel.html": {
    "href": "api/Anki.Vector.Events.CubeBatteryLevel.html",
    "title": "Enum CubeBatteryLevel",
    "keywords": "Enum CubeBatteryLevel Cube battery level Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum CubeBatteryLevel Fields Name Description Low Cube battery is low Normal Cube battery is normal"
  },
  "api/Anki.Vector.Events.EventType.html": {
    "href": "api/Anki.Vector.Events.EventType.html",
    "title": "Enum EventType",
    "keywords": "Enum EventType Event type Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum EventType Fields Name Description ConnectionResponse Connection response event CubeBattery Cube battery event KeepAlive Keep alive event MirrorModeDisabled Mirror mode disabled event None No event was triggered ObjectEvent Object event PhotoTaken Photo taken event RobotChangedObservedFaceId Detected faced changed RobotObservedFace Observed face event RobotState Robot state event StimulationInfo Stimulation info event TimeStampedStatus Timestamped status event VisionModesAutoDisabled Vision modes auto disabled event WakeWord Wake word event"
  },
  "api/Anki.Vector.Events.JdocType.html": {
    "href": "api/Anki.Vector.Events.JdocType.html",
    "title": "Enum JdocType",
    "keywords": "Enum JdocType The JDOC type that changed Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum JdocType Fields Name Description AccountSettings The account settings RobotLifetimeStats The robot lifetime stats RobotSettings The robot settings UserEntitlements The user entitlements"
  },
  "api/Anki.Vector.Events.UnexpectedMovementSide.html": {
    "href": "api/Anki.Vector.Events.UnexpectedMovementSide.html",
    "title": "Enum UnexpectedMovementSide",
    "keywords": "Enum UnexpectedMovementSide The side of the unexpected movement Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum UnexpectedMovementSide Fields Name Description Back The back side Front The front side Left The left side Right The right side Unknown The side is unknown"
  },
  "api/Anki.Vector.Events.UnexpectedMovementType.html": {
    "href": "api/Anki.Vector.Events.UnexpectedMovementType.html",
    "title": "Enum UnexpectedMovementType",
    "keywords": "Enum UnexpectedMovementType Unexpected movement type Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum UnexpectedMovementType Fields Name Description RotatingWithoutMotors Rotating without motors TurnedButStopped Turned but stopped TurnedInOppositeDirection Turned in opposite direction TurnedInSameDirection Turned in same direction"
  },
  "api/Anki.Vector.Events.WakeWordEventType.html": {
    "href": "api/Anki.Vector.Events.WakeWordEventType.html",
    "title": "Enum WakeWordEventType",
    "keywords": "Enum WakeWordEventType Wake word event types Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public enum WakeWordEventType Fields Name Description None No event WakeWordBegin Wake word started event WakeWordEnd Wake work ended event"
  },
  "api/Anki.Vector.Types.Image.html": {
    "href": "api/Anki.Vector.Types.Image.html",
    "title": "Class Image",
    "keywords": "Class Image Represents a single image captured from the robot. Inheritance Object Image Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class Image Properties | Improve this Doc View Source Data Gets the image data. public byte[] Data { get; } Property Type Byte [] | Improve this Doc View Source Encoding Gets the image encoding. public ImageEncoding Encoding { get; } Property Type ImageEncoding | Improve this Doc View Source FrameTimestamp Gets the frame robot timestamp. public uint FrameTimestamp { get; } Property Type UInt32 | Improve this Doc View Source ImageId Gets the image identifier. public uint ImageId { get; } Property Type UInt32"
  },
  "api/Anki.Vector.Types.ImageEncoding.html": {
    "href": "api/Anki.Vector.Types.ImageEncoding.html",
    "title": "Enum ImageEncoding",
    "keywords": "Enum ImageEncoding The image encoding Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum ImageEncoding Fields Name Description Bayer JpegColor JpegColorHalfWidth JpegGray JpegMinimizedColor JpegMinimizedGray NoneImageEncoding RawGray RawRgb Yuv420Sp Yuyv"
  },
  "api/Anki.Vector.Types.UpdateStatus.html": {
    "href": "api/Anki.Vector.Types.UpdateStatus.html",
    "title": "Enum UpdateStatus",
    "keywords": "Enum UpdateStatus Update status enum Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum UpdateStatus Fields Name Description InProgressDownload The download is in progress NoUpdate The no update to the current firmware ReadyToInstall New firmware is ready to install"
  },
  "api/Anki.Vector.Types.VersionState.html": {
    "href": "api/Anki.Vector.Types.VersionState.html",
    "title": "Class VersionState",
    "keywords": "Class VersionState The versioning information for Vector. Inheritance Object VersionState Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class VersionState Properties | Improve this Doc View Source EngineBuildId Gets the engine build identifier. public string EngineBuildId { get; } Property Type String | Improve this Doc View Source OsVersion Gets the OS version. public string OsVersion { get; } Property Type String"
  },
  "api/Anki.Vector.Types.KnownFace.html": {
    "href": "api/Anki.Vector.Types.KnownFace.html",
    "title": "Class KnownFace",
    "keywords": "Class KnownFace A face that Vector has detected. Inheritance Object KnownFace Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class KnownFace Properties | Improve this Doc View Source FaceId Gets the internal ID assigned to the face. public int FaceId { get; } Property Type Int32 | Improve this Doc View Source FirstEnrolled Gets the first enrolled. public DateTime FirstEnrolled { get; } Property Type DateTime | Improve this Doc View Source LastSeen Gets the last seen. public DateTime LastSeen { get; } Property Type DateTime | Improve this Doc View Source LastSeenTimestamp Gets the last seen timestamp. public DateTimeOffset LastSeenTimestamp { get; } Property Type DateTimeOffset | Improve this Doc View Source LastUpdated Gets the last updated. public DateTime LastUpdated { get; } Property Type DateTime | Improve this Doc View Source Name Gets the name Vector has associated with the face. public string Name { get; } Property Type String | Improve this Doc View Source SecondsSinceFirstEnrolled Gets the seconds since face was first enrolled. public long SecondsSinceFirstEnrolled { get; } Property Type Int64 | Improve this Doc View Source SecondsSinceLastSeen Gets the seconds since face was last seen. public long SecondsSinceLastSeen { get; } Property Type Int64 | Improve this Doc View Source SecondsSinceLastUpdated Gets the seconds since face was last updated. public long SecondsSinceLastUpdated { get; } Property Type Int64"
  },
  "api/Anki.Vector.Types.RobotVolume.html": {
    "href": "api/Anki.Vector.Types.RobotVolume.html",
    "title": "Enum RobotVolume",
    "keywords": "Enum RobotVolume The permanent settings volume level Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum RobotVolume Fields Name Description High High volume Low Low volume Medium Medium volume MediumHigh Medium high volume MediumLow Medium low volume Mute Vector is muted"
  },
  "api/Anki.Vector.Types.StatusCode.html": {
    "href": "api/Anki.Vector.Types.StatusCode.html",
    "title": "Enum StatusCode",
    "keywords": "Enum StatusCode Status result Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum StatusCode Fields Name Description ErrorUpdateInProgress Update is in progress Forbidden Forbidden NotFound Not found Ok Ok RequestProcessing Request is processing ResponseReceived Response received Unknown Unknown Extension Methods StatusCodeExtensions.EnsureSuccess()"
  },
  "api/Anki.Vector.Objects.CustomObject.html": {
    "href": "api/Anki.Vector.Objects.CustomObject.html",
    "title": "Class CustomObject",
    "keywords": "Class CustomObject An object defined by the SDK observed by the robot. The object will reference a CustomObjectArchetype , with additional instance data. Inheritance Object RobotObject ObservableObject ObjectWithId CustomObject Implements INotifyPropertyChanged Inherited Members ObjectWithId.ObjectId ObjectWithId.ToString() ObservableObject.IsVisible ObservableObject.LastImageRect ObservableObject.LastObservedTime ObservableObject.LastObservedTimestamp ObservableObject.Pose ObservableObject.LastEventTime RobotObject.PropertyChanged Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public class CustomObject : ObjectWithId, INotifyPropertyChanged Properties | Improve this Doc View Source Archetype Gets the archetype defining this custom object's properties. public CustomObjectArchetype Archetype { get; } Property Type CustomObjectArchetype | Improve this Doc View Source ObjectTypeName Gets the name of the object type. public override string ObjectTypeName { get; } Property Type String Overrides ObservableObject.ObjectTypeName Implements System.ComponentModel.INotifyPropertyChanged See Also ObservableObject"
  },
  "api/Anki.Vector.Objects.CustomCubeArchetype.html": {
    "href": "api/Anki.Vector.Objects.CustomCubeArchetype.html",
    "title": "Class CustomCubeArchetype",
    "keywords": "Class CustomCubeArchetype Custom object cube definition Inheritance Object CustomObjectArchetype CustomCubeArchetype Inherited Members CustomObjectArchetype.CustomObjectType CustomObjectArchetype.MarkerWidthMm CustomObjectArchetype.MarkerHeightMm Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public class CustomCubeArchetype : CustomObjectArchetype Properties | Improve this Doc View Source Marker Gets or sets the marker affixed to every side of the cube. public CustomObjectMarker Marker { get; set; } Property Type CustomObjectMarker | Improve this Doc View Source SizeMm Gets or sets the size of each side of the cube (in millimeters). public float SizeMm { get; set; } Property Type Single Methods | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() See Also CustomObjectArchetype"
  },
  "api/Anki.Vector.Objects.CustomBoxArchetype.html": {
    "href": "api/Anki.Vector.Objects.CustomBoxArchetype.html",
    "title": "Class CustomBoxArchetype",
    "keywords": "Class CustomBoxArchetype Custom object cuboid definition. Inheritance Object CustomObjectArchetype CustomBoxArchetype Inherited Members CustomObjectArchetype.CustomObjectType CustomObjectArchetype.MarkerWidthMm CustomObjectArchetype.MarkerHeightMm Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public class CustomBoxArchetype : CustomObjectArchetype Properties | Improve this Doc View Source DepthMm Gets or sets the depth of the object (in millimeters) (X axis). public float DepthMm { get; set; } Property Type Single | Improve this Doc View Source HeightMm Gets or sets the height of the object (in millimeters) (Z axis). public float HeightMm { get; set; } Property Type Single | Improve this Doc View Source MarkerBack Gets or sets the marker affixed to the back of the object. public CustomObjectMarker MarkerBack { get; set; } Property Type CustomObjectMarker | Improve this Doc View Source MarkerBottom Gets or sets the marker affixed to the bottom of the object. public CustomObjectMarker MarkerBottom { get; set; } Property Type CustomObjectMarker | Improve this Doc View Source MarkerFront Gets or sets the marker affixed to the front of the object. public CustomObjectMarker MarkerFront { get; set; } Property Type CustomObjectMarker | Improve this Doc View Source MarkerLeft Gets or sets the marker affixed to the left of the object. public CustomObjectMarker MarkerLeft { get; set; } Property Type CustomObjectMarker | Improve this Doc View Source MarkerRight Gets or sets the marker affixed to the right of the object. public CustomObjectMarker MarkerRight { get; set; } Property Type CustomObjectMarker | Improve this Doc View Source MarkerTop Gets or sets the marker affixed to the top of the object. public CustomObjectMarker MarkerTop { get; set; } Property Type CustomObjectMarker | Improve this Doc View Source WidthMm Gets or sets the width of the object (in millimeters) (Y axis). public float WidthMm { get; set; } Property Type Single Methods | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() See Also CustomObjectArchetype"
  },
  "api/Anki.Vector.Objects.Charger.html": {
    "href": "api/Anki.Vector.Objects.Charger.html",
    "title": "Class Charger",
    "keywords": "Class Charger Vector’s charger object, which the robot can observe and drive toward. We get an ObjectObserved message when the robot sees the charger. Inheritance Object RobotObject ObservableObject ObjectWithId Charger Implements INotifyPropertyChanged Inherited Members ObjectWithId.ObjectId ObjectWithId.ToString() ObservableObject.IsVisible ObservableObject.LastImageRect ObservableObject.LastObservedTime ObservableObject.LastObservedTimestamp ObservableObject.Pose ObservableObject.LastEventTime RobotObject.PropertyChanged Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public class Charger : ObjectWithId, INotifyPropertyChanged Properties | Improve this Doc View Source ObjectTypeName Gets the name of the object type. public override string ObjectTypeName { get; } Property Type String Overrides ObservableObject.ObjectTypeName Implements System.ComponentModel.INotifyPropertyChanged See Also ObservableObject"
  },
  "api/Anki.Vector.Exceptions.VectorControlException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorControlException.html",
    "title": "Class VectorControlException",
    "keywords": "Class VectorControlException Unable to run a function which requires behavior control. Inheritance Object Exception VectorException VectorControlException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorControlException : VectorException, ISerializable Constructors | Improve this Doc View Source VectorControlException() Initializes a new instance of the VectorControlException class. public VectorControlException() | Improve this Doc View Source VectorControlException(String) Initializes a new instance of the VectorControlException class. public VectorControlException(string message) Parameters Type Name Description String message The message. Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.Exceptions.VectorConnectionException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorConnectionException.html",
    "title": "Class VectorConnectionException",
    "keywords": "Class VectorConnectionException Connection to Vector failed Inheritance Object Exception VectorException VectorConnectionException VectorInvalidValueException VectorNotFoundException VectorTimeoutException VectorUnauthenticatedException VectorUnavailableException VectorUnimplementedException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorConnectionException : VectorException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.Events.WakeWordEventArgs.html": {
    "href": "api/Anki.Vector.Events.WakeWordEventArgs.html",
    "title": "Class WakeWordEventArgs",
    "keywords": "Class WakeWordEventArgs Wake word event args Inheritance Object EventArgs RobotEventArgs WakeWordEventArgs WakeWordBeginEventArgs WakeWordEndEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public abstract class WakeWordEventArgs : RobotEventArgs Properties | Improve this Doc View Source WakeWordEventType Gets the wake word event type. public WakeWordEventType WakeWordEventType { get; } Property Type WakeWordEventType See Also RobotEventArgs"
  },
  "api/Anki.Vector.Events.WakeWordEndEventArgs.html": {
    "href": "api/Anki.Vector.Events.WakeWordEndEventArgs.html",
    "title": "Class WakeWordEndEventArgs",
    "keywords": "Class WakeWordEndEventArgs Wake word end event args. This is sent when the response (and potential intent) is received from the cloud. This is sent before the UserIntent event (if any). Inheritance Object EventArgs RobotEventArgs WakeWordEventArgs WakeWordEndEventArgs Inherited Members WakeWordEventArgs.WakeWordEventType RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class WakeWordEndEventArgs : WakeWordEventArgs Properties | Improve this Doc View Source IntentHeard Gets a value indicating whether the intent was heard. True if a sentence was recognized with an associated intent; false otherwise. public bool IntentHeard { get; } Property Type Boolean | Improve this Doc View Source IntentJson Gets the intent and parameters as a JSON formatted string. This is empty if an intent was not heard (IntentHeard is false), or if the client does not have control. In the later case, a UserIntent event with the intent JSON data will be sent. public string IntentJson { get; } Property Type String See Also EventArgs"
  },
  "api/Anki.Vector.AnimationComponent.html": {
    "href": "api/Anki.Vector.AnimationComponent.html",
    "title": "Class AnimationComponent",
    "keywords": "Class AnimationComponent Animation related classes, functions, events and values. Animations represent a sequence of highly coordinated movements, faces, lights, and sounds used to demonstrate an emotion or reaction. Animations can control the following tracks: head, lift, treads, face, audio and backpack lights. There are two ways to play an animation on Vector: PlayAnimation(Animation, UInt32, Boolean, Boolean, Boolean) and PlayAnimationTrigger(AnimationTrigger, UInt32, Boolean, Boolean, Boolean, Boolean) . For PlayAnimationTrigger, you select a pre-defined group of animations, and the robot will choose which animation from the group to run when you execute the method. When calling PlayAnimation, you select the specific animation you want the robot to run. We advise you to use PlayAnimationTrigger instead of PlayAnimation, since individual animations can be deleted between Vector OS versions. By default, when an SDK program starts, the SDK will request a list of known animation triggers and animations from the robot, which will be loaded and available from GetAnimationTriggers() and GetAnimations() , respectively. Inheritance Object RobotObject Component AnimationComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class AnimationComponent : Component, INotifyPropertyChanged Properties | Improve this Doc View Source IsAnimating Gets a value indicating whether the SDK is running an animation public bool IsAnimating { get; } Property Type Boolean Methods | Improve this Doc View Source GetAnimations() Gets the list of animations returned from the robot. Animations are dynamically retrieved from the robot the first time this method is called and cached for subsequent requests. public Task<IReadOnlyDictionary<string, Animation>> GetAnimations() Returns Type Description Task < IReadOnlyDictionary < String , Animation >> A task that represents the asynchronous operation; the task result contains a dictionary of animations by name. | Improve this Doc View Source GetAnimationTriggers() Gets the the set of animation triggers returned from the robot. Animation triggers are dynamically retrieved from the robot the first time this method is called and cached for subsequent requests. Playing an animation trigger causes the robot to play an animation of a particular type. The robot may pick one of a number of actual animations to play based on Vector’s mood or emotion, or with random weighting. Thus playing the same trigger twice may not result in the exact same underlying animation playing twice. To play an exact animation, use PlayAnimation(Animation, UInt32, Boolean, Boolean, Boolean) . public Task<IReadOnlyDictionary<string, AnimationTrigger>> GetAnimationTriggers() Returns Type Description Task < IReadOnlyDictionary < String , AnimationTrigger >> A task that represents the asynchronous operation; the task result contains a dictionary of animations triggers by name. | Improve this Doc View Source Play(IAnimation, UInt32, Boolean, Boolean, Boolean, Boolean) Starts an animation or animation trigger playing on robot. public Task<StatusCode> Play(IAnimation animationOrTrigger, uint loopCount = 1U, bool useLiftSafe = false, bool ignoreBodyTrack = false, bool ignoreHeadTrack = false, bool ignoreLiftTrack = false) Parameters Type Name Description IAnimation animationOrTrigger The animation or animation trigger to play. UInt32 loopCount The loop count. Boolean useLiftSafe if set to true automatically ignore the lift track if Vector is currently carrying an object. Boolean ignoreBodyTrack if set to true ignore the animation track for Vector’s body (i.e. the wheels / treads). Boolean ignoreHeadTrack if set to true ignore the animation track for Vector’s head. Boolean ignoreLiftTrack if set to true ignore the animation track for Vector’s lift. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . Exceptions Type Condition ArgumentException Parameter is not an Animation or AnimationTrigger | Improve this Doc View Source PlayAnimation(Animation, UInt32, Boolean, Boolean, Boolean) Starts an animation playing on a robot. public Task<StatusCode> PlayAnimation(Animation animation, uint loopCount = 1U, bool ignoreBodyTrack = false, bool ignoreHeadTrack = false, bool ignoreLiftTrack = false) Parameters Type Name Description Animation animation The animation to play. UInt32 loopCount Number of times to play the animation. Boolean ignoreBodyTrack if set to true ignore the animation track for Vector’s body (i.e. the wheels / treads). Boolean ignoreHeadTrack if set to true ignore the animation track for Vector’s head. Boolean ignoreLiftTrack if set to true ignore the animation track for Vector’s lift. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source PlayAnimation(String, UInt32, Boolean, Boolean, Boolean) Starts an animation playing on a robot. public Task<StatusCode> PlayAnimation(string animationName, uint loopCount = 1U, bool ignoreBodyTrack = false, bool ignoreHeadTrack = false, bool ignoreLiftTrack = false) Parameters Type Name Description String animationName Name of the animation to play. UInt32 loopCount Number of times to play the animation. Boolean ignoreBodyTrack if set to true ignore the animation track for Vector’s body (i.e. the wheels / treads). Boolean ignoreHeadTrack if set to true ignore the animation track for Vector’s head. Boolean ignoreLiftTrack if set to true ignore the animation track for Vector’s lift. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . Exceptions Type Condition KeyNotFoundException Unknown animation '{animationName}' | Improve this Doc View Source PlayAnimationTrigger(AnimationTrigger, UInt32, Boolean, Boolean, Boolean, Boolean) Starts an animation trigger playing on a robot. Playing a trigger requests that an animation of a certain class starts playing, rather than an exact animation name. public Task<StatusCode> PlayAnimationTrigger(AnimationTrigger animationTrigger, uint loopCount = 1U, bool useLiftSafe = false, bool ignoreBodyTrack = false, bool ignoreHeadTrack = false, bool ignoreLiftTrack = false) Parameters Type Name Description AnimationTrigger animationTrigger The animation trigger to play. UInt32 loopCount The loop count. Boolean useLiftSafe if set to true automatically ignore the lift track if Vector is currently carrying an object. Boolean ignoreBodyTrack if set to true ignore the animation track for Vector’s body (i.e. the wheels / treads). Boolean ignoreHeadTrack if set to true ignore the animation track for Vector’s head. Boolean ignoreLiftTrack if set to true ignore the animation track for Vector’s lift. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source PlayAnimationTrigger(String, UInt32, Boolean, Boolean, Boolean, Boolean) Starts an animation trigger playing on a robot. Playing a trigger requests that an animation of a certain class starts playing, rather than an exact animation name. public Task<StatusCode> PlayAnimationTrigger(string animationTriggerName, uint loopCount = 1U, bool useLiftSafe = false, bool ignoreBodyTrack = false, bool ignoreHeadTrack = false, bool ignoreLiftTrack = false) Parameters Type Name Description String animationTriggerName Name of the animation trigger to play. UInt32 loopCount The loop count. Boolean useLiftSafe if set to true automatically ignore the lift track if Vector is currently carrying an object. Boolean ignoreBodyTrack if set to true ignore the animation track for Vector’s body (i.e. the wheels / treads). Boolean ignoreHeadTrack if set to true ignore the animation track for Vector’s head. Boolean ignoreLiftTrack if set to true ignore the animation track for Vector’s lift. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source WaitForAnimationCompletion() Waits for the current animation to complete. The task will complete when animation is finished. If no animation is running, this method will return immediately. public Task<bool> WaitForAnimationCompletion() Returns Type Description Task < Boolean > A task that represents the asynchronous operation. The task result is false if no task was running. Implements System.ComponentModel.INotifyPropertyChanged See Also Component"
  },
  "api/Anki.Vector.Events.DisconnectedEventArgs.html": {
    "href": "api/Anki.Vector.Events.DisconnectedEventArgs.html",
    "title": "Class DisconnectedEventArgs",
    "keywords": "Class DisconnectedEventArgs Event args for the disconnected event Inheritance Object EventArgs DisconnectedEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class DisconnectedEventArgs : EventArgs See Also EventArgs"
  },
  "api/Anki.Vector.AudioComponent.html": {
    "href": "api/Anki.Vector.AudioComponent.html",
    "title": "Class AudioComponent",
    "keywords": "Class AudioComponent Support for Vector’s speakers Vector's speakers can be used for playing user-provided audio. You can use the PlayStream(Stream, UInt32, UInt32) method to play a stream of 16bit mono audio data. Inheritance Object RobotObject Component AudioComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class AudioComponent : Component, INotifyPropertyChanged Fields | Improve this Doc View Source MaxRobotAudioChunkSize The maximum robot audio chunk size public const int MaxRobotAudioChunkSize = 1024 Field Type Int32 Properties | Improve this Doc View Source IsPlaybackActive Gets a value indicating whether vector is currently playing back audio public bool IsPlaybackActive { get; } Property Type Boolean Methods | Improve this Doc View Source CancelPlayback() Cancels the audio playback public Task CancelPlayback() Returns Type Description Task A task that represents the asynchronous operation. | Improve this Doc View Source PlayStream(Stream, UInt32, UInt32) Plays audio using Vector's speakers. public Task<PlaybackResult> PlayStream(Stream stream, uint frameRate, uint volume = 50U) Parameters Type Name Description Stream stream 16bit audio byte stream containing 1 channel. UInt32 frameRate The frame rate between 8000-16025 hz. UInt32 volume The audio playback volume level (0-100). Returns Type Description Task < PlaybackResult > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source SetMasterVolume(MasterVolumeLevel) Sets the master volume. Note that muting the robot is not supported from the SDK. public Task<StatusCode> SetMasterVolume(MasterVolumeLevel volumeLevel) Parameters Type Name Description MasterVolumeLevel volumeLevel The volume level. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Anki.Vector.WorldComponent.html": {
    "href": "api/Anki.Vector.WorldComponent.html",
    "title": "Class WorldComponent",
    "keywords": "Class WorldComponent Vector’s known view of his world. This view includes objects and faces it knows about and can currently see with its camera. Inheritance Object RobotObject Component WorldComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class WorldComponent : Component, INotifyPropertyChanged Fields | Improve this Doc View Source ObjectVisibilityTimeout The object visibility timeout in milliseconds public const int ObjectVisibilityTimeout = 2500 Field Type Int32 Properties | Improve this Doc View Source Charger Gets the charger if it has been seen by the robot, otherwise this value is null. public Charger Charger { get; } Property Type Charger | Improve this Doc View Source IsCubeConnected Gets a value indicating whether the is cube connected. public bool IsCubeConnected { get; } Property Type Boolean | Improve this Doc View Source LightCube Gets the light cube if it has been seen by the robot, otherwise this value is null. public LightCube LightCube { get; } Property Type LightCube | Improve this Doc View Source Objects Gets the all objects currently tracked in the world public ReadOnlyObservableCollection<ObservableObject> Objects { get; } Property Type ReadOnlyObservableCollection < ObservableObject > Methods | Improve this Doc View Source ConnectCube() Attempt to connect to a cube. If a cube is currently connected, this will do nothing. public Task<StatusCode> ConnectCube() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source CreateFixedCustomObject(Pose, Single, Single, Single, Boolean) Defines a cuboid of custom size and places it in the world. It cannot be observed. public Task<StatusCode> CreateFixedCustomObject(Pose pose, float xSizeMm, float ySizeMm, float zSizeMm, bool relativeToRobot = false) Parameters Type Name Description Pose pose The pose of the object to create. Single xSizeMm The size of the object (in millimeters) in the x axis. Single ySizeMm The size of the object (in millimeters) in the y axis. Single zSizeMm The size of the object (in millimeters) in the z axis. Boolean relativeToRobot Whether or not the pose given assumes the robot's pose as its origin. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source CubesAvailable() Returns the Factory Ids of all available cubes. public Task<IEnumerable<string>> CubesAvailable() Returns Type Description Task < IEnumerable < String >> A task that represents the asynchronous operation; the task result contains the factory id's of available cubes. | Improve this Doc View Source DefineCustomObject(CustomObjectType, CustomObjectArchetype, Boolean) Defines the custom object with the provided object definition. The robot will now detect the markers associated with this object and raise an ObjectObserved event when they are seen. There are 20 custom object types that can be defined. public Task<StatusCode> DefineCustomObject(CustomObjectType customObjectType, CustomObjectArchetype archetype, bool isUnique = true) Parameters Type Name Description CustomObjectType customObjectType The object type you are binding this custom object definition to. CustomObjectArchetype archetype The custom object archetype (definition). Boolean isUnique If True, the robot will assume there is only 1 of this object. (and therefore only 1 of each of any of these markers) in the world. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Exceptions Type Condition ArgumentOutOfRangeException customObjectType - Custom object type cannot be 'None' ArgumentException Specified Custom object definition is not supported - definition | Improve this Doc View Source DeleteCustomObjectArchetypes() Causes the robot to forget all the custom defined object archetypes. The custom objects need to be deleted from Vector before calling this method to ensure none of the archetypes are in use. public Task<StatusCode> DeleteCustomObjectArchetypes() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Exceptions Type Condition InvalidOperationException Cannot delete archetypes because custom objects are in use. Delete all custom objects first. | Improve this Doc View Source DeleteCustomObjects() Causes the robot to forget about all the custom objects it currently knows about. public Task<StatusCode> DeleteCustomObjects() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source DeleteFixedCustomObjects() Causes the robot to forget about all the fixed custom objects it currently knows about. public Task<StatusCode> DeleteFixedCustomObjects() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source DisconnectCube() Requests a disconnection from the currently connected cube. public Task<StatusCode> DisconnectCube() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source FlashCubeLights() Flashes the cube lights. Plays the default cube connection animation on the currently connected cube's lights. public Task<StatusCode> FlashCubeLights() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source ForgetPreferredCube() Forgets the preferred cube. 'Forget' the robot's preferred cube. This will cause the robot to connect to the cube with the highest RSSI(signal strength) next time a connection is requested. public Task<StatusCode> ForgetPreferredCube() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source GetFaceById(Int32) Gets the face by face identifier. public Face GetFaceById(int faceId) Parameters Type Name Description Int32 faceId The face identifier. Returns Type Description Face The face matching the ID | Improve this Doc View Source GetObjectById(Int32) Gets an object by object identifier. public ObjectWithId GetObjectById(int objectId) Parameters Type Name Description Int32 objectId The object identifier. Returns Type Description ObjectWithId The observable object matching the ID or null Events | Improve this Doc View Source KnownFaceAppeared Triggered when a known face has appeared public event EventHandler<KnownFaceAppearedEventArgs> KnownFaceAppeared Event Type EventHandler < KnownFaceAppearedEventArgs > | Improve this Doc View Source ObjectAdded Occurs when a new object is added to the world. This will occur only once when a new object is first visually identified by the robot. From then on the object will be available in the Objects collection. public event EventHandler<ObjectAddedEventArgs> ObjectAdded Event Type EventHandler < ObjectAddedEventArgs > | Improve this Doc View Source ObjectAppeared Triggered whenever an object is first visually identified by a robot. This differs from ObjectObserved in that it’s only triggered when an object initially becomes visible. If it disappears for more than ObjectVisibilityTimeout milliseconds and then is seen again, a ObjectDisappeared will be dispatched, followed by another ObjectAppeared event. For continuous tracking information about a visible object, see ObjectObserved . public event EventHandler<ObjectAppearedEventArgs> ObjectAppeared Event Type EventHandler < ObjectAppearedEventArgs > | Improve this Doc View Source ObjectConnected Triggered when the robot connects to the light cube. public event EventHandler<ObjectConnectedEventArgs> ObjectConnected Event Type EventHandler < ObjectConnectedEventArgs > | Improve this Doc View Source ObjectDisappeared Triggered whenever an object that was previously being observed is no longer visible. public event EventHandler<ObjectDisappearedEventArgs> ObjectDisappeared Event Type EventHandler < ObjectDisappearedEventArgs > | Improve this Doc View Source ObjectDisconnected Triggered when the robot disconnects from the light cube public event EventHandler<ObjectDisconnectedEventArgs> ObjectDisconnected Event Type EventHandler < ObjectDisconnectedEventArgs > | Improve this Doc View Source ObjectEvent Occurs when object event occurs. public event EventHandler<ObjectEventArgs> ObjectEvent Event Type EventHandler < ObjectEventArgs > | Improve this Doc View Source ObjectFinishedMoving Triggered when the object has finished moving (the light cube) public event EventHandler<ObjectFinishedMovingEventArgs> ObjectFinishedMoving Event Type EventHandler < ObjectFinishedMovingEventArgs > | Improve this Doc View Source ObjectMoving Triggered when an object is moved (the light cube) public event EventHandler<ObjectMovingEventArgs> ObjectMoving Event Type EventHandler < ObjectMovingEventArgs > | Improve this Doc View Source ObjectObserved Triggered whenever an object is visually identified by the robot. A stream of these events are produced while an object is visible to the robot.Each event has an updated image_box field. See ObjectAppeared if you only want to know when an object first becomes visible. public event EventHandler<ObjectObservedEventArgs> ObjectObserved Event Type EventHandler < ObjectObservedEventArgs > | Improve this Doc View Source ObjectTapped Triggered when the light cube is tapped public event EventHandler<ObjectTappedEventArgs> ObjectTapped Event Type EventHandler < ObjectTappedEventArgs > | Improve this Doc View Source ObjectUpAxisChanged Triggered when the light cube's up axis changed. public event EventHandler<ObjectUpAxisChangedEventArgs> ObjectUpAxisChanged Event Type EventHandler < ObjectUpAxisChangedEventArgs > Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Anki.Vector.VisionComponent.html": {
    "href": "api/Anki.Vector.VisionComponent.html",
    "title": "Class VisionComponent",
    "keywords": "Class VisionComponent Utility methods for Vector’s vision Vector’s can detect various types of objects through his camera feed. Inheritance Object RobotObject Component VisionComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class VisionComponent : Component, INotifyPropertyChanged Properties | Improve this Doc View Source CustomObjectDetectionEnabled Gets a value indicating whether custom object detection is enabled public bool CustomObjectDetectionEnabled { get; } Property Type Boolean | Improve this Doc View Source FaceDetectionEnabled Gets a value indicating whether face detection is enabled public bool FaceDetectionEnabled { get; } Property Type Boolean | Improve this Doc View Source MirrorModeEnabled Gets a value indicating whether mirror mode is enabled public bool MirrorModeEnabled { get; } Property Type Boolean | Improve this Doc View Source MotionDetectionEnabled Gets a value indicating whether motion detection is enabled public bool MotionDetectionEnabled { get; } Property Type Boolean Methods | Improve this Doc View Source DisableAllVisionModes() Closes all the running vision modes and waits for a response. public Task DisableAllVisionModes() Returns Type Description Task A task that represents the asynchronous operation. | Improve this Doc View Source DisableCustomObjectDetection() Disables the custom object detection. public Task<StatusCode> DisableCustomObjectDetection() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source DisableFaceDetection() Disables face detection on the robot’s camera public Task<StatusCode> DisableFaceDetection() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source DisableMirrorMode() Disables display of the robot’s camera feed on its face along with any detections (if enabled) public Task<StatusCode> DisableMirrorMode() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source DisableMotionDetection() Disabled motion detection (not tested). public Task<StatusCode> DisableMotionDetection() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source EnableCustomObjectDetection() Enables the custom object detection. public Task<StatusCode> EnableCustomObjectDetection() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source EnableFaceDetection(Boolean) Enable face detection on the robot’s camera public Task<StatusCode> EnableFaceDetection(bool estimateEspression = false) Parameters Type Name Description Boolean estimateEspression if set to true to estimate expression. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source EnableMirrorMode() Enables display of the robot’s camera feed on its face along with any detections (if enabled) public Task<StatusCode> EnableMirrorMode() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source EnableMotionDetection() Enables motion detection (not tested). public Task<StatusCode> EnableMotionDetection() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Anki.Vector.Types.Quaternion.html": {
    "href": "api/Anki.Vector.Types.Quaternion.html",
    "title": "Struct Quaternion",
    "keywords": "Struct Quaternion Represents the rotation of an object in the world. Implements IEquatable < Quaternion > Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public struct Quaternion : IEquatable<Quaternion> Constructors | Improve this Doc View Source Quaternion(Single) Initializes a new instance of the Quaternion struct. This function converts an angle in the z axis (Euler angle z component) to a quaternion. public Quaternion(float radiansZ) Parameters Type Name Description Single radiansZ angle in the z axis in radians. | Improve this Doc View Source Quaternion(Single, Single, Single, Single) Initializes a new instance of the Quaternion struct. public Quaternion(float q0, float q1, float q2, float q3) Parameters Type Name Description Single q0 The The q0 (w) value of the quaternion. Single q1 The q1 (i) value of the quaternion.. Single q2 The q2 (j) value of the quaternion.. Single q3 The q3 (k) value of the quaternion.. Properties | Improve this Doc View Source AngleZ An Angle instance representing the z Euler component of the object's rotation in radians public float AngleZ { get; } Property Type Single | Improve this Doc View Source Q0 Gets the q0 (w) value of the quaternion. public float Q0 { get; } Property Type Single | Improve this Doc View Source Q1 Gets the q1 (i) value of the quaternion. public float Q1 { get; } Property Type Single | Improve this Doc View Source Q2 Gets the q2 (j) value of the quaternion. public float Q2 { get; } Property Type Single | Improve this Doc View Source Q3 Gets the q3 (k) value of the quaternion. public float Q3 { get; } Property Type Single Methods | Improve this Doc View Source Equals(Quaternion) Indicates whether the current object is equal to another object of the same type. public bool Equals(Quaternion other) Parameters Type Name Description Quaternion other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(Quaternion, Quaternion) Implements the operator ==. public static bool operator ==(Quaternion lhs, Quaternion rhs) Parameters Type Name Description Quaternion lhs The LHS. Quaternion rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(Quaternion, Quaternion) Implements the operator !=. public static bool operator !=(Quaternion lhs, Quaternion rhs) Parameters Type Name Description Quaternion lhs The LHS. Quaternion rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.Types.NavMapGrid.html": {
    "href": "api/Anki.Vector.Types.NavMapGrid.html",
    "title": "Class NavMapGrid",
    "keywords": "Class NavMapGrid A navigation memory map, stored as a quad-tree. Inheritance Object NavMapGridNode NavMapGrid Inherited Members NavMapGridNode.Depth NavMapGridNode.Size NavMapGridNode.Center NavMapGridNode.Parent NavMapGridNode.Content NavMapGridNode.ColorRgba NavMapGridNode.ContainsPoint(Single, Single) NavMapGridNode.GetNode(Single, Single) NavMapGridNode.GetContent(Single, Single) NavMapGridNode.HasChildren NavMapGridNode.Children Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class NavMapGrid : NavMapGridNode Properties | Improve this Doc View Source OriginId Gets the origin identifier public uint OriginId { get; } Property Type UInt32 See Also NavMapGridNode"
  },
  "api/Anki.Vector.Types.Matrix.html": {
    "href": "api/Anki.Vector.Types.Matrix.html",
    "title": "Struct Matrix",
    "keywords": "Struct Matrix Simplified matrix struct Implements IEquatable < Matrix > Inherited Members ValueType.ToString() Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public struct Matrix : IEquatable<Matrix> Constructors | Improve this Doc View Source Matrix(Int32, Int32) Initializes a new instance of the Matrix struct. public Matrix(int rows, int cols) Parameters Type Name Description Int32 rows The rows. Int32 cols The cols. Properties | Improve this Doc View Source Item[Int32, Int32] Gets the Single with the specified row. public float this[int row, int col] { get; } Parameters Type Name Description Int32 row The row. Int32 col The col. Property Type Single Methods | Improve this Doc View Source Equals(Matrix) Indicates whether the current object is equal to another object of the same type. public bool Equals(Matrix other) Parameters Type Name Description Matrix other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(Matrix, Matrix) Implements the operator ==. public static bool operator ==(Matrix lhs, Matrix rhs) Parameters Type Name Description Matrix lhs The LHS. Matrix rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(Matrix, Matrix) Implements the operator !=. public static bool operator !=(Matrix lhs, Matrix rhs) Parameters Type Name Description Matrix lhs The LHS. Matrix rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.Types.ImageRect.html": {
    "href": "api/Anki.Vector.Types.ImageRect.html",
    "title": "Class ImageRect",
    "keywords": "Class ImageRect Image coordinates and size Inheritance Object ImageRect Implements IEquatable < ImageRect > Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class ImageRect : IEquatable<ImageRect> Properties | Improve this Doc View Source Height Gets the height of the object from when it was last visible within Vector’s camera view. public float Height { get; } Property Type Single | Improve this Doc View Source Width Gets the width of the object from when it was last visible within Vector’s camera view.. public float Width { get; } Property Type Single | Improve this Doc View Source X Gets the top left x value of where the object was last visible within Vector’s camera view. public float X { get; } Property Type Single | Improve this Doc View Source Y Gets the top left y value of where the object was last visible within Vector’s camera view.. public float Y { get; } Property Type Single Methods | Improve this Doc View Source Equals(ImageRect) Indicates whether the current object is equal to another object of the same type. public bool Equals(ImageRect other) Parameters Type Name Description ImageRect other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(ImageRect, ImageRect) Implements the operator ==. public static bool operator ==(ImageRect lhs, ImageRect rhs) Parameters Type Name Description ImageRect lhs The LHS. ImageRect rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(ImageRect, ImageRect) Implements the operator !=. public static bool operator !=(ImageRect lhs, ImageRect rhs) Parameters Type Name Description ImageRect lhs The LHS. ImageRect rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T> See Also IEquatable <T>"
  },
  "api/Anki.Vector.TouchSensorData.html": {
    "href": "api/Anki.Vector.TouchSensorData.html",
    "title": "Struct TouchSensorData",
    "keywords": "Struct TouchSensorData A touch sample from the capacitive touch sensor, accompanied with the robot’s conclusion on whether this is considered a valid touch. Implements IEquatable < TouchSensorData > Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public struct TouchSensorData : IEquatable<TouchSensorData> Properties | Improve this Doc View Source IsBeingTouched Gets a value indicating whether the robot’s conclusion on whether the current value is considered a valid touch. public bool IsBeingTouched { get; } Property Type Boolean | Improve this Doc View Source RawTouchValue Gets the detected sensitivity from the touch sensor. This will not map to a constant raw value, as it may be impacted by various environmental factors such as whether the robot is on its charger, being held, humidity, etc. public uint RawTouchValue { get; } Property Type UInt32 Methods | Improve this Doc View Source Equals(TouchSensorData) Indicates whether the current object is equal to another object of the same type. public bool Equals(TouchSensorData other) Parameters Type Name Description TouchSensorData other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(TouchSensorData, TouchSensorData) Implements the operator ==. public static bool operator ==(TouchSensorData lhs, TouchSensorData rhs) Parameters Type Name Description TouchSensorData lhs The LHS. TouchSensorData rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(TouchSensorData, TouchSensorData) Implements the operator !=. public static bool operator !=(TouchSensorData lhs, TouchSensorData rhs) Parameters Type Name Description TouchSensorData lhs The LHS. TouchSensorData rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.ReserveBehaviorControl.html": {
    "href": "api/Anki.Vector.ReserveBehaviorControl.html",
    "title": "Class ReserveBehaviorControl",
    "keywords": "Class ReserveBehaviorControl A ReserveBehaviorControl object can be used to suppress the ordinary idle behaviors of the Robot and keep Vector still between SDK control instances. Care must be taken when blocking background behaviors, as this may make Vector appear non-responsive. As long as this object is not disposed, background behaviors will not activate, keeping Vector still while other SDK scripts may take control. Highest-level behaviors like returning to the charger due to low battery will still activate. If there is a need to keep background behaviors from activating in a single script, the class may be used to reserve behavior control while in scope. Inheritance Object ReserveBehaviorControl Implements IDisposable Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class ReserveBehaviorControl : IDisposable Constructors | Improve this Doc View Source ReserveBehaviorControl(RobotConfiguration, Boolean) Initializes a new instance of the ReserveBehaviorControl class. public ReserveBehaviorControl(RobotConfiguration robotConfiguration, bool reserveControl = true) Parameters Type Name Description RobotConfiguration robotConfiguration The robot configuration. Boolean reserveControl if set to true to reserve control on construction. Exceptions Type Condition VectorControlException Unable to reserve behavior control | Improve this Doc View Source ReserveBehaviorControl(Boolean) Initializes a new instance of the ReserveBehaviorControl class. public ReserveBehaviorControl(bool reserveControl = true) Parameters Type Name Description Boolean reserveControl if set to true to reserve control on construction. Exceptions Type Condition VectorConfigurationException No Robot Configuration found; please run the configuration tool to setup the robot connection. Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() | Improve this Doc View Source Dispose(Boolean) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source ReleaseControl() Releases control of Vector public Task ReleaseControl() Returns Type Description Task A task that represents the asynchronous operation. | Improve this Doc View Source ReserveControl() Reserves control of Vector public Task ReserveControl() Returns Type Description Task A task that represents the asynchronous operation. Exceptions Type Condition VectorControlException Unable to reserve behavior control Implements System.IDisposable See Also IDisposable"
  },
  "api/Anki.Vector.Exceptions.VectorTimeoutException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorTimeoutException.html",
    "title": "Class VectorTimeoutException",
    "keywords": "Class VectorTimeoutException Message took too long to complete. Inheritance Object Exception VectorException VectorConnectionException VectorTimeoutException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorTimeoutException : VectorConnectionException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorConnectionException"
  },
  "api/Anki.Vector.RobotStatus.html": {
    "href": "api/Anki.Vector.RobotStatus.html",
    "title": "Struct RobotStatus",
    "keywords": "Struct RobotStatus Robot Status class and exposed properties for Vector’s various states. Implements IEquatable < RobotStatus > Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public struct RobotStatus : IEquatable<RobotStatus> Properties | Improve this Doc View Source AreMotorsMoving True if Vector is currently moving any of his motors (head, arm or wheels/treads). public bool AreMotorsMoving { get; } Property Type Boolean | Improve this Doc View Source AreWheelsMoving True if Vector’s wheels/treads are currently moving. public bool AreWheelsMoving { get; } Property Type Boolean | Improve this Doc View Source IsAnimating True if Vector is currently playing an animation. public bool IsAnimating { get; } Property Type Boolean | Improve this Doc View Source IsBeingHeld True if Vector is being held. public bool IsBeingHeld { get; } Property Type Boolean | Improve this Doc View Source IsButtonPressed True if Vector’s button is pressed. public bool IsButtonPressed { get; } Property Type Boolean | Improve this Doc View Source IsCarryingBlock True if Vector is currently carrying a block. public bool IsCarryingBlock { get; } Property Type Boolean | Improve this Doc View Source IsCharging True if Vector is currently charging. public bool IsCharging { get; } Property Type Boolean | Improve this Doc View Source IsCliffDetected True if Vector detected a cliff using any of his four cliff sensors. public bool IsCliffDetected { get; } Property Type Boolean | Improve this Doc View Source IsDockingToMarker True if Vector has seen a marker and is actively heading toward it (for example his charger or cube). public bool IsDockingToMarker { get; } Property Type Boolean | Improve this Doc View Source IsFalling True if Vector is currently falling. public bool IsFalling { get; } Property Type Boolean | Improve this Doc View Source IsHeadInPos True if Vector’s head is in the desired position (False if still trying to move there). public bool IsHeadInPos { get; } Property Type Boolean | Improve this Doc View Source IsInCalmPowerMode True if Vector is in calm power mode. Calm power mode is generally when Vector is sleeping or charging. public bool IsInCalmPowerMode { get; } Property Type Boolean | Improve this Doc View Source IsLiftInPos True if Vector’s arm is in the desired position (False if still trying to move it there). public bool IsLiftInPos { get; } Property Type Boolean | Improve this Doc View Source IsOnCharger True if Vector is currently on the charger. public bool IsOnCharger { get; } Property Type Boolean | Improve this Doc View Source IsPathing True if Vector is currently traversing a path. public bool IsPathing { get; } Property Type Boolean | Improve this Doc View Source IsPickedUp True if Vector is currently picked up (in the air). public bool IsPickedUp { get; } Property Type Boolean | Improve this Doc View Source IsRobotMoving True if Vector is in motion. This includes any of his motors (head, arm, wheels/tracks) and if he is being lifted, carried, or falling. public bool IsRobotMoving { get; } Property Type Boolean Methods | Improve this Doc View Source Equals(RobotStatus) Indicates whether the current object is equal to another object of the same type. public bool Equals(RobotStatus other) Parameters Type Name Description RobotStatus other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(RobotStatus, RobotStatus) Implements the operator ==. public static bool operator ==(RobotStatus lhs, RobotStatus rhs) Parameters Type Name Description RobotStatus lhs The LHS. RobotStatus rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(RobotStatus, RobotStatus) Implements the operator !=. public static bool operator !=(RobotStatus lhs, RobotStatus rhs) Parameters Type Name Description RobotStatus lhs The LHS. RobotStatus rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.RobotObject.html": {
    "href": "api/Anki.Vector.RobotObject.html",
    "title": "Class RobotObject",
    "keywords": "Class RobotObject Abstract base class for all robot owned objects. Inheritance Object RobotObject Component ObservableObject Robot RobotConfiguration Implements INotifyPropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public abstract class RobotObject : INotifyPropertyChanged Events | Improve this Doc View Source PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler PropertyChanged Event Type PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged See Also INotifyPropertyChanged"
  },
  "api/Anki.Vector.PhotoComponent.html": {
    "href": "api/Anki.Vector.PhotoComponent.html",
    "title": "Class PhotoComponent",
    "keywords": "Class PhotoComponent Access the photos on Vector. Inheritance Object RobotObject Component PhotoComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class PhotoComponent : Component, INotifyPropertyChanged Methods | Improve this Doc View Source DeletePhoto(PhotoInfo) Deletes the photo from the robot. public Task<StatusCode> DeletePhoto(PhotoInfo photoInfo) Parameters Type Name Description PhotoInfo photoInfo The photo information. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source DeletePhoto(UInt32) Deletes the photo from the robot. public Task<StatusCode> DeletePhoto(uint photoId) Parameters Type Name Description UInt32 photoId The photo identifier. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source GetPhoto(PhotoInfo) Download a full-resolution photo from the robot's storage. public Task<byte[]> GetPhoto(PhotoInfo photoInfo) Parameters Type Name Description PhotoInfo photoInfo The photo information. Returns Type Description Task < Byte []> A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source GetPhoto(UInt32) Download a full-resolution photo from the robot's storage. public Task<byte[]> GetPhoto(uint photoId) Parameters Type Name Description UInt32 photoId The photo identifier. Returns Type Description Task < Byte []> A task that represents the asynchronous operation. The task result contains the result of the operation. Exceptions Type Condition VectorRequestException Unable to retrieve photo from Vector | Improve this Doc View Source GetPhotoInfo() Request the photo information from the robot. public Task<IEnumerable<PhotoInfo>> GetPhotoInfo() Returns Type Description Task < IEnumerable < PhotoInfo >> A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source GetThumbnail(PhotoInfo) Download a thumbnail of a given photo from the robot's storage. You may use this function to pull all of the images off the robot in a smaller format, and then determine which one to download as full resolution. public Task<byte[]> GetThumbnail(PhotoInfo photoInfo) Parameters Type Name Description PhotoInfo photoInfo The photo information. Returns Type Description Task < Byte []> A task that represents the asynchronous operation. The task result contains the result of the operation. Exceptions Type Condition VectorRequestException Unable to retrieve photo from Vector | Improve this Doc View Source GetThumbnail(UInt32) Download a thumbnail of a given photo from the robot's storage. You may use this function to pull all of the images off the robot in a smaller format, and then determine which one to download as full resolution. public Task<byte[]> GetThumbnail(uint photoId) Parameters Type Name Description UInt32 photoId The photo identifier. Returns Type Description Task < Byte []> A task that represents the asynchronous operation. The task result contains the result of the operation. Exceptions Type Condition VectorRequestException Unable to retrieve photo from Vector Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Anki.Vector.Objects.ObservableObject.html": {
    "href": "api/Anki.Vector.Objects.ObservableObject.html",
    "title": "Class ObservableObject",
    "keywords": "Class ObservableObject Represents any object Vector can see in the world. Inheritance Object RobotObject ObservableObject Face ObjectWithId Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public abstract class ObservableObject : RobotObject, INotifyPropertyChanged Properties | Improve this Doc View Source IsVisible Gets a value indicating whether the element has been observed recently. public bool IsVisible { get; protected set; } Property Type Boolean | Improve this Doc View Source LastEventTime Gets or sets the time of the last event public DateTime LastEventTime { get; protected set; } Property Type DateTime | Improve this Doc View Source LastImageRect Gets the location in 2d camera space where this object was last seen. public ImageRect LastImageRect { get; protected set; } Property Type ImageRect | Improve this Doc View Source LastObservedTime Gets the time this object was last seen public DateTime LastObservedTime { get; protected set; } Property Type DateTime | Improve this Doc View Source LastObservedTimestamp Gets the time this object was last seen according to Vector’s time. public uint LastObservedTimestamp { get; protected set; } Property Type UInt32 | Improve this Doc View Source ObjectTypeName Gets the name of the object type. public abstract string ObjectTypeName { get; } Property Type String | Improve this Doc View Source Pose Gets the pose of this object in the world. public Pose Pose { get; protected set; } Property Type Pose Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Anki.Vector.MotorComponent.html": {
    "href": "api/Anki.Vector.MotorComponent.html",
    "title": "Class MotorComponent",
    "keywords": "Class MotorComponent Controls the low-level motor functions. Inheritance Object RobotObject Component MotorComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class MotorComponent : Component, INotifyPropertyChanged Methods | Improve this Doc View Source Drive(DriveDirection, TurnDirection, MotorSpeed) Drives Vector based on direction and speed public Task<StatusCode> Drive(DriveDirection driveDirection, TurnDirection turnDirection, MotorSpeed speed = MotorSpeed.Medium) Parameters Type Name Description DriveDirection driveDirection The drive direction. TurnDirection turnDirection The turn direction. MotorSpeed speed The speed. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source MoveHead(MoveDirection, MotorSpeed) Moves the head based on direction and speed public Task<StatusCode> MoveHead(MoveDirection moveDirection, MotorSpeed speed = MotorSpeed.Medium) Parameters Type Name Description MoveDirection moveDirection The move direction. MotorSpeed speed The speed. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source MoveLift(MoveDirection, MotorSpeed) Moves the lift based on direction and speed public Task<StatusCode> MoveLift(MoveDirection moveDirection, MotorSpeed speed = MotorSpeed.Medium) Parameters Type Name Description MoveDirection moveDirection The move direction. MotorSpeed speed The speed. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source SetHeadMotor(Single) Tell Vector’s head motor to move with a certain speed. Positive speed for up, negative speed for down. To unlock the head track call with speed of zero (0). public Task<StatusCode> SetHeadMotor(float speed) Parameters Type Name Description Single speed Motor speed for Vector’s head, measured in radians per second. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source SetLiftMotor(Single) Tell Vector’s lift motor to move with a certain speed. Positive speed for up, negative speed for down. To unlock the lift track call with speed of zero (0). public Task<StatusCode> SetLiftMotor(float speed) Parameters Type Name Description Single speed Motor speed for Vector’s lift, measured in radians per second. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source SetWheelMotors(Single, Single, Single, Single) Tell Vector to move his wheels / treads at a given speed. The wheels will continue to move at that speed until commanded to drive at a new speed. To unlock the wheel track set all speeds to zero (0). public Task<StatusCode> SetWheelMotors(float leftWheelSpeed, float rightWheelSpeed, float leftWheelAccel = 0F, float rightWheelAccel = 0F) Parameters Type Name Description Single leftWheelSpeed Speed of the left tread (in millimeters per second) Single rightWheelSpeed Speed of the right tread (in millimeters per second) Single leftWheelAccel Acceleration of left tread (in millimeters per second squared) Single rightWheelAccel Acceleration of right tread (in millimeters per second squared) Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source StopAllMotors() Tell Vector to stop all motors. public Task<StatusCode> StopAllMotors() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Anki.Vector.Events.UserIntentEventArgs.html": {
    "href": "api/Anki.Vector.Events.UserIntentEventArgs.html",
    "title": "Class UserIntentEventArgs",
    "keywords": "Class UserIntentEventArgs User intent event args. Contains the voice command information from the event stream. The UserIntent enumeration includes all of the voice commands that the SDK can intercept. Some UserIntents include information returned from the cloud and used when evaluating the voice commands. This information is available in the IntentData JSON formatted string. Inheritance Object EventArgs RobotEventArgs UserIntentEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class UserIntentEventArgs : RobotEventArgs Properties | Improve this Doc View Source Intent Gets the voice command user intent type public UserIntent Intent { get; } Property Type UserIntent | Improve this Doc View Source IntentData Gets the voice command specific data in JSON format. Some voice commands contain information from processing. For example, asking Vector \"Hey Vector, what is the weather?\" will return the current location and the weather forecast. This value will be empty for voice commands without additional information. public string IntentData { get; } Property Type String See Also EventArgs"
  },
  "api/Anki.Vector.Events.StimulationInfoEventArgs.html": {
    "href": "api/Anki.Vector.Events.StimulationInfoEventArgs.html",
    "title": "Class StimulationInfoEventArgs",
    "keywords": "Class StimulationInfoEventArgs Vector stimulation info event args Inheritance Object EventArgs RobotEventArgs StimulationInfoEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax [Serializable] public class StimulationInfoEventArgs : RobotEventArgs Properties | Improve this Doc View Source Acceleration Gets the acceleration per second squared. public float Acceleration { get; } Property Type Single | Improve this Doc View Source EmotionEvents Gets the emotion events. public IReadOnlyList<string> EmotionEvents { get; } Property Type IReadOnlyList < String > | Improve this Doc View Source MaxValue Gets the maximum value. public float MaxValue { get; } Property Type Single | Improve this Doc View Source MinValue Gets the minimum value. public float MinValue { get; } Property Type Single | Improve this Doc View Source Value Gets the stimulation value. public float Value { get; } Property Type Single | Improve this Doc View Source ValueBeforeEvent Gets the stimulation value before event. Matches value if there were no events. public float ValueBeforeEvent { get; } Property Type Single | Improve this Doc View Source Velocity Gets the velocity per second public float Velocity { get; } Property Type Single"
  },
  "api/Anki.Vector.Events.RobotStateEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotStateEventArgs.html",
    "title": "Class RobotStateEventArgs",
    "keywords": "Class RobotStateEventArgs Gets robot state event args Inheritance Object EventArgs RobotEventArgs RobotStateEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class RobotStateEventArgs : RobotEventArgs Properties | Improve this Doc View Source Acceleration Gets the current accelerometer reading public Acceleration Acceleration { get; } Property Type Acceleration | Improve this Doc View Source CarryingObjectId Gets the ID of the object currently being carried (-1 if none) public int CarryingObjectId { get; } Property Type Int32 | Improve this Doc View Source Gyro Gets the current gyroscope reading (x, y, z) public AngularVelocity Gyro { get; } Property Type AngularVelocity | Improve this Doc View Source HeadAngleRad Gets Vector's head angle (up/down) in radians public float HeadAngleRad { get; } Property Type Single | Improve this Doc View Source HeadTrackingObjectId Gets the ID of the object the head is tracking to (-1 if none) public int HeadTrackingObjectId { get; } Property Type Int32 | Improve this Doc View Source LastImageTimestamp Gets the robot's timestamp for the last image seen. public uint LastImageTimestamp { get; } Property Type UInt32 | Improve this Doc View Source LeftWheelSpeedMmps Gets Vector’s left wheel speed in mm/sec public float LeftWheelSpeedMmps { get; } Property Type Single | Improve this Doc View Source LiftHeightMm Gets the height of Vector’s lift from the ground. public float LiftHeightMm { get; } Property Type Single | Improve this Doc View Source LocalizedToObjectId Gets the ID of the object that the robot is localized to (-1 if none) public int LocalizedToObjectId { get; } Property Type Int32 | Improve this Doc View Source Pose Gets the current pose (position and orientation) of Vector. public Pose Pose { get; } Property Type Pose | Improve this Doc View Source PoseAngleRad Gets Vector's pose angle (heading in X-Y plane) in radians public float PoseAngleRad { get; } Property Type Single | Improve this Doc View Source PosePitchRad Gets Vector’s pose pitch (angle up/down) in radians public float PosePitchRad { get; } Property Type Single | Improve this Doc View Source Proximity Gets the proximity sensor data. public ProximitySensorData Proximity { get; } Property Type ProximitySensorData | Improve this Doc View Source RightWheelSpeedMmps Gets Vector's right wheel speed in mm/sec public float RightWheelSpeedMmps { get; } Property Type Single | Improve this Doc View Source Status Gets the various status properties of the robot. public RobotStatus Status { get; } Property Type RobotStatus | Improve this Doc View Source Touch Gets the object touch detection values. public TouchSensorData Touch { get; } Property Type TouchSensorData See Also EventArgs"
  },
  "api/Anki.Vector.Events.RobotRenamedEnrolledFaceEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotRenamedEnrolledFaceEventArgs.html",
    "title": "Class RobotRenamedEnrolledFaceEventArgs",
    "keywords": "Class RobotRenamedEnrolledFaceEventArgs Robot renamed enrolled face event args Inheritance Object EventArgs RobotEventArgs RobotRenamedEnrolledFaceEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax [Serializable] public class RobotRenamedEnrolledFaceEventArgs : RobotEventArgs Properties | Improve this Doc View Source FaceId Gets the face identifier. public int FaceId { get; } Property Type Int32 | Improve this Doc View Source Name Gets the face name. public string Name { get; } Property Type String See Also RobotEventArgs"
  },
  "api/Anki.Vector.Events.RobotObjectTappedEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotObjectTappedEventArgs.html",
    "title": "Class RobotObjectTappedEventArgs",
    "keywords": "Class RobotObjectTappedEventArgs Object tapped event args Inheritance Object EventArgs RobotEventArgs RobotObjectEventArgs RobotObjectTappedEventArgs Inherited Members RobotObjectEventArgs.ObjectEventType RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class RobotObjectTappedEventArgs : RobotObjectEventArgs Properties | Improve this Doc View Source ObjectId Gets the object identifier. public int ObjectId { get; } Property Type Int32 | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event. public uint RobotTimestamp { get; } Property Type UInt32 See Also EventArgs"
  },
  "api/Anki.Vector.Events.RobotObjectStoppedMovingEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotObjectStoppedMovingEventArgs.html",
    "title": "Class RobotObjectStoppedMovingEventArgs",
    "keywords": "Class RobotObjectStoppedMovingEventArgs Object stopped moving event args Inheritance Object EventArgs RobotEventArgs RobotObjectEventArgs RobotObjectStoppedMovingEventArgs Inherited Members RobotObjectEventArgs.ObjectEventType RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class RobotObjectStoppedMovingEventArgs : RobotObjectEventArgs Properties | Improve this Doc View Source ObjectId Gets the object identifier. public int ObjectId { get; } Property Type Int32 | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event. public uint RobotTimestamp { get; } Property Type UInt32 See Also EventArgs"
  },
  "api/Anki.Vector.ScreenComponent.html": {
    "href": "api/Anki.Vector.ScreenComponent.html",
    "title": "Class ScreenComponent",
    "keywords": "Class ScreenComponent Manage the state of the faces on the robot. Inheritance Object RobotObject Component ScreenComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class ScreenComponent : Component, INotifyPropertyChanged Fields | Improve this Doc View Source ScreenHeight The screen height in pixels public const int ScreenHeight = 96 Field Type Int32 | Improve this Doc View Source ScreenWidth The screen width in pixels public const int ScreenWidth = 184 Field Type Int32 | Improve this Doc View Source TotalPixels The total number of pixels in the display public const int TotalPixels = 17664 Field Type Int32 Methods | Improve this Doc View Source DisplayImageRgb24(Byte[], UInt32, Boolean) Display an image on Vector's Screen (his \"face\"). public Task<StatusCode> DisplayImageRgb24(byte[] imageData, uint durationMs, bool interruptRunning = true) Parameters Type Name Description Byte [] imageData A byte array representing all of the pixels (24bit color in RGB format) UInt32 durationMs The number of milliseconds the image should remain on Vector's face. Boolean interruptRunning Set to true so any currently-streaming animation will be aborted in favor of this. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source DisplayImageRgb565(Byte[], UInt32, Boolean) Display an image on Vector's Screen (his \"face\"). public Task<StatusCode> DisplayImageRgb565(byte[] imageData, uint durationMs, bool interruptRunning = true) Parameters Type Name Description Byte [] imageData A byte array representing all of the pixels (16bit color in rgb565 format) UInt32 durationMs The number of milliseconds the image should remain on Vector's face. Boolean interruptRunning Set to true so any currently-streaming animation will be aborted in favor of this. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source DisplayImageRgba32(Byte[], UInt32, Boolean) Display an image on Vector's Screen (his \"face\"). public Task<StatusCode> DisplayImageRgba32(byte[] imageData, uint durationMs, bool interruptRunning = true) Parameters Type Name Description Byte [] imageData A byte array representing all of the pixels (32bit color in RGBA format) UInt32 durationMs The number of milliseconds the image should remain on Vector's face. Boolean interruptRunning Set to true so any currently-streaming animation will be aborted in favor of this. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source DisplaySolidColor(Color, UInt32, Boolean) Set Vector's Screen (his \"face\"). to a solid color. public Task<StatusCode> DisplaySolidColor(Color color, uint durationMs, bool interruptRunning = true) Parameters Type Name Description Color color Desired color to set Vector's Screen. UInt32 durationMs The number of milliseconds the image should remain on Vector's face. Boolean interruptRunning Set to true so any currently-streaming animation will be aborted in favor of this. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Anki.Vector.Exceptions.VectorRequestException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorRequestException.html",
    "title": "Class VectorRequestException",
    "keywords": "Class VectorRequestException Request to Vector has failed Inheritance Object Exception VectorException VectorRequestException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorRequestException : VectorException, ISerializable Properties | Improve this Doc View Source StatusCode Gets the status code of the request. public StatusCode StatusCode { get; } Property Type StatusCode Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.Exceptions.VectorNotFoundException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorNotFoundException.html",
    "title": "Class VectorNotFoundException",
    "keywords": "Class VectorNotFoundException Unable to establish a connection to Vector. Make sure you’re on the same network, and Vector is connected to the Internet. Inheritance Object Exception VectorException VectorConnectionException VectorNotFoundException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorNotFoundException : VectorConnectionException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.Exceptions.VectorNotConnectedException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorNotConnectedException.html",
    "title": "Class VectorNotConnectedException",
    "keywords": "Class VectorNotConnectedException Robot object is not connected. Inheritance Object Exception VectorException VectorNotConnectedException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorNotConnectedException : VectorException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.Exceptions.VectorInvalidVersionException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorInvalidVersionException.html",
    "title": "Class VectorInvalidVersionException",
    "keywords": "Class VectorInvalidVersionException Your SDK version is not compatible with Vector’s version or the specified operation is not compatible with Vector's version. Inheritance Object Exception VectorException VectorInvalidVersionException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorInvalidVersionException : VectorException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.Exceptions.VectorConfigurationException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorConfigurationException.html",
    "title": "Class VectorConfigurationException",
    "keywords": "Class VectorConfigurationException The IRobotConfiguration instance is not valid. Inheritance Object Exception VectorException VectorConfigurationException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorConfigurationException : VectorException, ISerializable Constructors | Improve this Doc View Source VectorConfigurationException() Initializes a new instance of the VectorConfigurationException class. public VectorConfigurationException() | Improve this Doc View Source VectorConfigurationException(String) Initializes a new instance of the VectorConfigurationException class. public VectorConfigurationException(string message) Parameters Type Name Description String message The message that describes the error. | Improve this Doc View Source VectorConfigurationException(String, Exception) Initializes a new instance of the VectorConfigurationException class. public VectorConfigurationException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.Exceptions.VectorAuthenticationException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorAuthenticationException.html",
    "title": "Class VectorAuthenticationException",
    "keywords": "Class VectorAuthenticationException Failure during authentication Inheritance Object Exception VectorException VectorAuthenticationException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorAuthenticationException : VectorException, ISerializable Properties | Improve this Doc View Source FailureType Gets the type of the failure. public VectorAuthenticationFailureType FailureType { get; } Property Type VectorAuthenticationFailureType Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.Exceptions.VectorAudioPlaybackException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorAudioPlaybackException.html",
    "title": "Class VectorAudioPlaybackException",
    "keywords": "Class VectorAudioPlaybackException Request to Vector has failed Inheritance Object Exception VectorException VectorAudioPlaybackException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorAudioPlaybackException : VectorException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.Events.WakeWordBeginEventArgs.html": {
    "href": "api/Anki.Vector.Events.WakeWordBeginEventArgs.html",
    "title": "Class WakeWordBeginEventArgs",
    "keywords": "Class WakeWordBeginEventArgs Wake word begin event args Inheritance Object EventArgs RobotEventArgs WakeWordEventArgs WakeWordBeginEventArgs Inherited Members WakeWordEventArgs.WakeWordEventType RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class WakeWordBeginEventArgs : WakeWordEventArgs See Also WakeWordEventArgs"
  },
  "api/Anki.Vector.Events.VisionModesAutoDisabledEventArgs.html": {
    "href": "api/Anki.Vector.Events.VisionModesAutoDisabledEventArgs.html",
    "title": "Class VisionModesAutoDisabledEventArgs",
    "keywords": "Class VisionModesAutoDisabledEventArgs Vision modes auto disabled event args Inheritance Object EventArgs RobotEventArgs VisionModesAutoDisabledEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class VisionModesAutoDisabledEventArgs : RobotEventArgs See Also RobotEventArgs"
  },
  "api/Anki.Vector.Events.AlexaAuthEventArgs.html": {
    "href": "api/Anki.Vector.Events.AlexaAuthEventArgs.html",
    "title": "Class AlexaAuthEventArgs",
    "keywords": "Class AlexaAuthEventArgs Alexa authorization event args Inheritance Object EventArgs RobotEventArgs AlexaAuthEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax [Serializable] public class AlexaAuthEventArgs : RobotEventArgs Properties | Improve this Doc View Source AuthState Gets the state of the alexa authentication. public AlexaAuthState AuthState { get; } Property Type AlexaAuthState | Improve this Doc View Source Extra Gets the extra data associated with this event. public string Extra { get; } Property Type String See Also RobotEventArgs"
  },
  "api/Anki.Vector.EventComponent.html": {
    "href": "api/Anki.Vector.EventComponent.html",
    "title": "Class EventComponent",
    "keywords": "Class EventComponent Event handlers to subscribe to robot events. Inheritance Object RobotObject Component EventComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class EventComponent : Component, INotifyPropertyChanged Properties | Improve this Doc View Source IsProccessingEvents Gets a value indicating whether this instance is processing events. public bool IsProccessingEvents { get; } Property Type Boolean Events | Improve this Doc View Source AlexaAuth Robot event when alexa authentication occurs. public event EventHandler<AlexaAuthEventArgs> AlexaAuth Event Type EventHandler < AlexaAuthEventArgs > | Improve this Doc View Source AttentionTransfer Robot event triggered after Vector finishes RCM TBD public event EventHandler<AttentionTransferEventArgs> AttentionTransfer Event Type EventHandler < AttentionTransferEventArgs > | Improve this Doc View Source CameraSettingsUpdate Robot event triggered when camera settings are updated. public event EventHandler<CameraSettingsUpdateEventArgs> CameraSettingsUpdate Event Type EventHandler < CameraSettingsUpdateEventArgs > | Improve this Doc View Source ChangedObservedFaceId Robot event for when observed face changes public event EventHandler<RobotChangedObservedFaceIdEventArgs> ChangedObservedFaceId Event Type EventHandler < RobotChangedObservedFaceIdEventArgs > | Improve this Doc View Source CheckUpdateStatus Robot event that occurs when checking for updates. public event EventHandler<CheckUpdateStatusEventArgs> CheckUpdateStatus Event Type EventHandler < CheckUpdateStatusEventArgs > | Improve this Doc View Source ConnectionResponse Occurs when connection response received. public event EventHandler<ConnectionResponseEventArgs> ConnectionResponse Event Type EventHandler < ConnectionResponseEventArgs > | Improve this Doc View Source CubeBattery Occurs when cube batter status received. public event EventHandler<CubeBatteryEventArgs> CubeBattery Event Type EventHandler < CubeBatteryEventArgs > | Improve this Doc View Source CubeConnectionLost Occurs when the cube connection is lost. public event EventHandler<CubeConnectionLostEventArgs> CubeConnectionLost Event Type EventHandler < CubeConnectionLostEventArgs > | Improve this Doc View Source FaceEnrollmentCompleted Robot event when face enrollment completed. public event EventHandler<FaceEnrollmentCompletedEventArgs> FaceEnrollmentCompleted Event Type EventHandler < FaceEnrollmentCompletedEventArgs > | Improve this Doc View Source FaceScanComplete Robot event when face scan completed. public event EventHandler<FaceScanCompleteEventArgs> FaceScanComplete Event Type EventHandler < FaceScanCompleteEventArgs > | Improve this Doc View Source FaceScanStarted Robot event when face scan started. public event EventHandler<FaceScanStartedEventArgs> FaceScanStarted Event Type EventHandler < FaceScanStartedEventArgs > | Improve this Doc View Source FeatureStatus Occurs when a feature is invoked. public event EventHandler<FeatureStatusEventArgs> FeatureStatus Event Type EventHandler < FeatureStatusEventArgs > | Improve this Doc View Source JdocsChanged Robot event when jdocs have been changed. public event EventHandler<JdocsChangedEventArgs> JdocsChanged Event Type EventHandler < JdocsChangedEventArgs > | Improve this Doc View Source KeepAlive Keep alive event from robot public event EventHandler<KeepAliveEventArgs> KeepAlive Event Type EventHandler < KeepAliveEventArgs > | Improve this Doc View Source MirrorModeDisabled Occurs when mirror mode is disabled. public event EventHandler<MirrorModeDisabledEventArgs> MirrorModeDisabled Event Type EventHandler < MirrorModeDisabledEventArgs > | Improve this Doc View Source ObjectAvailable After the ConnectCube process is started, all available light cubes in range will broadcast an availability message through the Robot. public event EventHandler<RobotObjectAvailableEventArgs> ObjectAvailable Event Type EventHandler < RobotObjectAvailableEventArgs > | Improve this Doc View Source ObjectConnectionState Connection state change of the cube public event EventHandler<RobotObjectConnectionStateEventArgs> ObjectConnectionState Event Type EventHandler < RobotObjectConnectionStateEventArgs > | Improve this Doc View Source ObjectMoved Robot event triggered when an object starts moving. public event EventHandler<RobotObjectMovedEventArgs> ObjectMoved Event Type EventHandler < RobotObjectMovedEventArgs > | Improve this Doc View Source ObjectStoppedMoving Robot event triggered when an object stops moving. public event EventHandler<RobotObjectStoppedMovingEventArgs> ObjectStoppedMoving Event Type EventHandler < RobotObjectStoppedMovingEventArgs > | Improve this Doc View Source ObjectTapped Robot event triggered when an object is tapped. public event EventHandler<RobotObjectTappedEventArgs> ObjectTapped Event Type EventHandler < RobotObjectTappedEventArgs > | Improve this Doc View Source ObjectUpAxisChanged Robot event triggered when an object’s orientation changed. public event EventHandler<RobotObjectUpAxisChangedEventArgs> ObjectUpAxisChanged Event Type EventHandler < RobotObjectUpAxisChangedEventArgs > | Improve this Doc View Source ObservedFace Robot event for when a face is observed by the robot. public event EventHandler<RobotObservedFaceEventArgs> ObservedFace Event Type EventHandler < RobotObservedFaceEventArgs > | Improve this Doc View Source ObservedObject Robot event triggered when an object is observed by the robot. public event EventHandler<RobotObservedObjectEventArgs> ObservedObject Event Type EventHandler < RobotObservedObjectEventArgs > | Improve this Doc View Source PhotoTaken Robot event when photo is taken public event EventHandler<PhotoTakenEventArgs> PhotoTaken Event Type EventHandler < PhotoTakenEventArgs > | Improve this Doc View Source RobotErasedEnrolledFace Robot event triggered when robot erased an enrolled face. public event EventHandler<RobotErasedEnrolledFaceEventArgs> RobotErasedEnrolledFace Event Type EventHandler < RobotErasedEnrolledFaceEventArgs > | Improve this Doc View Source RobotEvent Occurs for every robot event public event EventHandler<RobotEventArgs> RobotEvent Event Type EventHandler < RobotEventArgs > | Improve this Doc View Source RobotObservedMotion Robot event triggered when the robot observed motion. public event EventHandler<RobotObservedMotionEventArgs> RobotObservedMotion Event Type EventHandler < RobotObservedMotionEventArgs > | Improve this Doc View Source RobotRenamedEnrolledFace Robot event triggered when robot renamed enrolled face. public event EventHandler<RobotRenamedEnrolledFaceEventArgs> RobotRenamedEnrolledFace Event Type EventHandler < RobotRenamedEnrolledFaceEventArgs > | Improve this Doc View Source RobotState Robot event containing changes to the robot’s state. public event EventHandler<RobotStateEventArgs> RobotState Event Type EventHandler < RobotStateEventArgs > | Improve this Doc View Source StimulationInfo Robot event containing stimulation information. public event EventHandler<StimulationInfoEventArgs> StimulationInfo Event Type EventHandler < StimulationInfoEventArgs > | Improve this Doc View Source UnexpectedMovement Robot event triggered when Vector does not move as expected. public event EventHandler<UnexpectedMovementEventArgs> UnexpectedMovement Event Type EventHandler < UnexpectedMovementEventArgs > | Improve this Doc View Source UserIntent Root event triggered after processing voice commands. Note: This event is only sent if the application has reserved control -- and thus Vector will not carry it out. See also WakeWordEnd (to receive the intent when we haven't reserved control), and AppIntent to send an intent public event EventHandler<UserIntentEventArgs> UserIntent Event Type EventHandler < UserIntentEventArgs > | Improve this Doc View Source VisionModesAutoDisabled Robot event vision modes are automatically disabled. public event EventHandler<VisionModesAutoDisabledEventArgs> VisionModesAutoDisabled Event Type EventHandler < VisionModesAutoDisabledEventArgs > | Improve this Doc View Source WakeWordBegin Robot event triggered when Vector hears \"Hey Vector\" public event EventHandler<WakeWordBeginEventArgs> WakeWordBegin Event Type EventHandler < WakeWordBeginEventArgs > | Improve this Doc View Source WakeWordEnd Robot event triggered after Vector finishes listening to \"Hey Vector\" public event EventHandler<WakeWordEndEventArgs> WakeWordEnd Event Type EventHandler < WakeWordEndEventArgs > Implements System.ComponentModel.INotifyPropertyChanged See Also IDisposable"
  },
  "api/Anki.Vector.RobotConfiguration.html": {
    "href": "api/Anki.Vector.RobotConfiguration.html",
    "title": "Class RobotConfiguration",
    "keywords": "Class RobotConfiguration The robot configuration information Inheritance Object RobotObject RobotConfiguration Implements INotifyPropertyChanged IRobotConfiguration IRemoteRobotConfiguration Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class RobotConfiguration : RobotObject, INotifyPropertyChanged, IRobotConfiguration, IRemoteRobotConfiguration Properties | Improve this Doc View Source Certificate Gets or sets the certificate. public string Certificate { get; set; } Property Type String | Improve this Doc View Source Guid Gets or sets the unique identifier. public string Guid { get; set; } Property Type String | Improve this Doc View Source HasRemoteHost Gets a value indicating whether this instance has remote host. public bool HasRemoteHost { get; } Property Type Boolean | Improve this Doc View Source IPAddress Gets or sets the IP address of the robot public IPAddress IPAddress { get; set; } Property Type IPAddress | Improve this Doc View Source RemoteHost Gets or sets the remote vector host name and optional port. public string RemoteHost { get; set; } Property Type String | Improve this Doc View Source RobotName Gets or sets the name of the robot. This is in the form \"Vector-XXXX\" public string RobotName { get; set; } Property Type String | Improve this Doc View Source SerialNumber Gets or sets the robot serial number. public string SerialNumber { get; set; } Property Type String Methods | Improve this Doc View Source AddOrUpdate(RobotConfiguration) Adds the specified robot configuration to the configuration file using the default SDK configuration file path. The robot configuration is appended if new or updated if already exists public static void AddOrUpdate(RobotConfiguration robot) Parameters Type Name Description RobotConfiguration robot The robot. | Improve this Doc View Source AddOrUpdate(String, RobotConfiguration) Adds the specified robot configuration to the configuration file using the specified SDK configuration file path. The robot configuration is appended if new or updated if already exists public static void AddOrUpdate(string sdkConfigFilePath, RobotConfiguration robot) Parameters Type Name Description String sdkConfigFilePath The SDK configuration file path. RobotConfiguration robot The robot configuration. | Improve this Doc View Source Load() Loads the configuration file using the default SDK configuration file path. public static IEnumerable<RobotConfiguration> Load() Returns Type Description IEnumerable < RobotConfiguration > Robot configurations | Improve this Doc View Source Load(String) Loads the configuration file using the specified SDK configuration file path. public static IEnumerable<RobotConfiguration> Load(string sdkConfigFilePath) Parameters Type Name Description String sdkConfigFilePath The SDK configuration file path. Returns Type Description IEnumerable < RobotConfiguration > Robot configurations | Improve this Doc View Source LoadDefault() Loads the first configuration entry from the default configuration file. public static RobotConfiguration LoadDefault() Returns Type Description RobotConfiguration Robot configuration | Improve this Doc View Source Save(IEnumerable<RobotConfiguration>) Stores the specified robot configurations using the default SDK configuration file path. Any robot configurations not in the list will be removed. public static void Save(IEnumerable<RobotConfiguration> robots) Parameters Type Name Description IEnumerable < RobotConfiguration > robots The robot configurations. | Improve this Doc View Source Save(String, IEnumerable<RobotConfiguration>) Stores the specified robot configurations using the specified SDK configuration file path. Any robot configurations not in the list will be removed. public static void Save(string sdkConfigFilePath, IEnumerable<RobotConfiguration> robots) Parameters Type Name Description String sdkConfigFilePath The SDK configuration file path. IEnumerable < RobotConfiguration > robots The robots configurations. Implements System.ComponentModel.INotifyPropertyChanged IRobotConfiguration IRemoteRobotConfiguration Extension Methods Authentication.TryValidate(IRobotConfiguration) Authentication.Validate(IRobotConfiguration) Authentication.FindRobotAddress(IRobotConfiguration) See Also IRobotConfiguration"
  },
  "api/Anki.Vector.Robot.html": {
    "href": "api/Anki.Vector.Robot.html",
    "title": "Class Robot",
    "keywords": "Class Robot The main robot class for managing Vector. The Robot object is responsible for managing the state and connections to a Vector, and is typically the entry-point to running the SDK. Inheritance Object RobotObject Robot Implements INotifyPropertyChanged IDisposable Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class Robot : RobotObject, INotifyPropertyChanged, IDisposable Constructors | Improve this Doc View Source Robot() Initializes a new instance of the Robot class. public Robot() Properties | Improve this Doc View Source Acceleration Gets the current accelerometer reading public Acceleration Acceleration { get; } Property Type Acceleration | Improve this Doc View Source Animation Gets the animation component. public AnimationComponent Animation { get; } Property Type AnimationComponent | Improve this Doc View Source Audio Gets the audio component. public AudioComponent Audio { get; } Property Type AudioComponent | Improve this Doc View Source Behavior Gets the behavior component public BehaviorComponent Behavior { get; } Property Type BehaviorComponent | Improve this Doc View Source Camera Gets the camera component public CameraComponent Camera { get; } Property Type CameraComponent | Improve this Doc View Source Capabilities Gets the capabilities support by Vector's current firmware public Capabilities Capabilities { get; } Property Type Capabilities | Improve this Doc View Source CarryingObjectId Gets the ID of the object currently being carried (-1 if none) public int CarryingObjectId { get; } Property Type Int32 | Improve this Doc View Source Control Gets the control component public ControlComponent Control { get; } Property Type ControlComponent | Improve this Doc View Source Events Gets the events component public EventComponent Events { get; } Property Type EventComponent | Improve this Doc View Source Faces Gets the face component public FaceComponent Faces { get; } Property Type FaceComponent | Improve this Doc View Source FirmwareVersion Gets the firmware version. Populated when connected public Version FirmwareVersion { get; } Property Type Version | Improve this Doc View Source Gyro Gets the current gyroscope reading (x, y, z) public AngularVelocity Gyro { get; } Property Type AngularVelocity | Improve this Doc View Source HeadAngleRad Gets Vector's head angle (up/down) in radians public float HeadAngleRad { get; } Property Type Single | Improve this Doc View Source HeadTrackingObjectId Gets the ID of the object the head is tracking to (-1 if none) public int HeadTrackingObjectId { get; } Property Type Int32 | Improve this Doc View Source IPAddress Gets the current IP address of the robot. Can be null if remote Vector connection is used. public IPAddress IPAddress { get; } Property Type IPAddress | Improve this Doc View Source IsConnected Gets a value indicating whether the robot is connected. public bool IsConnected { get; } Property Type Boolean | Improve this Doc View Source LastImageTimestamp Gets the robot's timestamp for the last image seen. public uint LastImageTimestamp { get; } Property Type UInt32 | Improve this Doc View Source LeftWheelSpeedMmps Gets Vector’s left wheel speed in mm/sec public float LeftWheelSpeedMmps { get; } Property Type Single | Improve this Doc View Source LiftHeightMm Gets the height of Vector’s lift from the ground. public float LiftHeightMm { get; } Property Type Single | Improve this Doc View Source LocalizedToObjectId Gets the ID of the object that the robot is localized to (-1 if none) public int LocalizedToObjectId { get; } Property Type Int32 | Improve this Doc View Source Motors Gets the motors component public MotorComponent Motors { get; } Property Type MotorComponent | Improve this Doc View Source NavMap Gets the navmap component. public NavMapComponent NavMap { get; } Property Type NavMapComponent | Improve this Doc View Source Photos Gets the photo component. public PhotoComponent Photos { get; } Property Type PhotoComponent | Improve this Doc View Source Pose Gets the current pose (position and orientation) of Vector. public Pose Pose { get; } Property Type Pose | Improve this Doc View Source PoseAngleRad Gets Vector's pose angle (heading in X-Y plane) in radians public float PoseAngleRad { get; } Property Type Single | Improve this Doc View Source PosePitchRad Gets Vector’s pose pitch (angle up/down) in radians public float PosePitchRad { get; } Property Type Single | Improve this Doc View Source Proximity Gets the proximity sensor data. public ProximitySensorData Proximity { get; } Property Type ProximitySensorData | Improve this Doc View Source RightWheelSpeedMmps Gets Vector's right wheel speed in mm/sec public float RightWheelSpeedMmps { get; } Property Type Single | Improve this Doc View Source Screen Gets the screen component. public ScreenComponent Screen { get; } Property Type ScreenComponent | Improve this Doc View Source Status Gets the various status properties of the robot. public RobotStatus Status { get; } Property Type RobotStatus | Improve this Doc View Source Touch Gets state related to touch detection. public TouchSensorData Touch { get; } Property Type TouchSensorData | Improve this Doc View Source Vision Gets the vision component. public VisionComponent Vision { get; } Property Type VisionComponent | Improve this Doc View Source World Gets the world component. public WorldComponent World { get; } Property Type WorldComponent Methods | Improve this Doc View Source CheckCloudConnection() Checks the cloud connection to Vector public Task<CloudConnection> CheckCloudConnection() Returns Type Description Task < CloudConnection > A task that represents the asynchronous operation; the task result contains the cloud connection information. | Improve this Doc View Source CheckUpdateStatus() Check if the robot is ready to reboot and update. public Task<CheckUpdateStatus> CheckUpdateStatus() Returns Type Description Task < CheckUpdateStatus > A task that represents the asynchronous operation; the task result contains the update status. | Improve this Doc View Source Connect(IRobotConfiguration, Int32, Boolean) Connect to Vector on the local network. This will attempt to connect using the configured IP address (if provided) otherwise it will trigger an mDNS query to find Vector's IP address. For connections to Vector over the Internet, use the RemoteConnect(IRemoteRobotConfiguration, Int32) method instead. public Task Connect(IRobotConfiguration robotConfiguration, int timeout = 5000, bool useZeroConfig = true) Parameters Type Name Description IRobotConfiguration robotConfiguration The robot configuration. Int32 timeout Timeout in milliseconds Boolean useZeroConfig if set to true use zero configuration (mDNS). Returns Type Description Task A task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException robotConfiguration VectorNotFoundException Unable to establish a connection to Vector. VectorInvalidVersionException Your SDK version is not compatible with Vector’s version. | Improve this Doc View Source Disconnect() Disconnects from the Robot public Task Disconnect() Returns Type Description Task A task that represents the asynchronous operation. | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() | Improve this Doc View Source Dispose(Boolean) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source GetFeatureFlag(String) Request the current setting of a feature flag. public Task<bool> GetFeatureFlag(string name) Parameters Type Name Description String name The name of the feature to retrieve information about Returns Type Description Task < Boolean > A task that represents the asynchronous operation; the task result contains the robot setting. | Improve this Doc View Source GetFeatureFlagList() Request the list of the current feature flags. public Task<IReadOnlyList<string>> GetFeatureFlagList() Returns Type Description Task < IReadOnlyList < String >> A task that represents the asynchronous operation; the task result contains the robot setting. Remarks To see which flags are enabled, use the Get Feature Flag command. | Improve this Doc View Source GetLatestAttentionTransfer() Requests information about the most recent attention transfer public Task<LatestAttentionTransfer> GetLatestAttentionTransfer() Returns Type Description Task < LatestAttentionTransfer > A task that represents the asynchronous operation; the task result contains the latest attention transfer. | Improve this Doc View Source NewConnection(IRobotConfiguration, Int32) Connects to Vector and returns a robot instance. public static Task<Robot> NewConnection(IRobotConfiguration robotConfiguration, int timeout = 5000) Parameters Type Name Description IRobotConfiguration robotConfiguration The robot configuration. Int32 timeout The connection timeout in milliseconds. Returns Type Description Task < Robot > A task that represents the asynchronous operation; the task result contains the connected robot instance | Improve this Doc View Source NewConnection(Int32) Connects to Vector using the first robot found in the configuration file and returns a robot instance. public static Task<Robot> NewConnection(int timeout = 5000) Parameters Type Name Description Int32 timeout The timeout. Returns Type Description Task < Robot > A task that represents the asynchronous operation. The task result contains the connected robot instance. Exceptions Type Condition VectorConfigurationException No Robot Configuration found; please run the configuration tool to setup the robot connection. | Improve this Doc View Source NewConnection(String, Int32) Connects to Vector using the robot configuration that matches the name or serial number provided and returns a robot instance. public static Task<Robot> NewConnection(string nameOrSerialNumber, int timeout = 5000) Parameters Type Name Description String nameOrSerialNumber The name or serial number. Int32 timeout The timeout. Returns Type Description Task < Robot > A task that represents the asynchronous operation. The task result contains the connected robot instance. Exceptions Type Condition VectorConfigurationException No Robot Configuration with the name or serial number matching '{nameOrSerialNumber}' found. | Improve this Doc View Source ReadBatteryState() Reads the state of the battery from the robot. public Task<BatteryState> ReadBatteryState() Returns Type Description Task < BatteryState > A task that represents the asynchronous operation; the task result contains the battery state. | Improve this Doc View Source ReadRobotLifetimeStats() Gets the robot lifetime stats. public Task<RobotLifetimeStats> ReadRobotLifetimeStats() Returns Type Description Task < RobotLifetimeStats > A task that represents the asynchronous operation; the task result contains the robot lifetime stats. | Improve this Doc View Source ReadRobotSettings() Gets the settings from the robot. public Task<RobotSettings> ReadRobotSettings() Returns Type Description Task < RobotSettings > A task that represents the asynchronous operation; the task result contains the robot setting. | Improve this Doc View Source ReadVersionState() Reads the the versioning information for Vector, including Vector’s OS version and engine build id. public Task<VersionState> ReadVersionState() Returns Type Description Task < VersionState > A task that represents the asynchronous operation; The task result contains robot version information. | Improve this Doc View Source RemoteConnect(IRemoteRobotConfiguration, Int32) Connects to the robot using the remote connection information. This is used for connecting to Vector when he's not on the LAN. This requires port forwarding on your router to setup an external connection to Vector. For connecting to Vector on the same network as this application, use the Connect(IRobotConfiguration, Int32, Boolean) method instead. public Task RemoteConnect(IRemoteRobotConfiguration robotConfiguration, int timeout = 5000) Parameters Type Name Description IRemoteRobotConfiguration robotConfiguration The remote robot configuration. Int32 timeout The timeout. Returns Type Description Task A task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException robotConfiguration VectorConfigurationException Remote host not specified for remote connection. | Improve this Doc View Source StartUpdateEngine() Cycles the update-engine service (to start a new check for an update) and sets up a stream of CheckUpdateStatusEventArgs Events. public Task<CheckUpdateStatus> StartUpdateEngine() Returns Type Description Task < CheckUpdateStatus > A task that represents the asynchronous operation; the task result contains the update status. | Improve this Doc View Source UpdateAndRestart() Updates and restart the robot. public Task<StatusCode> UpdateAndRestart() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source UpdateRobotSettings(RobotSettings) Updates the robot settings. public Task<RobotSettings> UpdateRobotSettings(RobotSettings settings) Parameters Type Name Description RobotSettings settings The settings to update. Returns Type Description Task < RobotSettings > A task that represents the asynchronous operation; the task result contains the updated settings. Events | Improve this Doc View Source Connected Occurs when the robot is fully connected. public event EventHandler<ConnectedEventArgs> Connected Event Type EventHandler < ConnectedEventArgs > | Improve this Doc View Source Delocalized Occurs when robot is delocalized (i.e. whenever Vector no longer knows where he is - e.g.when he's picked up). public event EventHandler<DelocalizedEventArgs> Delocalized Event Type EventHandler < DelocalizedEventArgs > | Improve this Doc View Source Disconnected Occurs when robot is disconnected. public event EventHandler<DisconnectedEventArgs> Disconnected Event Type EventHandler < DisconnectedEventArgs > | Improve this Doc View Source Error Occurs when there is a background exception. public event EventHandler<ErrorEventArgs> Error Event Type EventHandler < ErrorEventArgs > Implements System.ComponentModel.INotifyPropertyChanged System.IDisposable See Also IDisposable"
  },
  "api/Anki.Vector.Objects.ObjectWithId.html": {
    "href": "api/Anki.Vector.Objects.ObjectWithId.html",
    "title": "Class ObjectWithId",
    "keywords": "Class ObjectWithId Object tracked with an ObjectId Inheritance Object RobotObject ObservableObject ObjectWithId Charger CustomObject LightCube Implements INotifyPropertyChanged Inherited Members ObservableObject.IsVisible ObservableObject.LastImageRect ObservableObject.LastObservedTime ObservableObject.LastObservedTimestamp ObservableObject.Pose ObservableObject.LastEventTime ObservableObject.ObjectTypeName RobotObject.PropertyChanged Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public abstract class ObjectWithId : ObservableObject, INotifyPropertyChanged Properties | Improve this Doc View Source ObjectId Gets the internal ID assigned to the object. This value can only be assigned once as it is static on the robot. public int ObjectId { get; } Property Type Int32 Methods | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Implements System.ComponentModel.INotifyPropertyChanged See Also ObservableObject"
  },
  "api/Anki.Vector.Exceptions.VectorExternalAudioPlaybackException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorExternalAudioPlaybackException.html",
    "title": "Class VectorExternalAudioPlaybackException",
    "keywords": "Class VectorExternalAudioPlaybackException Failed to play external audio on Vector. Inheritance Object Exception VectorException VectorExternalAudioPlaybackException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorExternalAudioPlaybackException : VectorException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.ControlComponent.html": {
    "href": "api/Anki.Vector.ControlComponent.html",
    "title": "Class ControlComponent",
    "keywords": "Class ControlComponent Management of the control of Vector's behaviors. When you connect to Vector with this SDK he will behave normally. Taking control of Vector will disable his internal behaviors (driving around autonomously, responding to voice commands, etc). You are required to take control of Vector in order to execute commands that move Vector or provide other output. Call the RequestControl(Int32) method to request control of Vector and ReleaseControl() to release control. Unless you use priority level OverrideBehaviors Vector will regain control automatically if he senses an edge or runs low on battery. You can subscribe to the ControlGranted and ControlLost events to get feedback on when you have acquired or lost control. Inheritance Object RobotObject Component ControlComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class ControlComponent : Component, INotifyPropertyChanged Properties | Improve this Doc View Source ControlPriority Gets the last requested control priority. public ControlPriority ControlPriority { get; } Property Type ControlPriority | Improve this Doc View Source HasControl Gets a value indicating whether SDK has control over Vector public bool HasControl { get; } Property Type Boolean | Improve this Doc View Source MaintainBehaviorControl Gets a value indicating whether SDK will attempt to acquire control automatically when a behavior method is called after losing control to higher priority behaviors such as returning home to charge a low battery. public bool MaintainBehaviorControl { get; } Property Type Boolean Methods | Improve this Doc View Source ReleaseControl() Releases the control of Vector public Task<bool> ReleaseControl() Returns Type Description Task < Boolean > A task that represents the asynchronous operation. The task result indicated whether control was released. | Improve this Doc View Source RequestControl(ControlPriority, Int32) Requests the control. public Task<bool> RequestControl(ControlPriority priority, int timeout = 10000) Parameters Type Name Description ControlPriority priority The priority. Int32 timeout The timeout. Returns Type Description Task < Boolean > A task that represents the asynchronous operation. The task result indicated whether control was granted. Exceptions Type Condition VectorControlTimeoutException Surpassed control timeout | Improve this Doc View Source RequestControl(Int32) Requests the control of Vector. public Task<bool> RequestControl(int timeout = 10000) Parameters Type Name Description Int32 timeout The timeout in milliseconds. Returns Type Description Task < Boolean > A task that represents the asynchronous operation. The task result indicated whether control was granted. | Improve this Doc View Source WaitForControlChange() Waits for control to change. The task will complete when control has changed and the result is true if SDK has control over Vector. public Task<bool> WaitForControlChange() Returns Type Description Task < Boolean > A task that represents the asynchronous operation; the task result contains whether not SDK has control. Events | Improve this Doc View Source ControlGranted Occurs when control of Vector is granted. public event EventHandler<ControlGrantedEventArgs> ControlGranted Event Type EventHandler < ControlGrantedEventArgs > | Improve this Doc View Source ControlLost Occurs when control of Vector is lost. public event EventHandler<ControlLostEventArgs> ControlLost Event Type EventHandler < ControlLostEventArgs > Implements System.ComponentModel.INotifyPropertyChanged See Also Component"
  },
  "api/Anki.Vector.Component.html": {
    "href": "api/Anki.Vector.Component.html",
    "title": "Class Component",
    "keywords": "Class Component Abstract base class for components. Inheritance Object RobotObject Component AnimationComponent AudioComponent BehaviorComponent CameraComponent ControlComponent EventComponent FaceComponent MotorComponent NavMapComponent PhotoComponent ScreenComponent VisionComponent WorldComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public abstract class Component : RobotObject, INotifyPropertyChanged Implements System.ComponentModel.INotifyPropertyChanged See Also RobotObject"
  },
  "api/Anki.Vector.CameraComponent.html": {
    "href": "api/Anki.Vector.CameraComponent.html",
    "title": "Class CameraComponent",
    "keywords": "Class CameraComponent Support for Vector’s camera. Vector has a built-in camera which he uses to observe the world around him. You can start receiving camera images from Vector by calling the StartFeed() method. The ImageReceived event will be raised for each frame received. Although there is an ImageEncoding property, the data received from Vector is always in the color JPEG format. The camera resolution is 1280 x 720 with a field of view of 90 deg (H) x 50 deg (V). Inheritance Object RobotObject Component CameraComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class CameraComponent : Component, INotifyPropertyChanged Properties | Improve this Doc View Source AutoExposureEnabled Gets a value indicating whether automatic exposure is enabled. If auto exposure is enabled the Gain and ExposureMs values will constantly be updated by Vector. public bool AutoExposureEnabled { get; } Property Type Boolean | Improve this Doc View Source Config Gets the configuration and calibration of the camera. public CameraConfig Config { get; } Property Type CameraConfig Remarks Camera configuration is only populated with firmware version 1.7 or greater. See CameraSettings . | Improve this Doc View Source ExposureMs Gets the current camera exposure setting in milliseconds. public uint ExposureMs { get; } Property Type UInt32 Remarks Exposure is only populated with firmware version 1.7 or greater. See CameraSettings . | Improve this Doc View Source Gain Gets the current camera gain setting. public float Gain { get; } Property Type Single Remarks Gain is only populated with firmware version 1.7 or greater. See CameraSettings . | Improve this Doc View Source IsFeedActive Gets a value indicating whether the camera feed is active. public bool IsFeedActive { get; } Property Type Boolean | Improve this Doc View Source LatestImage Gets the latest image from the camera feed. public Image LatestImage { get; } Property Type Image Methods | Improve this Doc View Source CaptureHighResolutionImage() Captures a high resolution image from the robot's camera and returns it. public Task<Image> CaptureHighResolutionImage() Returns Type Description Task < Image > A task that represents the asynchronous operation; the task result contains the image captured from the robot. Remarks This metohd is only available with firmware version 1.7 or greater. See HighResolutionImageCapture . | Improve this Doc View Source CaptureSingleImage() Request to capture a single image from the robot's camera. This call requests the robot to capture an image and returns it. If the camera feed is active, this call returns the contents of the LatestImage property and does not request a new image from the robot. public Task<Image> CaptureSingleImage() Returns Type Description Task < Image > A task that represents the asynchronous operation; the task result contains the image captured from the robot. | Improve this Doc View Source EnableAutoExposure() Enable auto exposure on Vector's Camera. Enable auto exposure on Vector's camera to constantly update the exposure time and gain values based on the recent images. This is the default mode when any SDK program starts. public Task<StatusCode> EnableAutoExposure() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks This method is only available with firmware version 1.7 or greater. See CameraSettings . | Improve this Doc View Source SetManualExposure(UInt32, Single) Set manual exposure values for Vector's Camera. This will disable auto exposure on Vector's camera and force the specified exposure time and gain values. See the camera Config for valid ranges for the exposure and gain parameters public Task<StatusCode> SetManualExposure(uint exposureMs, float gain) Parameters Type Name Description UInt32 exposureMs The exposure in milliseconds. Single gain The gain. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control. This method is only available with firmware version 1.7 or greater. See CameraSettings . | Improve this Doc View Source StartFeed() Starts the camera feed. The feed will run in a background thread and raise the ImageReceived event for each received image. It will also update the LatestImage property. public Task StartFeed() Returns Type Description Task A task that represents the asynchronous operation. | Improve this Doc View Source StopFeed() Stops the camera feed. public Task StopFeed() Returns Type Description Task A task that represents the asynchronous operation. Events | Improve this Doc View Source ImageReceived Occurs when camera feed event. public event EventHandler<ImageReceivedEventArgs> ImageReceived Event Type EventHandler < ImageReceivedEventArgs > Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Anki.Vector.BehaviorComponent.html": {
    "href": "api/Anki.Vector.BehaviorComponent.html",
    "title": "Class BehaviorComponent",
    "keywords": "Class BehaviorComponent Behavior related classes and functions. Behaviors represent a complex task which requires Vector’s internal logic to determine how long it will take.This may include combinations of animation, path planning or other functionality. For commands such as GoToPose(Pose, Boolean, Int32) , DriveOnCharger() and DockWithCube(LightCube, Nullable<Single>, AlignmentType, Single, Int32) , Vector uses path planning, which refers to the problem of navigating the robot from point A to B without collisions. Vector loads known obstacles from his map, creates a path to navigate around those objects, then starts following the path. If a new obstacle is found while following the path, a new plan may be created. Inheritance Object RobotObject Component BehaviorComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class BehaviorComponent : Component, INotifyPropertyChanged Fields | Improve this Doc View Source MaxHeadAngle The maximum head angle in radians public const float MaxHeadAngle = 45F Field Type Single | Improve this Doc View Source MinHeadAngle The minimum head angle in radians public const float MinHeadAngle = -22F Field Type Single Properties | Improve this Doc View Source IsBusy Gets a value indicating whether Vector is busy performing a behavior. public bool IsBusy { get; } Property Type Boolean | Improve this Doc View Source MotionProfile Gets the motion profile that tells Vector how to drive when receiving navigation and movement actions such as GoToPose(Pose, Boolean, Int32) and DockWithCube(LightCube, Nullable<Single>, AlignmentType, Single, Int32) . public MotionProfile MotionProfile { get; } Property Type MotionProfile Methods | Improve this Doc View Source AppIntent(String, String) Submit an intent for Vector to carry out. public Task<StatusCode> AppIntent(string intent, string param = \"\") Parameters Type Name Description String intent The intent for Vector carry out. String param Any extra parameters. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. Remarks Since AppIntents are run by Vector's AI; this method will automatically release control. | Improve this Doc View Source Cancel() Cancel the currently active behavior public Task<StatusCode> Cancel() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. | Improve this Doc View Source DockWithCube(LightCube, Nullable<Single>, AlignmentType, Single, Int32) Tells Vector to dock with a light cube, optionally using a given approach angle and distance. While docking with the cube, Vector will use path planning. public Task<ActionResult> DockWithCube(LightCube lightCube, float? approachAngle = default(float? ), AlignmentType alignment = AlignmentType.LiftPlate, float distanceFromMarker = 0F, int numRetries = 0) Parameters Type Name Description LightCube lightCube The light cube. Nullable < Single > approachAngle The approach angle in radians. AlignmentType alignment Which part of the robot to align with the object. Single distanceFromMarker The distance from marker in mm (0 to dock). Int32 numRetries Number of times to re-attempt action in case of a failure. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source DriveOffCharger() Drive Vector off the charger public Task<BehaviorResult> DriveOffCharger() Returns Type Description Task < BehaviorResult > A task that represents the asynchronous operation. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source DriveOnCharger() Drive Vector onto the charger Vector will attempt to find the charger and, if successful, he will back onto it and start charging. Vector’s charger has a visual marker so that the robot can locate it for self-docking. public Task<BehaviorResult> DriveOnCharger() Returns Type Description Task < BehaviorResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source DriveStraight(Single, Single, Boolean, Int32) Tells Vector to drive in a straight line. Vector will drive for the specified distance(forwards or backwards). Vector must be off of the charger for this movement action. public Task<ActionResult> DriveStraight(float distanceMm, float speedMmps, bool shouldPlayAnimation = true, int numRetries = 0) Parameters Type Name Description Single distanceMm The distance in mm. (positive for forwards, negative for backwards) Single speedMmps The speed mm/s. Boolean shouldPlayAnimation Whether to play idle animations whilst driving Int32 numRetries Number of times to re-attempt action in case of a failure Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . Exceptions Type Condition NotSupportedException The action result is not supported | Improve this Doc View Source FindCube() Requests that Vector finds his cube. public Task<StatusCode> FindCube() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks This method will automatically release control. | Improve this Doc View Source FindFaces() Look around for faces Turn in place and move head to look for faces. public Task<BehaviorResult> FindFaces() Returns Type Description Task < BehaviorResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source GoToCube(Single, Int32) Tells Vector to drive to his Cube. public Task<ActionResult> GoToCube(float distanceFromCube, int numRetries = 0) Parameters Type Name Description Single distanceFromCube The distance from the cube to stop in mm. This is the distance between the origins. For instance, the distance from the robot's origin (between Vector's two front wheels) to the cube's origin (at the center of the cube) is ~40mm. Int32 numRetries Number of times to reattempt action in case of a failure. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . Exceptions Type Condition InvalidOperationException Light Cube must have been seen by Vector to run this command. | Improve this Doc View Source GoToPose(Pose, Boolean, Int32) Tells Vector to drive to the specified pose and orientation. In navigating to the requested pose, Vector will use path planning. public Task<ActionResult> GoToPose(Pose pose, bool relativeToRobot = false, int retries = 0) Parameters Type Name Description Pose pose The pose. Boolean relativeToRobot Whether the given pose is relative to the robot's pose. Int32 retries The retries. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source ListenForBeat() Request that Vector listens for a beat. public Task<StatusCode> ListenForBeat() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks This method will automatically release control. | Improve this Doc View Source ListenForQuestion() Requests that Vector listen for a knowledge question and provide response. public Task<StatusCode> ListenForQuestion() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks This method will automatically release control. | Improve this Doc View Source LookAroundInPlace() Look around in place Turn in place and move head to see what's around Vector. public Task<BehaviorResult> LookAroundInPlace() Returns Type Description Task < BehaviorResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source PickupObject(LightCube, Boolean, Int32) Instruct the robot to pick up his LightCube. While picking up the cube, Vector will use path planning. Note that actions that use the wheels cannot be performed at the same time, otherwise you may see a TRACKS_LOCKED error. public Task<ActionResult> PickupObject(LightCube lightCube, bool usePreDockPose = true, int numRetries = 0) Parameters Type Name Description LightCube lightCube The light cube. Boolean usePreDockPose Whether or not to try to immediately pick up an object or first position the robot next to the object. Int32 numRetries Number of times to reattempt action in case of a failure. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . Exceptions Type Condition ArgumentException Light cube object must be provided. - lightCube | Improve this Doc View Source PlaceObjectOnGroundHere(Int32) Ask Vector to place the object he is carrying on the ground at the current location. public Task<ActionResult> PlaceObjectOnGroundHere(int numRetries = 0) Parameters Type Name Description Int32 numRetries Number of times to reattempt action in case of a failure. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . Exceptions Type Condition InvalidOperationException Light Cube must have been seen by Vector to run this command. | Improve this Doc View Source PopAWheelie(Nullable<Single>, Int32) Tells Vector to \"pop a wheelie\" using his light cube. public Task<ActionResult> PopAWheelie(float? approachAngle = default(float? ), int numRetries = 0) Parameters Type Name Description Nullable < Single > approachAngle The angle to approach the cube from in radians. For example, 180 degrees will cause Vector to drive past the cube and approach it from behind. Int32 numRetries Number of times to reattempt action in case of a failure. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . Exceptions Type Condition InvalidOperationException Light Cube must have been seen by Vector to run this command. | Improve this Doc View Source RollCube(Nullable<Single>, Int32) Tells Vector to roll a specified cube object. public Task<ActionResult> RollCube(float? approachAngle = default(float? ), int numRetries = 0) Parameters Type Name Description Nullable < Single > approachAngle The angle to approach the cube from in radians. For example, 180 degrees will cause Vector to drive past the cube and approach it from behind. Int32 numRetries Number of times to reattempt action in case of a failure. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . Exceptions Type Condition InvalidOperationException Light Cube must have been seen by Vector to run this command. | Improve this Doc View Source RollVisibleCube() Roll a cube that is currently known to the robot. This behavior will move into position as necessary based on relative distance and orientation. Vector needs to see the block for this to succeed. public Task<BehaviorResult> RollVisibleCube() Returns Type Description Task < BehaviorResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source SayName() Request that Vector looks for a face and say the associated name. public Task<StatusCode> SayName() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks This method will automatically release control. | Improve this Doc View Source SayText(String, Boolean, Single, Single) Make Vector speak text. public Task<StatusCode> SayText(string text, bool useVectorVoice = true, float duration = 1F, float pitch = 0F) Parameters Type Name Description String text The words for Vector to say. Boolean useVectorVoice Whether to use Vector’s robot voice (otherwise, he uses a generic human male voice). Single duration Adjust the relative duration of the generated text to speech audio; 0.05 (fast) to 20.0 (slow). Single pitch Adjust the relative pitch of the generated text to speech audio; -1.0 (low) to +1.0 (high) Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source SetEyeColor(Single, Single) Set Vector’s eye color. public Task<StatusCode> SetEyeColor(float hue, float saturation) Parameters Type Name Description Single hue The hue. Single saturation The saturation. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source SetHeadAngle(Single, Single, Single, Single, Int32) Tell Vector's head to move to a given angle. public Task<ActionResult> SetHeadAngle(float angle, float acceleration = 10F, float maxSpeed = 10F, float duration = 0F, int numRetries = 0) Parameters Type Name Description Single angle Desired angle for Vector’s head. Clamped to MinHeadAngle and MaxHeadAngle . Single acceleration Acceleration of Vector’s head in radians per second squared. Single maxSpeed Maximum speed of Vector’s head in radians per second. Single duration Time for Vector’s head to move in seconds. A value of zero will make Vector try to do it as quickly as possible. Int32 numRetries Number of times to re-attempt the action in case of a failure. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source SetLiftHeight(Single, Single, Single, Single, Int32) Tell Vector’s lift to move to a given height. public Task<ActionResult> SetLiftHeight(float height, float acceleration = 10F, float maxSpeed = 10F, float duration = 0F, int numRetries = 0) Parameters Type Name Description Single height Desired height for Vector’s lift clamped to 0.0 (bottom) to 1.0 (top). Single acceleration Acceleration of Vector’s lift in radians per second squared. Single maxSpeed Maximum speed of Vector’s lift in radians per second. Single duration Time for Vector’s lift to move in seconds. A value of zero will make Vector try to do it as quickly as possible. Int32 numRetries Number of times to re-attempt the action in case of a failure. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source Sleep() Requests that Vector goes to sleep public Task<StatusCode> Sleep() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks This method will automatically release control. | Improve this Doc View Source StartExploring() Request that Vector start's exploring. Vector reacts but doesn't seem to actually start exploring with this method. public Task<StatusCode> StartExploring() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks This method will automatically release control. | Improve this Doc View Source TurnInPlace(Single, Single, Single, Single, Boolean, Int32) Turn the robot around its current position. Vector must be off of the charger for this movement action. public Task<ActionResult> TurnInPlace(float angle, float speed = 0F, float acceleration = 0F, float angleTolerance = 0F, bool isAbsolute = false, int numRetries = 0) Parameters Type Name Description Single angle The angle to turn. Positive values turn to the left, negative values to the right. Single speed Angular turn speed (per second). Single acceleration Acceleration of angular turn (per second squared). Single angleTolerance angular tolerance to consider the action complete (this is clamped to a minimum of 2 degrees internally). Boolean isAbsolute True to turn to a specific angle, False to turn relative to the current pose. Int32 numRetries Number of times to re-attempt the turn in case of a failure. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . | Improve this Doc View Source TurnTowardsFace(Face, Int32) Tells Vector to turn towards this face. public Task<ActionResult> TurnTowardsFace(Face face, int numRetries = 0) Parameters Type Name Description Face face The face Vector will turn towards. Int32 numRetries Number of times to reattempt the action in case of a failure. Returns Type Description Task < ActionResult > A task that represents the asynchronous operation; the task result contains the result from the robot. Remarks Requires behavior control; see RequestControl(Int32) . Implements System.ComponentModel.INotifyPropertyChanged See Also Component"
  },
  "api/Anki.Vector.Types.AnimationTrigger.html": {
    "href": "api/Anki.Vector.Types.AnimationTrigger.html",
    "title": "Class AnimationTrigger",
    "keywords": "Class AnimationTrigger Animation trigger that can be played by the robot. Inheritance Object AnimationTrigger Implements IAnimation Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class AnimationTrigger : IAnimation Properties | Improve this Doc View Source FriendlyName Gets the friendly name of the animation trigger public string FriendlyName { get; } Property Type String | Improve this Doc View Source Name Gets the name of the animation trigger public string Name { get; } Property Type String Implements IAnimation"
  },
  "api/Anki.Vector.Types.Animation.html": {
    "href": "api/Anki.Vector.Types.Animation.html",
    "title": "Class Animation",
    "keywords": "Class Animation Animation that can be played by the robot. Inheritance Object Animation Implements IAnimation Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class Animation : IAnimation Properties | Improve this Doc View Source FriendlyName Gets the friendly name of the animation public string FriendlyName { get; } Property Type String | Improve this Doc View Source Name Gets the name of the animation public string Name { get; } Property Type String Implements IAnimation"
  },
  "api/Anki.Vector.Types.AngularVelocity.html": {
    "href": "api/Anki.Vector.Types.AngularVelocity.html",
    "title": "Struct AngularVelocity",
    "keywords": "Struct AngularVelocity Represents the angular velocity Implements IEquatable < AngularVelocity > Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public struct AngularVelocity : IEquatable<AngularVelocity> Constructors | Improve this Doc View Source AngularVelocity(Single, Single, Single) Initializes a new instance of the AngularVelocity struct. public AngularVelocity(float x, float y, float z) Parameters Type Name Description Single x The x velocity in rad/s. Single y The y velocity in rad/s. Single z The z velocity in rad/s. Properties | Improve this Doc View Source X Gets the x velocity in rad/s public float X { get; } Property Type Single | Improve this Doc View Source Y Gets the y velocity in rad/s public float Y { get; } Property Type Single | Improve this Doc View Source Z Gets the z velocity in rad/s public float Z { get; } Property Type Single Methods | Improve this Doc View Source Equals(AngularVelocity) Indicates whether the current object is equal to another object of the same type. public bool Equals(AngularVelocity other) Parameters Type Name Description AngularVelocity other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(AngularVelocity, AngularVelocity) Implements the operator ==. public static bool operator ==(AngularVelocity lhs, AngularVelocity rhs) Parameters Type Name Description AngularVelocity lhs The LHS. AngularVelocity rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(AngularVelocity, AngularVelocity) Implements the operator !=. public static bool operator !=(AngularVelocity lhs, AngularVelocity rhs) Parameters Type Name Description AngularVelocity lhs The LHS. AngularVelocity rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.Types.Acceleration.html": {
    "href": "api/Anki.Vector.Types.Acceleration.html",
    "title": "Struct Acceleration",
    "keywords": "Struct Acceleration Represents acceleration values Implements IEquatable < Acceleration > Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public struct Acceleration : IEquatable<Acceleration> Constructors | Improve this Doc View Source Acceleration(Single, Single, Single) Initializes a new instance of the Acceleration struct. public Acceleration(float x, float y, float z) Parameters Type Name Description Single x The x acceleration in mm/s^2. Single y The y acceleration in mm/s^2. Single z The z acceleration in mm/s^2. Properties | Improve this Doc View Source X Gets the x acceleration in mm/s^2 public float X { get; } Property Type Single | Improve this Doc View Source Y Gets the y acceleration in mm/s^2 public float Y { get; } Property Type Single | Improve this Doc View Source Z Gets the z acceleration in mm/s^2 public float Z { get; } Property Type Single Methods | Improve this Doc View Source Equals(Acceleration) Indicates whether the current object is equal to another object of the same type. public bool Equals(Acceleration other) Parameters Type Name Description Acceleration other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(Acceleration, Acceleration) Implements the operator ==. public static bool operator ==(Acceleration lhs, Acceleration rhs) Parameters Type Name Description Acceleration lhs The LHS. Acceleration rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(Acceleration, Acceleration) Implements the operator !=. public static bool operator !=(Acceleration lhs, Acceleration rhs) Parameters Type Name Description Acceleration lhs The LHS. Acceleration rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.Objects.LightCube.html": {
    "href": "api/Anki.Vector.Objects.LightCube.html",
    "title": "Class LightCube",
    "keywords": "Class LightCube Represents Vector’s Cube. The LightCube object has four LEDs that Vector can actively manipulate and communicate with. As Vector drives around, he uses the position of objects that he recognizes, including his cube, to localize himself, taking note of the Pose of the objects. You can subscribe to cube events including ObjectTapped , ObjectAppeared , and ObjectDisappeared . Vector supports 1 LightCube. Inheritance Object RobotObject ObservableObject ObjectWithId LightCube Implements INotifyPropertyChanged Inherited Members ObjectWithId.ObjectId ObjectWithId.ToString() ObservableObject.IsVisible ObservableObject.LastImageRect ObservableObject.LastObservedTime ObservableObject.LastObservedTimestamp ObservableObject.Pose ObservableObject.LastEventTime RobotObject.PropertyChanged Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public class LightCube : ObjectWithId, INotifyPropertyChanged Properties | Improve this Doc View Source FactoryId Gets the unique hardware id of the physical cube. public string FactoryId { get; } Property Type String | Improve this Doc View Source IsConnected Gets a value indicating whether the cube is currently connected to the robot. public bool IsConnected { get; } Property Type Boolean | Improve this Doc View Source IsMoving Gets a value indicating whether the cube’s accelerometer indicates that the cube is moving. public bool IsMoving { get; } Property Type Boolean | Improve this Doc View Source LastMovedStartTime Gets the time the object most recently started moving public DateTime LastMovedStartTime { get; } Property Type DateTime | Improve this Doc View Source LastMovedStartTimestamp Gets the time the object most recently started moving in robot time. public uint LastMovedStartTimestamp { get; } Property Type UInt32 | Improve this Doc View Source LastMovedTime Gets the time the object was last moved. public DateTime LastMovedTime { get; } Property Type DateTime | Improve this Doc View Source LastMovedTimestamp Gets the last moved robot timestamp. public uint LastMovedTimestamp { get; } Property Type UInt32 | Improve this Doc View Source LastTappedTime Gets the time the object was last tapped public DateTime LastTappedTime { get; } Property Type DateTime | Improve this Doc View Source LastTappedTimestamp Gets the robot timestamp when the object was last tapped public uint LastTappedTimestamp { get; } Property Type UInt32 | Improve this Doc View Source LastUpAxisTime Gets the time the object’s orientation last changed public DateTime LastUpAxisTime { get; } Property Type DateTime | Improve this Doc View Source LastUpAxisTimestamp Gets the robot timestamp when the object’s orientation last changed public uint LastUpAxisTimestamp { get; } Property Type UInt32 | Improve this Doc View Source ObjectTypeName Gets the name of the object type. public override string ObjectTypeName { get; } Property Type String Overrides ObservableObject.ObjectTypeName | Improve this Doc View Source TopFaceOrientationRad Gets the angular distance from the current reported up axis. public float TopFaceOrientationRad { get; } Property Type Single | Improve this Doc View Source UpAxis Gets the object’s up_axis value from the last time it changed. public UpAxis UpAxis { get; } Property Type UpAxis Methods | Improve this Doc View Source SetLightCorners(Light) Set the light for all corners. public Task<StatusCode> SetLightCorners(Light light) Parameters Type Name Description Light light The settings for all the lights. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the function. | Improve this Doc View Source SetLightCorners(Light, Light, Light, Light) Set the light for each corner. public Task<StatusCode> SetLightCorners(Light light1, Light light2, Light light3, Light light4) Parameters Type Name Description Light light1 The settings for the first light. Light light2 The settings for the second light. Light light3 The settings for the third light. Light light4 The settings for the fourth light. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the function. | Improve this Doc View Source SetLightCorners(Light, Light, Light, Light, ColorProfile, Boolean) Set the light for each corner. public Task<StatusCode> SetLightCorners(Light light1, Light light2, Light light3, Light light4, ColorProfile colorProfile, bool rotate = false) Parameters Type Name Description Light light1 The settings for the first light. Light light2 The settings for the second light. Light light3 The settings for the third light. Light light4 The settings for the fourth light. ColorProfile colorProfile The color profile for the cube lights. Boolean rotate if set to true rotate the colors. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the function. Exceptions Type Condition ArgumentNullException light1 or light2 or light3 or light4 | Improve this Doc View Source SetLightsOff() Set all lights off on the cube public Task<StatusCode> SetLightsOff() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the function. Implements System.ComponentModel.INotifyPropertyChanged See Also ObservableObject"
  },
  "api/Anki.Vector.NavMapComponent.html": {
    "href": "api/Anki.Vector.NavMapComponent.html",
    "title": "Class NavMapComponent",
    "keywords": "Class NavMapComponent Represents Vector's navigation memory map. The NavMapComponent object subscribes for nav memory map updates from the robot to store and dispatch. Inheritance Object RobotObject Component NavMapComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class NavMapComponent : Component, INotifyPropertyChanged Properties | Improve this Doc View Source Frequency Gets the map frequency. public float Frequency { get; } Property Type Single | Improve this Doc View Source IsFeedActive Gets a value indicating whether the nav map feed is active. public bool IsFeedActive { get; } Property Type Boolean | Improve this Doc View Source LatestNavMap Gets the latest nav map. public NavMapGrid LatestNavMap { get; } Property Type NavMapGrid Methods | Improve this Doc View Source StartFeed(Single) Starts the nav map feed. The feed will run in a background thread and raise the LatestNavMap event for each map change. It will also update the LatestNavMap property. public Task StartFeed(float frequency = 0.5F) Parameters Type Name Description Single frequency The navmap polling frequency. Returns Type Description Task A task that represents the asynchronous operation. | Improve this Doc View Source StopFeed() Stops the nav map feed. public Task StopFeed() Returns Type Description Task A task that represents the asynchronous operation. Events | Improve this Doc View Source NavMapUpdate Occurs when nav map updated public event EventHandler<NavMapUpdateEventArgs> NavMapUpdate Event Type EventHandler < NavMapUpdateEventArgs > Implements System.ComponentModel.INotifyPropertyChanged See Also Component"
  },
  "api/Anki.Vector.Exceptions.VectorUnimplementedException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorUnimplementedException.html",
    "title": "Class VectorUnimplementedException",
    "keywords": "Class VectorUnimplementedException Vector does not handle this message. Inheritance Object Exception VectorException VectorConnectionException VectorUnimplementedException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorUnimplementedException : VectorConnectionException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorConnectionException"
  },
  "api/Anki.Vector.Exceptions.VectorUnavailableException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorUnavailableException.html",
    "title": "Class VectorUnavailableException",
    "keywords": "Class VectorUnavailableException Unable to reach Vector. Inheritance Object Exception VectorException VectorConnectionException VectorUnavailableException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorUnavailableException : VectorConnectionException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorConnectionException"
  },
  "api/Anki.Vector.Exceptions.VectorUnauthenticatedException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorUnauthenticatedException.html",
    "title": "Class VectorUnauthenticatedException",
    "keywords": "Class VectorUnauthenticatedException Failed to authenticate request. Inheritance Object Exception VectorException VectorConnectionException VectorUnauthenticatedException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorUnauthenticatedException : VectorConnectionException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorConnectionException"
  },
  "api/Anki.Vector.Exceptions.VectorException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorException.html",
    "title": "Class VectorException",
    "keywords": "Class VectorException Base class of all Vector SDK exceptions. Inheritance Object Exception VectorException VectorAudioPlaybackException VectorAuthenticationException VectorConfigurationException VectorConnectionException VectorControlException VectorControlTimeoutException VectorExternalAudioPlaybackException VectorInvalidVersionException VectorNotConnectedException VectorRequestException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public abstract class VectorException : Exception, ISerializable Implements System.Runtime.Serialization.ISerializable See Also Exception"
  },
  "api/Anki.Vector.Exceptions.VectorControlTimeoutException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorControlTimeoutException.html",
    "title": "Class VectorControlTimeoutException",
    "keywords": "Class VectorControlTimeoutException Failed to get control of Vector. Please verify that Vector is connected to the Internet, is on a flat surface, and is fully charged. Inheritance Object Exception VectorException VectorControlTimeoutException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorControlTimeoutException : VectorException, ISerializable Constructors | Improve this Doc View Source VectorControlTimeoutException() Initializes a new instance of the VectorControlTimeoutException class. public VectorControlTimeoutException() | Improve this Doc View Source VectorControlTimeoutException(String) Initializes a new instance of the VectorControlTimeoutException class. public VectorControlTimeoutException(string message) Parameters Type Name Description String message The message. | Improve this Doc View Source VectorControlTimeoutException(String, Exception) Initializes a new instance of the VectorControlTimeoutException class. public VectorControlTimeoutException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. Implements System.Runtime.Serialization.ISerializable See Also VectorException"
  },
  "api/Anki.Vector.Events.ObjectEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectEventArgs.html",
    "title": "Class ObjectEventArgs",
    "keywords": "Class ObjectEventArgs Abstract base class event args for all object events Inheritance Object EventArgs ObjectEventArgs KnownFaceAppearedEventArgs ObjectAddedEventArgs ObjectAppearedEventArgs ObjectConnectedEventArgs ObjectDisappearedEventArgs ObjectDisconnectedEventArgs ObjectFinishedMovingEventArgs ObjectMovingEventArgs ObjectObservedEventArgs ObjectTappedEventArgs ObjectUpAxisChangedEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public abstract class ObjectEventArgs : EventArgs Properties | Improve this Doc View Source Object Gets the object that triggered the event public ObservableObject Object { get; } Property Type ObservableObject See Also EventArgs"
  },
  "api/Anki.Vector.Events.ObjectDisconnectedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectDisconnectedEventArgs.html",
    "title": "Class ObjectDisconnectedEventArgs",
    "keywords": "Class ObjectDisconnectedEventArgs Object disappeared event args Inheritance Object EventArgs ObjectEventArgs ObjectDisconnectedEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ObjectDisconnectedEventArgs : ObjectEventArgs See Also ObjectEventArgs"
  },
  "api/Anki.Vector.Events.ObjectAppearedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectAppearedEventArgs.html",
    "title": "Class ObjectAppearedEventArgs",
    "keywords": "Class ObjectAppearedEventArgs Object appeared event args Inheritance Object EventArgs ObjectEventArgs ObjectAppearedEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ObjectAppearedEventArgs : ObjectEventArgs Properties | Improve this Doc View Source ImageRect Gets the position in image coordinates public ImageRect ImageRect { get; } Property Type ImageRect | Improve this Doc View Source Pose Gets the pose of the object public Pose Pose { get; } Property Type Pose | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event public uint RobotTimestamp { get; } Property Type UInt32 See Also ObjectEventArgs"
  },
  "api/Anki.Vector.Events.ObjectAddedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectAddedEventArgs.html",
    "title": "Class ObjectAddedEventArgs",
    "keywords": "Class ObjectAddedEventArgs Object added event args Inheritance Object EventArgs ObjectEventArgs ObjectAddedEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ObjectAddedEventArgs : ObjectEventArgs See Also ObjectEventArgs"
  },
  "api/Anki.Vector.Events.JdocsChangedEventArgs.html": {
    "href": "api/Anki.Vector.Events.JdocsChangedEventArgs.html",
    "title": "Class JdocsChangedEventArgs",
    "keywords": "Class JdocsChangedEventArgs JDocs changes event args Inheritance Object EventArgs RobotEventArgs JdocsChangedEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax [Serializable] public class JdocsChangedEventArgs : RobotEventArgs Properties | Improve this Doc View Source ChangedJdocs Gets the changed jdocs. public IReadOnlyList<JdocType> ChangedJdocs { get; } Property Type IReadOnlyList < JdocType > See Also RobotEventArgs"
  },
  "api/Anki.Vector.Events.ImageReceivedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ImageReceivedEventArgs.html",
    "title": "Class ImageReceivedEventArgs",
    "keywords": "Class ImageReceivedEventArgs Image received event args Inheritance Object EventArgs ImageReceivedEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ImageReceivedEventArgs : EventArgs Properties | Improve this Doc View Source Image Gets the image. public Image Image { get; } Property Type Image See Also EventArgs"
  },
  "api/Anki.Vector.Events.FeatureStatusEventArgs.html": {
    "href": "api/Anki.Vector.Events.FeatureStatusEventArgs.html",
    "title": "Class FeatureStatusEventArgs",
    "keywords": "Class FeatureStatusEventArgs Feature status event args Inheritance Object EventArgs RobotEventArgs TimestampedStatusEventArgs FeatureStatusEventArgs Inherited Members TimestampedStatusEventArgs.StatusType TimestampedStatusEventArgs.Timestamp RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class FeatureStatusEventArgs : TimestampedStatusEventArgs Properties | Improve this Doc View Source FeatureName Gets the name of the feature public string FeatureName { get; } Property Type String | Improve this Doc View Source Source Gets the source of the feature invocation (voice, app, AI, unknown) public string Source { get; } Property Type String See Also EventArgs"
  },
  "api/Anki.Vector.Events.FaceScanStartedEventArgs.html": {
    "href": "api/Anki.Vector.Events.FaceScanStartedEventArgs.html",
    "title": "Class FaceScanStartedEventArgs",
    "keywords": "Class FaceScanStartedEventArgs Face scan started Inheritance Object EventArgs RobotEventArgs TimestampedStatusEventArgs FaceScanStartedEventArgs Inherited Members TimestampedStatusEventArgs.StatusType TimestampedStatusEventArgs.Timestamp RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class FaceScanStartedEventArgs : TimestampedStatusEventArgs See Also TimestampedStatusEventArgs"
  },
  "api/Anki.Vector.Events.FaceScanCompleteEventArgs.html": {
    "href": "api/Anki.Vector.Events.FaceScanCompleteEventArgs.html",
    "title": "Class FaceScanCompleteEventArgs",
    "keywords": "Class FaceScanCompleteEventArgs Face scan complete Inheritance Object EventArgs RobotEventArgs TimestampedStatusEventArgs FaceScanCompleteEventArgs Inherited Members TimestampedStatusEventArgs.StatusType TimestampedStatusEventArgs.Timestamp RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class FaceScanCompleteEventArgs : TimestampedStatusEventArgs See Also TimestampedStatusEventArgs"
  },
  "api/Anki.Vector.Events.FaceEnrollmentCompletedEventArgs.html": {
    "href": "api/Anki.Vector.Events.FaceEnrollmentCompletedEventArgs.html",
    "title": "Class FaceEnrollmentCompletedEventArgs",
    "keywords": "Class FaceEnrollmentCompletedEventArgs Face enrollment completed event args Inheritance Object EventArgs RobotEventArgs TimestampedStatusEventArgs FaceEnrollmentCompletedEventArgs Inherited Members TimestampedStatusEventArgs.StatusType TimestampedStatusEventArgs.Timestamp RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class FaceEnrollmentCompletedEventArgs : TimestampedStatusEventArgs Properties | Improve this Doc View Source FaceId Gets the face identifier of the detected face public int FaceId { get; } Property Type Int32 | Improve this Doc View Source Name Gets the name associated with the face detected public string Name { get; } Property Type String | Improve this Doc View Source Result Gets the result of the face enrollment public FaceEnrollmentResult Result { get; } Property Type FaceEnrollmentResult See Also EventArgs"
  },
  "api/Anki.Vector.Events.ErrorEventArgs.html": {
    "href": "api/Anki.Vector.Events.ErrorEventArgs.html",
    "title": "Class ErrorEventArgs",
    "keywords": "Class ErrorEventArgs Event args for background SDK errors Inheritance Object EventArgs ErrorEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ErrorEventArgs : EventArgs Properties | Improve this Doc View Source Exception Gets the exception that caused the disconnection, if one exists. public Exception Exception { get; } Property Type Exception See Also EventArgs"
  },
  "api/Anki.Vector.Events.DelocalizedEventArgs.html": {
    "href": "api/Anki.Vector.Events.DelocalizedEventArgs.html",
    "title": "Class DelocalizedEventArgs",
    "keywords": "Class DelocalizedEventArgs Event args for the delocalized event Inheritance Object EventArgs DelocalizedEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class DelocalizedEventArgs : EventArgs See Also EventArgs"
  },
  "api/Anki.Vector.Events.CubeConnectionLostEventArgs.html": {
    "href": "api/Anki.Vector.Events.CubeConnectionLostEventArgs.html",
    "title": "Class CubeConnectionLostEventArgs",
    "keywords": "Class CubeConnectionLostEventArgs Cube connection lost event args Inheritance Object EventArgs RobotEventArgs CubeConnectionLostEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class CubeConnectionLostEventArgs : RobotEventArgs See Also RobotEventArgs"
  },
  "api/Anki.Vector.Types.ColorProfile.html": {
    "href": "api/Anki.Vector.Types.ColorProfile.html",
    "title": "Struct ColorProfile",
    "keywords": "Struct ColorProfile Applies transforms to make Vector’s lights and colors appear as intended, by limiting maximum channel intensity. Implements IEquatable < ColorProfile > Inherited Members ValueType.ToString() Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public struct ColorProfile : IEquatable<ColorProfile> Constructors | Improve this Doc View Source ColorProfile(Double, Double, Double) Initializes a new instance of the ColorProfile struct. public ColorProfile(double redMultiplier, double greenMultiplier, double blueMultiplier) Parameters Type Name Description Double redMultiplier The red multiplier. Double greenMultiplier The green multiplier. Double blueMultiplier The blue multiplier. Properties | Improve this Doc View Source BlueMultiplier Gets the multiplier used on the blue channel. public double BlueMultiplier { get; } Property Type Double | Improve this Doc View Source GreenMultiplier Gets the multiplier used on the green channel. public double GreenMultiplier { get; } Property Type Double | Improve this Doc View Source MaxProfile Gets the color profile to get the maximum possible brightness out of each LED. public static ColorProfile MaxProfile { get; } Property Type ColorProfile | Improve this Doc View Source RedMultiplier Gets the multiplier used on the red channel. public double RedMultiplier { get; } Property Type Double | Improve this Doc View Source WhiteBalancedCubeProfile Gets the color profile balanced so that a max color value more closely resembles pure white. public static ColorProfile WhiteBalancedCubeProfile { get; } Property Type ColorProfile Methods | Improve this Doc View Source AugmentColor(Color) Augments the color using the color profile public Color AugmentColor(Color originalColor) Parameters Type Name Description Color originalColor Color of the original. Returns Type Description Color The augmented color instance | Improve this Doc View Source Equals(ColorProfile) Indicates whether the current object is equal to another object of the same type. public bool Equals(ColorProfile other) Parameters Type Name Description ColorProfile other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(ColorProfile, ColorProfile) Implements the operator ==. public static bool operator ==(ColorProfile lhs, ColorProfile rhs) Parameters Type Name Description ColorProfile lhs The LHS. ColorProfile rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(ColorProfile, ColorProfile) Implements the operator !=. public static bool operator !=(ColorProfile lhs, ColorProfile rhs) Parameters Type Name Description ColorProfile lhs The LHS. ColorProfile rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.Types.Color.html": {
    "href": "api/Anki.Vector.Types.Color.html",
    "title": "Struct Color",
    "keywords": "Struct Color Extensions for working with robot colors Implements IEquatable < Color > Inherited Members ValueType.ToString() Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public struct Color : IEquatable<Color> Constructors | Improve this Doc View Source Color(Byte, Byte, Byte) Initializes a new instance of the Color struct. public Color(byte r, byte g, byte b) Parameters Type Name Description Byte r The r. Byte g The g. Byte b The b. Properties | Improve this Doc View Source B Gets the blue component value of this Color structure. public byte B { get; } Property Type Byte | Improve this Doc View Source Black Gets the black/off color public static Color Black { get; } Property Type Color | Improve this Doc View Source Blue Gets the blue color. public static Color Blue { get; } Property Type Color | Improve this Doc View Source Cyan Gets the cyan color. public static Color Cyan { get; } Property Type Color | Improve this Doc View Source G Gets the green component value of this Color structure. public byte G { get; } Property Type Byte | Improve this Doc View Source Green Gets the green color. public static Color Green { get; } Property Type Color | Improve this Doc View Source Magenta Gets the magenta color. public static Color Magenta { get; } Property Type Color | Improve this Doc View Source R Gets the red component value of this Color structure. public byte R { get; } Property Type Byte | Improve this Doc View Source Red Gets the red color. public static Color Red { get; } Property Type Color | Improve this Doc View Source White Gets the white color. public static Color White { get; } Property Type Color | Improve this Doc View Source Yellow Gets the yellow color. public static Color Yellow { get; } Property Type Color Methods | Improve this Doc View Source Equals(Color) Indicates whether the current object is equal to another object of the same type. public bool Equals(Color other) Parameters Type Name Description Color other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source FromRgb(Byte, Byte, Byte) Create a color from RGB values public static Color FromRgb(byte red, byte green, byte blue) Parameters Type Name Description Byte red The red component. Byte green The green component. Byte blue The blue component. Returns Type Description Color Color instance | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(Color, Color) Implements the operator ==. public static bool operator ==(Color lhs, Color rhs) Parameters Type Name Description Color lhs The LHS. Color rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(Color, Color) Implements the operator !=. public static bool operator !=(Color lhs, Color rhs) Parameters Type Name Description Color lhs The LHS. Color rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.ProximitySensorData.html": {
    "href": "api/Anki.Vector.ProximitySensorData.html",
    "title": "Struct ProximitySensorData",
    "keywords": "Struct ProximitySensorData A distance sample from the time-of-flight sensor with metadata describing reliability of the measurement The proximity sensor is located near the bottom of Vector between the two front wheels, facing forward.The reported distance describes how far in front of this sensor the robot feels an obstacle is. The sensor estimates based on time-of-flight information within a field of view which the engine resolves to a certain quality value. Four additional flags are supplied by the engine to indicate whether this proximity data is considered valid for the robot’s internal path finding. Respecting these is optional, but will help your code respect the behavior of the robot’s innate object avoidance. Implements IEquatable < ProximitySensorData > Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public struct ProximitySensorData : IEquatable<ProximitySensorData> Properties | Improve this Doc View Source DistanceMm Gets the distance between the sensor and a detected object public uint DistanceMm { get; } Property Type UInt32 | Improve this Doc View Source FoundObject Gets a value indicating whether the sensor detected an object in the valid operating range. public bool FoundObject { get; } Property Type Boolean | Improve this Doc View Source IsLiftInFov Gets a value indicating whether Vector’s lift is blocking the time-of-flight sensor. While the lift will send clear proximity signals, it’s not useful for object detection. public bool IsLiftInFov { get; } Property Type Boolean | Improve this Doc View Source SignalQuality Gets the quality of the detected object. The proximity sensor detects obstacles within a given field of view, this value represents the likelihood of the reported distance being a solid surface. public float SignalQuality { get; } Property Type Single | Improve this Doc View Source Unobstructed Gets a value indicating whether the sensor has confirmed it has not detected anything up to its max range. public bool Unobstructed { get; } Property Type Boolean Methods | Improve this Doc View Source Equals(ProximitySensorData) Indicates whether the current object is equal to another object of the same type. public bool Equals(ProximitySensorData other) Parameters Type Name Description ProximitySensorData other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(ProximitySensorData, ProximitySensorData) Implements the operator ==. public static bool operator ==(ProximitySensorData lhs, ProximitySensorData rhs) Parameters Type Name Description ProximitySensorData lhs The LHS. ProximitySensorData rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(ProximitySensorData, ProximitySensorData) Implements the operator !=. public static bool operator !=(ProximitySensorData lhs, ProximitySensorData rhs) Parameters Type Name Description ProximitySensorData lhs The LHS. ProximitySensorData rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.Exceptions.VectorInvalidValueException.html": {
    "href": "api/Anki.Vector.Exceptions.VectorInvalidValueException.html",
    "title": "Class VectorInvalidValueException",
    "keywords": "Class VectorInvalidValueException Failed to authenticate request. Inheritance Object Exception VectorException VectorConnectionException VectorInvalidValueException Implements ISerializable Namespace : Anki.Vector.Exceptions Assembly : Anki.Vector.dll Syntax public class VectorInvalidValueException : VectorConnectionException, ISerializable Implements System.Runtime.Serialization.ISerializable See Also VectorConnectionException"
  },
  "api/Anki.Vector.Events.RobotObjectMovedEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotObjectMovedEventArgs.html",
    "title": "Class RobotObjectMovedEventArgs",
    "keywords": "Class RobotObjectMovedEventArgs Object moved event args Inheritance Object EventArgs RobotEventArgs RobotObjectEventArgs RobotObjectMovedEventArgs Inherited Members RobotObjectEventArgs.ObjectEventType RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class RobotObjectMovedEventArgs : RobotObjectEventArgs Properties | Improve this Doc View Source ObjectId Gets the object identifier. public int ObjectId { get; } Property Type Int32 | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event. public uint RobotTimestamp { get; } Property Type UInt32 See Also EventArgs"
  },
  "api/Anki.Vector.Events.RobotObjectEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotObjectEventArgs.html",
    "title": "Class RobotObjectEventArgs",
    "keywords": "Class RobotObjectEventArgs Object event args Inheritance Object EventArgs RobotEventArgs RobotObjectEventArgs RobotObjectAvailableEventArgs RobotObjectConnectionStateEventArgs RobotObjectMovedEventArgs RobotObjectStoppedMovingEventArgs RobotObjectTappedEventArgs RobotObjectUpAxisChangedEventArgs RobotObservedObjectEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public abstract class RobotObjectEventArgs : RobotEventArgs Properties | Improve this Doc View Source ObjectEventType Gets the object event type. public ObjectEventType ObjectEventType { get; } Property Type ObjectEventType See Also RobotEventArgs"
  },
  "api/Anki.Vector.Events.RobotChangedObservedFaceIdEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotChangedObservedFaceIdEventArgs.html",
    "title": "Class RobotChangedObservedFaceIdEventArgs",
    "keywords": "Class RobotChangedObservedFaceIdEventArgs Robot changed observed face id event args Inheritance Object EventArgs RobotEventArgs RobotChangedObservedFaceIdEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class RobotChangedObservedFaceIdEventArgs : RobotEventArgs Properties | Improve this Doc View Source NewId Gets the new face identifier. public int NewId { get; } Property Type Int32 | Improve this Doc View Source OldId Gets the old face identifier. public int OldId { get; } Property Type Int32 See Also EventArgs"
  },
  "api/Anki.Vector.Events.PhotoTakenEventArgs.html": {
    "href": "api/Anki.Vector.Events.PhotoTakenEventArgs.html",
    "title": "Class PhotoTakenEventArgs",
    "keywords": "Class PhotoTakenEventArgs Photo taken event args Inheritance Object EventArgs RobotEventArgs PhotoTakenEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class PhotoTakenEventArgs : RobotEventArgs Properties | Improve this Doc View Source PhotoId Gets the photo identifier of the photo that was taken public uint PhotoId { get; } Property Type UInt32 See Also EventArgs"
  },
  "api/Anki.Vector.Events.ObjectDisappearedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectDisappearedEventArgs.html",
    "title": "Class ObjectDisappearedEventArgs",
    "keywords": "Class ObjectDisappearedEventArgs Object disappeared event args Inheritance Object EventArgs ObjectEventArgs ObjectDisappearedEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ObjectDisappearedEventArgs : ObjectEventArgs See Also ObjectEventArgs"
  },
  "api/Anki.Vector.Events.ObjectConnectedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectConnectedEventArgs.html",
    "title": "Class ObjectConnectedEventArgs",
    "keywords": "Class ObjectConnectedEventArgs Object disappeared event args Inheritance Object EventArgs ObjectEventArgs ObjectConnectedEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ObjectConnectedEventArgs : ObjectEventArgs See Also ObjectEventArgs"
  },
  "api/Anki.Vector.Events.CubeBatteryEventArgs.html": {
    "href": "api/Anki.Vector.Events.CubeBatteryEventArgs.html",
    "title": "Class CubeBatteryEventArgs",
    "keywords": "Class CubeBatteryEventArgs Cube battery level event args Inheritance Object EventArgs RobotEventArgs CubeBatteryEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class CubeBatteryEventArgs : RobotEventArgs Properties | Improve this Doc View Source BatteryVolts Gets the battery level in volts. public float BatteryVolts { get; } Property Type Single | Improve this Doc View Source FactoryId Gets the factory identifier of the cube. public string FactoryId { get; } Property Type String | Improve this Doc View Source Level Gets the battery level. public CubeBatteryLevel Level { get; } Property Type CubeBatteryLevel | Improve this Doc View Source TimeSinceLastReadingSec Gets the time since last reading in seconds. public float TimeSinceLastReadingSec { get; } Property Type Single See Also EventArgs"
  },
  "api/Anki.Vector.Events.ControlLostEventArgs.html": {
    "href": "api/Anki.Vector.Events.ControlLostEventArgs.html",
    "title": "Class ControlLostEventArgs",
    "keywords": "Class ControlLostEventArgs Event args for control lost event Inheritance Object EventArgs ControlLostEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ControlLostEventArgs : EventArgs See Also EventArgs"
  },
  "api/Anki.Vector.Events.ControlGrantedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ControlGrantedEventArgs.html",
    "title": "Class ControlGrantedEventArgs",
    "keywords": "Class ControlGrantedEventArgs Event args for control granted event Inheritance Object EventArgs ControlGrantedEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ControlGrantedEventArgs : EventArgs See Also EventArgs"
  },
  "api/Anki.Vector.Events.ConnectionResponseEventArgs.html": {
    "href": "api/Anki.Vector.Events.ConnectionResponseEventArgs.html",
    "title": "Class ConnectionResponseEventArgs",
    "keywords": "Class ConnectionResponseEventArgs Connection response event args Inheritance Object EventArgs RobotEventArgs ConnectionResponseEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ConnectionResponseEventArgs : RobotEventArgs Properties | Improve this Doc View Source IsPrimary Gets a value indicating whether this instance is primary. public bool IsPrimary { get; } Property Type Boolean See Also EventArgs"
  },
  "api/Anki.Vector.Events.ConnectedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ConnectedEventArgs.html",
    "title": "Class ConnectedEventArgs",
    "keywords": "Class ConnectedEventArgs Event args for the connected event Inheritance Object EventArgs ConnectedEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ConnectedEventArgs : EventArgs See Also EventArgs"
  },
  "api/Anki.Vector.Events.CheckUpdateStatusEventArgs.html": {
    "href": "api/Anki.Vector.Events.CheckUpdateStatusEventArgs.html",
    "title": "Class CheckUpdateStatusEventArgs",
    "keywords": "Class CheckUpdateStatusEventArgs Check update status event args Inheritance Object EventArgs RobotEventArgs CheckUpdateStatusEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax [Serializable] public class CheckUpdateStatusEventArgs : RobotEventArgs Properties | Improve this Doc View Source Expected Gets the expected number of bytes to download public long Expected { get; } Property Type Int64 | Improve this Doc View Source Progress Gets the current number of bytes downloaded public long Progress { get; } Property Type Int64 | Improve this Doc View Source UpdateStatus Gets the update status. public UpdateStatus UpdateStatus { get; } Property Type UpdateStatus | Improve this Doc View Source UpdateVersion Gets the update version. public string UpdateVersion { get; } Property Type String"
  },
  "api/Anki.Vector.Events.CameraSettingsUpdateEventArgs.html": {
    "href": "api/Anki.Vector.Events.CameraSettingsUpdateEventArgs.html",
    "title": "Class CameraSettingsUpdateEventArgs",
    "keywords": "Class CameraSettingsUpdateEventArgs Camera settings update event args Inheritance Object EventArgs RobotEventArgs CameraSettingsUpdateEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax [Serializable] public class CameraSettingsUpdateEventArgs : RobotEventArgs Properties | Improve this Doc View Source AutoExposureEnabled Gets a value indicating whether automatic exposure enabled. public bool AutoExposureEnabled { get; } Property Type Boolean | Improve this Doc View Source ExposureMs Gets the exposure in milliseconds. public uint ExposureMs { get; } Property Type UInt32 | Improve this Doc View Source Gain Gets the gain. public float Gain { get; } Property Type Single See Also RobotEventArgs"
  },
  "api/Anki.Vector.Events.AudioReceivedEventArgs.html": {
    "href": "api/Anki.Vector.Events.AudioReceivedEventArgs.html",
    "title": "Class AudioReceivedEventArgs",
    "keywords": "Class AudioReceivedEventArgs Audio received event args Inheritance Object EventArgs AudioReceivedEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class AudioReceivedEventArgs : EventArgs Properties | Improve this Doc View Source AudioData Gets the audio data. public byte[] AudioData { get; } Property Type Byte [] | Improve this Doc View Source DirectionStrengths Gets the histogram data of which directions this audio chunk came from public byte[] DirectionStrengths { get; } Property Type Byte [] | Improve this Doc View Source GroupId Gets the index of audio feed response public uint GroupId { get; } Property Type UInt32 | Improve this Doc View Source NoiseFloorPower Gets the power value, convert to db with log_10(value) public uint NoiseFloorPower { get; } Property Type UInt32 | Improve this Doc View Source RobotTimestamp Gets the robot timestamp at the transmission of this audio sample group public uint RobotTimestamp { get; } Property Type UInt32 | Improve this Doc View Source SourceConfidence Gets the accuracy of the calculated SourceDirection public uint SourceConfidence { get; } Property Type UInt32 | Improve this Doc View Source SourceDirection Gets the source direction; 0-11 with 12 representing \"invalid\" public uint SourceDirection { get; } Property Type UInt32 See Also EventArgs"
  },
  "api/Anki.Vector.Events.AttentionTransferEventArgs.html": {
    "href": "api/Anki.Vector.Events.AttentionTransferEventArgs.html",
    "title": "Class AttentionTransferEventArgs",
    "keywords": "Class AttentionTransferEventArgs Vector attention transfer info event args Inheritance Object EventArgs RobotEventArgs AttentionTransferEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax [Serializable] public class AttentionTransferEventArgs : RobotEventArgs Properties | Improve this Doc View Source Reason Gets the reason that the attention was changed. public AttentionTransferReason Reason { get; } Property Type Anki.Vector.ExternalInterface.AttentionTransferReason | Improve this Doc View Source SecondsAgo Gets how long ago the attention was changed. public float SecondsAgo { get; } Property Type Single"
  },
  "api/Anki.Vector.Objects.Face.html": {
    "href": "api/Anki.Vector.Objects.Face.html",
    "title": "Class Face",
    "keywords": "Class Face A single face that Vector has detected. May represent a face that has previously been enrolled, in which case name will hold the name that it was enrolled with. Each Face instance has a FaceId integer - This may change if Vector later gets an improved view and makes a different prediction about which face he is looking at. Inheritance Object RobotObject ObservableObject Face Implements INotifyPropertyChanged Inherited Members ObservableObject.IsVisible ObservableObject.LastImageRect ObservableObject.LastObservedTime ObservableObject.LastObservedTimestamp ObservableObject.Pose ObservableObject.LastEventTime RobotObject.PropertyChanged Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public class Face : ObservableObject, INotifyPropertyChanged Properties | Improve this Doc View Source Expression Gets the facial expression Vector has recognized on the face. public FacialExpression Expression { get; } Property Type FacialExpression | Improve this Doc View Source ExpressionValues Gets individual expression values histogram, sums to 100 public IReadOnlyList<uint> ExpressionValues { get; } Property Type IReadOnlyList < UInt32 > | Improve this Doc View Source FaceId Gets the internal ID assigned to the face. public int FaceId { get; } Property Type Int32 | Improve this Doc View Source LeftEye Gets points representing the outline of the left eye. public IReadOnlyList<Point> LeftEye { get; } Property Type IReadOnlyList < Point > | Improve this Doc View Source Mouth Gets points representing the outline of the mouth public IReadOnlyList<Point> Mouth { get; } Property Type IReadOnlyList < Point > | Improve this Doc View Source Name Gets the name Vector has associated with the face. Empty if face is not recognized or enrolled public string Name { get; } Property Type String | Improve this Doc View Source Nose Gets points representing the outline of the nose. public IReadOnlyList<Point> Nose { get; } Property Type IReadOnlyList < Point > | Improve this Doc View Source ObjectTypeName Gets the name of the object type. public override string ObjectTypeName { get; } Property Type String Overrides ObservableObject.ObjectTypeName | Improve this Doc View Source RightEye Gets points representing the outline of the right eye. public IReadOnlyList<Point> RightEye { get; } Property Type IReadOnlyList < Point > Methods | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Implements System.ComponentModel.INotifyPropertyChanged See Also ObservableObject"
  },
  "api/Anki.Vector.Objects.CustomWallArchetype.html": {
    "href": "api/Anki.Vector.Objects.CustomWallArchetype.html",
    "title": "Class CustomWallArchetype",
    "keywords": "Class CustomWallArchetype Custom object wall definition Inheritance Object CustomObjectArchetype CustomWallArchetype Inherited Members CustomObjectArchetype.CustomObjectType CustomObjectArchetype.MarkerWidthMm CustomObjectArchetype.MarkerHeightMm Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public class CustomWallArchetype : CustomObjectArchetype Properties | Improve this Doc View Source HeightMm Gets or sets the height of the object (in millimeters) (Z axis). public float HeightMm { get; set; } Property Type Single | Improve this Doc View Source Marker Gets or sets the marker affixed to every side of the cube. public CustomObjectMarker Marker { get; set; } Property Type CustomObjectMarker | Improve this Doc View Source WidthMm Gets or sets the width of the object (in millimeters) (Y axis). public float WidthMm { get; set; } Property Type Single Methods | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() See Also CustomObjectArchetype"
  },
  "api/Anki.Vector.Events.UnexpectedMovementEventArgs.html": {
    "href": "api/Anki.Vector.Events.UnexpectedMovementEventArgs.html",
    "title": "Class UnexpectedMovementEventArgs",
    "keywords": "Class UnexpectedMovementEventArgs Unexpected movement event args Inheritance Object EventArgs RobotEventArgs UnexpectedMovementEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax [Serializable] public class UnexpectedMovementEventArgs : RobotEventArgs Properties | Improve this Doc View Source Timestamp Gets the timestamp. public uint Timestamp { get; } Property Type UInt32 | Improve this Doc View Source UnexpectedMovementSide Gets the unexpected movement side. public UnexpectedMovementSide UnexpectedMovementSide { get; } Property Type UnexpectedMovementSide | Improve this Doc View Source UnexpectedMovementType Gets the type of the unexpected movement. public UnexpectedMovementType UnexpectedMovementType { get; } Property Type UnexpectedMovementType See Also RobotEventArgs"
  },
  "api/Anki.Vector.Events.TimestampedStatusEventArgs.html": {
    "href": "api/Anki.Vector.Events.TimestampedStatusEventArgs.html",
    "title": "Class TimestampedStatusEventArgs",
    "keywords": "Class TimestampedStatusEventArgs The timestamped status event args Inheritance Object EventArgs RobotEventArgs TimestampedStatusEventArgs FaceEnrollmentCompletedEventArgs FaceScanCompleteEventArgs FaceScanStartedEventArgs FeatureStatusEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public abstract class TimestampedStatusEventArgs : RobotEventArgs Properties | Improve this Doc View Source StatusType Gets the type of the status. public StatusType StatusType { get; } Property Type StatusType | Improve this Doc View Source Timestamp Gets the robot timestamp of the event public DateTimeOffset Timestamp { get; } Property Type DateTimeOffset See Also EventArgs"
  },
  "api/Anki.Vector.Events.RobotObservedObjectEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotObservedObjectEventArgs.html",
    "title": "Class RobotObservedObjectEventArgs",
    "keywords": "Class RobotObservedObjectEventArgs Robot observed object event args Inheritance Object EventArgs RobotEventArgs RobotObjectEventArgs RobotObservedObjectEventArgs Inherited Members RobotObjectEventArgs.ObjectEventType RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class RobotObservedObjectEventArgs : RobotObjectEventArgs Properties | Improve this Doc View Source CustomObjectType Gets the index of the custom object. public CustomObjectType CustomObjectType { get; } Property Type CustomObjectType | Improve this Doc View Source ImageRect Gets the position in image coordinates public ImageRect ImageRect { get; } Property Type ImageRect | Improve this Doc View Source IsActive Gets a value indicating whether the object is active. public bool IsActive { get; } Property Type Boolean | Improve this Doc View Source ObjectId Gets the object identifier. public int ObjectId { get; } Property Type Int32 | Improve this Doc View Source ObjectType Gets the type of the object. public ObjectType ObjectType { get; } Property Type ObjectType | Improve this Doc View Source Pose Gets the pose of the object public Pose Pose { get; } Property Type Pose | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event public uint RobotTimestamp { get; } Property Type UInt32 | Improve this Doc View Source TopFaceOrientationRad Gets the absolute top face orientation in radians public float TopFaceOrientationRad { get; } Property Type Single See Also EventArgs"
  },
  "api/Anki.Vector.Objects.html": {
    "href": "api/Anki.Vector.Objects.html",
    "title": "Namespace Anki.Vector.Objects",
    "keywords": "Namespace Anki.Vector.Objects Classes Charger Vector’s charger object, which the robot can observe and drive toward. We get an ObjectObserved message when the robot sees the charger. CustomBoxArchetype Custom object cuboid definition. CustomCubeArchetype Custom object cube definition CustomObject An object defined by the SDK observed by the robot. The object will reference a CustomObjectArchetype , with additional instance data. CustomObjectArchetype Abstract base class for all custom object definition types CustomWallArchetype Custom object wall definition Face A single face that Vector has detected. May represent a face that has previously been enrolled, in which case name will hold the name that it was enrolled with. Each Face instance has a FaceId integer - This may change if Vector later gets an improved view and makes a different prediction about which face he is looking at. LightCube Represents Vector’s Cube. The LightCube object has four LEDs that Vector can actively manipulate and communicate with. As Vector drives around, he uses the position of objects that he recognizes, including his cube, to localize himself, taking note of the Pose of the objects. You can subscribe to cube events including ObjectTapped , ObjectAppeared , and ObjectDisappeared . Vector supports 1 LightCube. ObjectWithId Object tracked with an ObjectId ObservableObject Represents any object Vector can see in the world. Enums FacialExpression Facial expressions ObjectType The type of the object UpAxis The up access of the object"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Documentation",
    "keywords": "API Documentation Namespaces Anki.Vector This namespace contains the main Anki.Vector.Robot class and all the various API components listed below. Component Description AnimationComponent Animation related methods AudioComponent Support for Vector's speakers BehaviorComponent Complex tasks which require Vector's internal logic to complete CameraComponent Support for Vector's camera feed ControlComponent Manage control of Vector's behaviors EventComponent Subscribe to events generated directly by Vector FaceComponent Manage faces stored on the robot MotorComponent Control the low-level motor functions NavMapComponent Vector's navigation memory map PhotoComponent Manage the photos stored in Vector ScreenComponent Display images on Vector's screen VisionComponent Enable/disable object/face detection modes WorldComponent Vector's known view of the world In addition this namespace contains the Authentication class for logging into Vector and creating RobotConfiguration instances for connecting to a Vector robot. Anki.Vector.Events This namespace that contains all the EventArgs types for all the events generated by the SDK. This includes events generated directly by the robot ( RobotEventArgs ) and events generated by the main Robot class and various other components. Anki.Vector.Exceptions This namespace contains the exceptions generated by the SDK. They all inherit from VectorException . Anki.Vector.Objects This namespace contains the types for the various supported objects that Vector can recognize including his charger, light cube, faces, and custom objects. Object Type Description Charger Vector's charger object CustomBoxArchetype Custom object cuboid definition CustomCubeArchetype Custom object cube definition CustomObject Custom object instance CustomWallArchetype Custom object wall definition Face A single face that Vector has detected. LightCube Vector’s Light Cube. Anki.Vector.Types This namespace contains various classes and structs representing the data to received from Vector or sent to Vector."
  },
  "api/Anki.Vector.Events.ObjectObservedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectObservedEventArgs.html",
    "title": "Class ObjectObservedEventArgs",
    "keywords": "Class ObjectObservedEventArgs Object appeared event args Inheritance Object EventArgs ObjectEventArgs ObjectObservedEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ObjectObservedEventArgs : ObjectEventArgs Properties | Improve this Doc View Source ImageRect Gets the position in image coordinates public ImageRect ImageRect { get; } Property Type ImageRect | Improve this Doc View Source Pose Gets the pose of the object public Pose Pose { get; } Property Type Pose | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event public uint RobotTimestamp { get; } Property Type UInt32 See Also ObjectEventArgs"
  },
  "api/Anki.Vector.Events.ObjectMovingEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectMovingEventArgs.html",
    "title": "Class ObjectMovingEventArgs",
    "keywords": "Class ObjectMovingEventArgs Object moved event args Inheritance Object EventArgs ObjectEventArgs ObjectMovingEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ObjectMovingEventArgs : ObjectEventArgs Properties | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event public uint RobotTimestamp { get; } Property Type UInt32 See Also ObjectEventArgs"
  },
  "api/Anki.Vector.Events.ObjectFinishedMovingEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectFinishedMovingEventArgs.html",
    "title": "Class ObjectFinishedMovingEventArgs",
    "keywords": "Class ObjectFinishedMovingEventArgs Object stopped moving event args Inheritance Object EventArgs ObjectEventArgs ObjectFinishedMovingEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ObjectFinishedMovingEventArgs : ObjectEventArgs Properties | Improve this Doc View Source MoveDuration Gets the duration of the move. public TimeSpan MoveDuration { get; } Property Type TimeSpan | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event public uint RobotTimestamp { get; } Property Type UInt32 See Also ObjectEventArgs"
  },
  "api/Anki.Vector.Events.RobotObservedMotionEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotObservedMotionEventArgs.html",
    "title": "Class RobotObservedMotionEventArgs",
    "keywords": "Class RobotObservedMotionEventArgs Robot observed motion event args Inheritance Object EventArgs RobotEventArgs RobotObservedMotionEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax [Serializable] public class RobotObservedMotionEventArgs : RobotEventArgs Properties | Improve this Doc View Source BottomImgArea Gets the area of the supporting region for the point, as a fraction of the bottom region public float BottomImgArea { get; } Property Type Single | Improve this Doc View Source BottomImgX Gets pixel coordinate of the point in the image, relative to top-left corner. public int BottomImgX { get; } Property Type Int32 | Improve this Doc View Source BottomImgY Gets pixel coordinate of the point in the image, relative to top-left corner. public int BottomImgY { get; } Property Type Int32 | Improve this Doc View Source GroundArea Gets the area of the supporting region for the point, as a fraction of the ground ROI. If unable to map to the ground, area = 0 public float GroundArea { get; } Property Type Single | Improve this Doc View Source GroundX Gets the coordinates of the point on the ground, relative to robot, in mm public int GroundX { get; } Property Type Int32 | Improve this Doc View Source GroundY Gets the coordinates of the point on the ground, relative to robot, in mm public int GroundY { get; } Property Type Int32 | Improve this Doc View Source ImgArea Gets the area of the supporting region for the point, as a fraction of the image public float ImgArea { get; } Property Type Single | Improve this Doc View Source ImgX Gets the pixel coordinate of the point in the image, relative to top-left corner. public int ImgX { get; } Property Type Int32 | Improve this Doc View Source ImgY Gets the pixel coordinate of the point in the image, relative to top-left corner. public int ImgY { get; } Property Type Int32 | Improve this Doc View Source LeftImgArea Gets the area of the supporting region for the point, as a fraction of the left region public float LeftImgArea { get; } Property Type Single | Improve this Doc View Source LeftImgX Gets the pixel coordinate of the point in the image, relative to top-left corner. public int LeftImgX { get; } Property Type Int32 | Improve this Doc View Source LeftImgY Gets the pixel coordinate of the point in the image, relative to top-left corner. public int LeftImgY { get; } Property Type Int32 | Improve this Doc View Source RightImgArea Gets the area of the supporting region for the point, as a fraction of the right region public float RightImgArea { get; } Property Type Single | Improve this Doc View Source RightImgX Gets the pixel coordinate of the point in the image, relative to top-left corner. public int RightImgX { get; } Property Type Int32 | Improve this Doc View Source RightImgY Gets the pixel coordinate of the point in the image, relative to top-left corner. public int RightImgY { get; } Property Type Int32 | Improve this Doc View Source Timestamp Gets the timestamp of the corresponding image public uint Timestamp { get; } Property Type UInt32 | Improve this Doc View Source TopImgArea Gets the area of the supporting region for the point, as a fraction of the top region public float TopImgArea { get; } Property Type Single | Improve this Doc View Source TopImgX Gets the pixel coordinate of the point in the image, relative to top-left corner. public int TopImgX { get; } Property Type Int32 | Improve this Doc View Source TopImgY Gets the pixel coordinate of the point in the image, relative to top-left corner. public int TopImgY { get; } Property Type Int32 See Also EventArgs"
  },
  "api/Anki.Vector.Events.RobotObservedFaceEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotObservedFaceEventArgs.html",
    "title": "Class RobotObservedFaceEventArgs",
    "keywords": "Class RobotObservedFaceEventArgs Robot Observed Face Event Args Inheritance Object EventArgs RobotEventArgs RobotObservedFaceEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class RobotObservedFaceEventArgs : RobotEventArgs Properties | Improve this Doc View Source Expression Gets the facial expression Vector has recognized on the face. public FacialExpression Expression { get; } Property Type FacialExpression | Improve this Doc View Source ExpressionValues Gets individual expression values histogram, sums to 100 public IReadOnlyList<uint> ExpressionValues { get; } Property Type IReadOnlyList < UInt32 > | Improve this Doc View Source FaceId Gets the internal ID assigned to the face. public int FaceId { get; } Property Type Int32 | Improve this Doc View Source ImageRect Gets the image rectangle of the face. public ImageRect ImageRect { get; } Property Type ImageRect | Improve this Doc View Source LeftEye Gets points representing the outline of the left eye. public IReadOnlyList<Point> LeftEye { get; } Property Type IReadOnlyList < Point > | Improve this Doc View Source Mouth Gets points representing the outline of the mouth public IReadOnlyList<Point> Mouth { get; } Property Type IReadOnlyList < Point > | Improve this Doc View Source Name Gets the name Vector has associated with the face. Empty if face is not recognized or enrolled public string Name { get; } Property Type String | Improve this Doc View Source Nose Gets points representing the outline of the nose. public IReadOnlyList<Point> Nose { get; } Property Type IReadOnlyList < Point > | Improve this Doc View Source Pose Gets the location of the face public Pose Pose { get; } Property Type Pose | Improve this Doc View Source RightEye Gets points representing the outline of the right eye. public IReadOnlyList<Point> RightEye { get; } Property Type IReadOnlyList < Point > | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event public uint RobotTimestamp { get; } Property Type UInt32 See Also RobotEventArgs"
  },
  "api/Anki.Vector.Events.RobotObjectUpAxisChangedEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotObjectUpAxisChangedEventArgs.html",
    "title": "Class RobotObjectUpAxisChangedEventArgs",
    "keywords": "Class RobotObjectUpAxisChangedEventArgs Object up axis changed event args Inheritance Object EventArgs RobotEventArgs RobotObjectEventArgs RobotObjectUpAxisChangedEventArgs Inherited Members RobotObjectEventArgs.ObjectEventType RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class RobotObjectUpAxisChangedEventArgs : RobotObjectEventArgs Properties | Improve this Doc View Source ObjectId Gets the object identifier. public int ObjectId { get; } Property Type Int32 | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event public uint RobotTimestamp { get; } Property Type UInt32 | Improve this Doc View Source UpAxis Gets the up axis. public UpAxis UpAxis { get; } Property Type UpAxis See Also EventArgs"
  },
  "api/Anki.Vector.Events.RobotObjectConnectionStateEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotObjectConnectionStateEventArgs.html",
    "title": "Class RobotObjectConnectionStateEventArgs",
    "keywords": "Class RobotObjectConnectionStateEventArgs Object connection state event args Inheritance Object EventArgs RobotEventArgs RobotObjectEventArgs RobotObjectConnectionStateEventArgs Inherited Members RobotObjectEventArgs.ObjectEventType RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class RobotObjectConnectionStateEventArgs : RobotObjectEventArgs Properties | Improve this Doc View Source Connected Gets a value indicating whether the object is connected. public bool Connected { get; } Property Type Boolean | Improve this Doc View Source CustomObjectType Gets the index of the custom object. public CustomObjectType CustomObjectType { get; } Property Type CustomObjectType | Improve this Doc View Source FactoryId Gets the factory identifier of the object. public string FactoryId { get; } Property Type String | Improve this Doc View Source ObjectId Gets the object identifier. public int ObjectId { get; } Property Type Int32 | Improve this Doc View Source ObjectType Gets the type of the object. public ObjectType ObjectType { get; } Property Type ObjectType See Also EventArgs"
  },
  "api/Anki.Vector.Events.RobotObjectAvailableEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotObjectAvailableEventArgs.html",
    "title": "Class RobotObjectAvailableEventArgs",
    "keywords": "Class RobotObjectAvailableEventArgs Cube availability event args Inheritance Object EventArgs RobotEventArgs RobotObjectEventArgs RobotObjectAvailableEventArgs Inherited Members RobotObjectEventArgs.ObjectEventType RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class RobotObjectAvailableEventArgs : RobotObjectEventArgs Properties | Improve this Doc View Source FactoryId Gets the factory identifier of the available cube public string FactoryId { get; } Property Type String See Also EventArgs"
  },
  "api/Anki.Vector.Events.RobotEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotEventArgs.html",
    "title": "Class RobotEventArgs",
    "keywords": "Class RobotEventArgs Robot event args Inheritance Object EventArgs RobotEventArgs AlexaAuthEventArgs AttentionTransferEventArgs CameraSettingsUpdateEventArgs CheckUpdateStatusEventArgs ConnectionResponseEventArgs CubeBatteryEventArgs CubeConnectionLostEventArgs JdocsChangedEventArgs KeepAliveEventArgs MirrorModeDisabledEventArgs PhotoTakenEventArgs RobotChangedObservedFaceIdEventArgs RobotErasedEnrolledFaceEventArgs RobotObjectEventArgs RobotObservedFaceEventArgs RobotObservedMotionEventArgs RobotRenamedEnrolledFaceEventArgs RobotStateEventArgs StimulationInfoEventArgs TimestampedStatusEventArgs UnexpectedMovementEventArgs UserIntentEventArgs VisionModesAutoDisabledEventArgs WakeWordEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public abstract class RobotEventArgs : EventArgs Properties | Improve this Doc View Source EventType Gets the event type. public EventType EventType { get; } Property Type EventType See Also EventArgs"
  },
  "api/Anki.Vector.Events.RobotErasedEnrolledFaceEventArgs.html": {
    "href": "api/Anki.Vector.Events.RobotErasedEnrolledFaceEventArgs.html",
    "title": "Class RobotErasedEnrolledFaceEventArgs",
    "keywords": "Class RobotErasedEnrolledFaceEventArgs Robot erased enrolled face event args Inheritance Object EventArgs RobotEventArgs RobotErasedEnrolledFaceEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax [Serializable] public class RobotErasedEnrolledFaceEventArgs : RobotEventArgs Properties | Improve this Doc View Source FaceId Gets the face identifier. public int FaceId { get; } Property Type Int32 | Improve this Doc View Source Name Gets the face name. public string Name { get; } Property Type String See Also RobotEventArgs"
  },
  "api/Anki.Vector.Events.ObjectUpAxisChangedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectUpAxisChangedEventArgs.html",
    "title": "Class ObjectUpAxisChangedEventArgs",
    "keywords": "Class ObjectUpAxisChangedEventArgs Object up axis changed event args Inheritance Object EventArgs ObjectEventArgs ObjectUpAxisChangedEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ObjectUpAxisChangedEventArgs : ObjectEventArgs Properties | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event public uint RobotTimestamp { get; } Property Type UInt32 | Improve this Doc View Source UpAxis Gets up axis. public UpAxis UpAxis { get; } Property Type UpAxis See Also ObjectEventArgs"
  },
  "api/Anki.Vector.Events.ObjectTappedEventArgs.html": {
    "href": "api/Anki.Vector.Events.ObjectTappedEventArgs.html",
    "title": "Class ObjectTappedEventArgs",
    "keywords": "Class ObjectTappedEventArgs Object tapped event args Inheritance Object EventArgs ObjectEventArgs ObjectTappedEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class ObjectTappedEventArgs : ObjectEventArgs Properties | Improve this Doc View Source RobotTimestamp Gets the robot timestamp of the event public uint RobotTimestamp { get; } Property Type UInt32 See Also ObjectEventArgs"
  },
  "api/Anki.Vector.Events.NavMapUpdateEventArgs.html": {
    "href": "api/Anki.Vector.Events.NavMapUpdateEventArgs.html",
    "title": "Class NavMapUpdateEventArgs",
    "keywords": "Class NavMapUpdateEventArgs Nav map update event args Inheritance Object EventArgs NavMapUpdateEventArgs Inherited Members EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class NavMapUpdateEventArgs : EventArgs Properties | Improve this Doc View Source NavMap Gets the nav map grid. public NavMapGrid NavMap { get; } Property Type NavMapGrid See Also EventArgs"
  },
  "api/Anki.Vector.Events.MirrorModeDisabledEventArgs.html": {
    "href": "api/Anki.Vector.Events.MirrorModeDisabledEventArgs.html",
    "title": "Class MirrorModeDisabledEventArgs",
    "keywords": "Class MirrorModeDisabledEventArgs Mirror mode disabled event args Inheritance Object EventArgs RobotEventArgs MirrorModeDisabledEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class MirrorModeDisabledEventArgs : RobotEventArgs See Also RobotEventArgs"
  },
  "api/Anki.Vector.Events.KnownFaceAppearedEventArgs.html": {
    "href": "api/Anki.Vector.Events.KnownFaceAppearedEventArgs.html",
    "title": "Class KnownFaceAppearedEventArgs",
    "keywords": "Class KnownFaceAppearedEventArgs Known face detected event args Inheritance Object EventArgs ObjectEventArgs KnownFaceAppearedEventArgs Inherited Members ObjectEventArgs.Object EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class KnownFaceAppearedEventArgs : ObjectEventArgs Properties | Improve this Doc View Source Face Gets the face that triggered the event public Face Face { get; } Property Type Face See Also EventArgs"
  },
  "api/Anki.Vector.Events.KeepAliveEventArgs.html": {
    "href": "api/Anki.Vector.Events.KeepAliveEventArgs.html",
    "title": "Class KeepAliveEventArgs",
    "keywords": "Class KeepAliveEventArgs Keep alive event args Inheritance Object EventArgs RobotEventArgs KeepAliveEventArgs Inherited Members RobotEventArgs.EventType EventArgs.Empty Namespace : Anki.Vector.Events Assembly : Anki.Vector.dll Syntax public class KeepAliveEventArgs : RobotEventArgs See Also RobotEventArgs"
  },
  "api/Anki.Vector.Types.Vector3.html": {
    "href": "api/Anki.Vector.Types.Vector3.html",
    "title": "Struct Vector3",
    "keywords": "Struct Vector3 Represents a 3D Vector (type/units aren't specified) Implements IEquatable < Vector3 > Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public struct Vector3 : IEquatable<Vector3> Constructors | Improve this Doc View Source Vector3(Single, Single, Single) Initializes a new instance of the Vector3 struct. public Vector3(float x, float y, float z) Parameters Type Name Description Single x The x. Single y The y. Single z The z. Properties | Improve this Doc View Source Magnitude Gets the magnitude. public float Magnitude { get; } Property Type Single | Improve this Doc View Source Normalized Gets the normalized version of this instance with the same direction and unit magnitude. public Vector3 Normalized { get; } Property Type Vector3 | Improve this Doc View Source X Gets the x component public float X { get; } Property Type Single | Improve this Doc View Source Y Gets the y component public float Y { get; } Property Type Single | Improve this Doc View Source Z Gets the z component public float Z { get; } Property Type Single Methods | Improve this Doc View Source Cross(Vector3) Return the cross product of this instance with another Vector3 public Vector3 Cross(Vector3 other) Parameters Type Name Description Vector3 other The other. Returns Type Description Vector3 The cross product | Improve this Doc View Source Dot(Vector3) Return the dots product of this instance with another Vector3 public float Dot(Vector3 other) Parameters Type Name Description Vector3 other The other. Returns Type Description Single The dot product | Improve this Doc View Source Equals(Vector3) Indicates whether the current object is equal to another object of the same type. public bool Equals(Vector3 other) Parameters Type Name Description Vector3 other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Vector3, Vector3) Implements the addition operator. public static Vector3 operator +(Vector3 lhs, Vector3 rhs) Parameters Type Name Description Vector3 lhs The left value. Vector3 rhs The right value. Returns Type Description Vector3 Sum of 2 instances | Improve this Doc View Source Division(Vector3, Int32) Implements the division operator. public static Vector3 operator /(Vector3 vector, int value) Parameters Type Name Description Vector3 vector The Vector. Int32 value The value to divide by Returns Type Description Vector3 The Vector divided by the value | Improve this Doc View Source Division(Vector3, Single) Implements the division operator. public static Vector3 operator /(Vector3 vector, float value) Parameters Type Name Description Vector3 vector The Vector. Single value The value to divide by Returns Type Description Vector3 The Vector divided by the value | Improve this Doc View Source Equality(Vector3, Vector3) Implements the operator ==. public static bool operator ==(Vector3 lhs, Vector3 rhs) Parameters Type Name Description Vector3 lhs The LHS. Vector3 rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(Vector3, Vector3) Implements the operator !=. public static bool operator !=(Vector3 lhs, Vector3 rhs) Parameters Type Name Description Vector3 lhs The LHS. Vector3 rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Multiply(Vector3, Int32) Implements the multiplication operator. public static Vector3 operator *(Vector3 vector, int value) Parameters Type Name Description Vector3 vector The Vector. Int32 value The value to multiply by Returns Type Description Vector3 The Vector multiplied by the value | Improve this Doc View Source Multiply(Vector3, Single) Implements the multiplication operator. public static Vector3 operator *(Vector3 vector, float value) Parameters Type Name Description Vector3 vector The Vector. Single value The value to multiply by Returns Type Description Vector3 The Vector multiplied by the value | Improve this Doc View Source Subtraction(Vector3, Vector3) Implements the subtraction operator. public static Vector3 operator -(Vector3 lhs, Vector3 rhs) Parameters Type Name Description Vector3 lhs The left value. Vector3 rhs The right value. Returns Type Description Vector3 Difference of 2 instances Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.Types.Vector2.html": {
    "href": "api/Anki.Vector.Types.Vector2.html",
    "title": "Struct Vector2",
    "keywords": "Struct Vector2 Represents a 2D Vector (type/units aren't specified) Implements IEquatable < Vector2 > Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public struct Vector2 : IEquatable<Vector2> Constructors | Improve this Doc View Source Vector2(Single, Single) Initializes a new instance of the Vector2 struct. public Vector2(float x, float y) Parameters Type Name Description Single x The x. Single y The y. Properties | Improve this Doc View Source X Gets the x component public float X { get; } Property Type Single | Improve this Doc View Source Y Gets the y component public float Y { get; } Property Type Single Methods | Improve this Doc View Source Equals(Vector2) Indicates whether the current object is equal to another object of the same type. public bool Equals(Vector2 other) Parameters Type Name Description Vector2 other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Vector2, Vector2) Implements the addition operator. public static Vector2 operator +(Vector2 lhs, Vector2 rhs) Parameters Type Name Description Vector2 lhs The left value. Vector2 rhs The right value. Returns Type Description Vector2 Sum of 2 instances | Improve this Doc View Source Division(Vector2, Int32) Implements the division operator. public static Vector2 operator /(Vector2 vector, int value) Parameters Type Name Description Vector2 vector The Vector. Int32 value The value to divide by Returns Type Description Vector2 The Vector divided by the value | Improve this Doc View Source Division(Vector2, Single) Implements the division operator. public static Vector2 operator /(Vector2 vector, float value) Parameters Type Name Description Vector2 vector The Vector. Single value The value to divide by Returns Type Description Vector2 The Vector divided by the value | Improve this Doc View Source Equality(Vector2, Vector2) Implements the operator ==. public static bool operator ==(Vector2 lhs, Vector2 rhs) Parameters Type Name Description Vector2 lhs The LHS. Vector2 rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(Vector2, Vector2) Implements the operator !=. public static bool operator !=(Vector2 lhs, Vector2 rhs) Parameters Type Name Description Vector2 lhs The LHS. Vector2 rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Multiply(Vector2, Int32) Implements the multiplication operator. public static Vector2 operator *(Vector2 vector, int value) Parameters Type Name Description Vector2 vector The Vector. Int32 value The value to multiply by Returns Type Description Vector2 The Vector multiplied by the value | Improve this Doc View Source Multiply(Vector2, Single) Implements the multiplication operator. public static Vector2 operator *(Vector2 vector, float value) Parameters Type Name Description Vector2 vector The Vector. Single value The value to multiply by Returns Type Description Vector2 The Vector multiplied by the value | Improve this Doc View Source Subtraction(Vector2, Vector2) Implements the subtraction operator. public static Vector2 operator -(Vector2 lhs, Vector2 rhs) Parameters Type Name Description Vector2 lhs The left value. Vector2 rhs The right value. Returns Type Description Vector2 Difference of 2 instances Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.Types.Position.html": {
    "href": "api/Anki.Vector.Types.Position.html",
    "title": "Struct Position",
    "keywords": "Struct Position Represents the position of an object in the world. A position consists of its x, y and z values in millimeters. Implements IEquatable < Position > Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public struct Position : IEquatable<Position> Constructors | Improve this Doc View Source Position(Single, Single, Single) Initializes a new instance of the Position struct. public Position(float x, float y, float z) Parameters Type Name Description Single x The x position in millimeters. Single y The y position in millimeters. Single z The z position in millimeters. Properties | Improve this Doc View Source X Gets the x position in millimeters public float X { get; } Property Type Single | Improve this Doc View Source Y Gets the y position in millimeters public float Y { get; } Property Type Single | Improve this Doc View Source Z Gets the z position in millimeters public float Z { get; } Property Type Single Methods | Improve this Doc View Source Equals(Position) Indicates whether the current object is equal to another object of the same type. public bool Equals(Position other) Parameters Type Name Description Position other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(Position, Position) Implements the operator ==. public static bool operator ==(Position lhs, Position rhs) Parameters Type Name Description Position lhs The LHS. Position rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(Position, Position) Implements the operator !=. public static bool operator !=(Position lhs, Position rhs) Parameters Type Name Description Position lhs The LHS. Position rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.Types.Pose.html": {
    "href": "api/Anki.Vector.Types.Pose.html",
    "title": "Class Pose",
    "keywords": "Class Pose Represents where an object is in the world. Whenever Vector is delocalized (i.e.whenever Vector no longer knows where he is - e.g.when he's picked up), Vector creates a new pose starting at (0,0,0) with no rotation, with origin_id incremented to show that these poses cannot be compared with earlier ones. As Vector drives around, his pose (and the pose of other objects he observes - e.g.faces, his LightCube, charger, etc.) is relative to this initial position and orientation. The coordinate space is relative to Vector, where Vector's origin is the point on the ground between Vector's two front wheels. The X axis is Vector's forward direction, the Y axis is to Vector's left, and the Z axis is up. Only poses of the same origin can safely be compared or operated on. Inheritance Object Pose Implements IEquatable < Pose > Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class Pose : IEquatable<Pose> Constructors | Improve this Doc View Source Pose() Initializes a new instance of the Pose class. public Pose() | Improve this Doc View Source Pose(Position, Quaternion, Nullable<UInt32>) Initializes a new instance of the Pose class. public Pose(Position position, Quaternion rotation, uint? originId) Parameters Type Name Description Position position The position. Quaternion rotation The rotation. Nullable < UInt32 > originId The origin identifier. Properties | Improve this Doc View Source IsValid Returns true if this Pose is valid. public bool IsValid { get; } Property Type Boolean | Improve this Doc View Source OriginId Gets the origin identifier. public uint? OriginId { get; } Property Type Nullable < UInt32 > | Improve this Doc View Source Position Gets the position component of this pose. public Position Position { get; } Property Type Position | Improve this Doc View Source Rotation Gets the rotation component of this pose. public Quaternion Rotation { get; } Property Type Quaternion Methods | Improve this Doc View Source Equals(Pose) Indicates whether the current object is equal to another object of the same type. public bool Equals(Pose other) Parameters Type Name Description Pose other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode() | Improve this Doc View Source IsComparable(Pose) Checks whether these two poses are comparable. Poses are comparable if they have the same origin. public bool IsComparable(Pose other) Parameters Type Name Description Pose other The other pose to compare against. Returns Type Description Boolean true if the other pose is comparable; otherwise, false . | Improve this Doc View Source RelativeToThis(Pose) Creates a new pose such that newPose's origin is now at the location of this pose. public Pose RelativeToThis(Pose newPose) Parameters Type Name Description Pose newPose The pose which origin is being changed. Returns Type Description Pose A new pose relative to this pose | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(Pose, Pose) Implements the operator ==. public static bool operator ==(Pose lhs, Pose rhs) Parameters Type Name Description Pose lhs The LHS. Pose rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(Pose, Pose) Implements the operator !=. public static bool operator !=(Pose lhs, Pose rhs) Parameters Type Name Description Pose lhs The LHS. Pose rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.Types.Point.html": {
    "href": "api/Anki.Vector.Types.Point.html",
    "title": "Struct Point",
    "keywords": "Struct Point Represents a point. Implements IEquatable < Point > Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public struct Point : IEquatable<Point> Constructors | Improve this Doc View Source Point(Single, Single) Initializes a new instance of the Point struct. public Point(float x, float y) Parameters Type Name Description Single x The x position. Single y The y position. Properties | Improve this Doc View Source X Gets the x position public float X { get; } Property Type Single | Improve this Doc View Source Y Gets the y position public float Y { get; } Property Type Single Methods | Improve this Doc View Source Equals(Point) Indicates whether the current object is equal to another object of the same type. public bool Equals(Point other) Parameters Type Name Description Point other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Converts to string. public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(Point, Point) Implements the operator ==. public static bool operator ==(Point lhs, Point rhs) Parameters Type Name Description Point lhs The LHS. Point rhs The RHS. Returns Type Description Boolean The result of the operator. | Improve this Doc View Source Inequality(Point, Point) Implements the operator !=. public static bool operator !=(Point lhs, Point rhs) Parameters Type Name Description Point lhs The LHS. Point rhs The RHS. Returns Type Description Boolean The result of the operator. Implements System.IEquatable<T>"
  },
  "api/Anki.Vector.FaceComponent.html": {
    "href": "api/Anki.Vector.FaceComponent.html",
    "title": "Class FaceComponent",
    "keywords": "Class FaceComponent Manage the state of the faces on the robot. Inheritance Object RobotObject Component FaceComponent Implements INotifyPropertyChanged Inherited Members RobotObject.PropertyChanged Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public class FaceComponent : Component, INotifyPropertyChanged Methods | Improve this Doc View Source CancelFaceEnrollment() Cancels the face enrollment. public Task<StatusCode> CancelFaceEnrollment() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source EnrollFace(String, Face, Boolean, Boolean, Boolean) Enrolls face into the robot (untested) public Task<StatusCode> EnrollFace(string name, Face faceToEnroll, bool saveToRobot = true, bool sayName = true, bool useMusic = true) Parameters Type Name Description String name The name. Face faceToEnroll The specific observed face to enroll. Boolean saveToRobot Save the robot's NVStorage when done (NOTE: will (re)save everyone enrolled!) Boolean sayName Play say-name/celebration animations on success before completing Boolean useMusic Starts special music during say-name animations (will leave music playing) Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Exceptions Type Condition ArgumentNullException faceToEnroll | Improve this Doc View Source EnrollFace(String, Boolean, Boolean, Boolean) Enrolls face into the robot (untested) public Task<StatusCode> EnrollFace(string name, bool saveToRobot = true, bool sayName = true, bool useMusic = true) Parameters Type Name Description String name The name of the person to enroll. Boolean saveToRobot Save the robot's NVStorage when done (NOTE: will (re)save everyone enrolled!) Boolean sayName Play say-name/celebration animations on success before completing Boolean useMusic Starts special music during say-name animations (will leave music playing) Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source EnrollFace(String, Int32, Boolean, Boolean, Boolean) Enrolls face into the robot (untested) public Task<StatusCode> EnrollFace(string name, int observedFaceId, bool saveToRobot = true, bool sayName = true, bool useMusic = true) Parameters Type Name Description String name The name of the person to enroll. Int32 observedFaceId The ID of a specific observed face to enroll (0 for next one we see) Boolean saveToRobot Save the robot's NVStorage when done (NOTE: will (re)save everyone enrolled!) Boolean sayName Play say-name/celebration animations on success before completing Boolean useMusic Starts special music during say-name animations (will leave music playing) Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source EraseAllEnrolledFaces() Erase the enrollment (name) records for all faces. public Task<StatusCode> EraseAllEnrolledFaces() Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source EraseEnrolledFace(KnownFace) Erases the enrollment (name) record for the face. public Task<StatusCode> EraseEnrolledFace(KnownFace face) Parameters Type Name Description KnownFace face The face. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source EraseEnrolledFace(Int32) Erases the enrollment (name) record for the face. public Task<StatusCode> EraseEnrolledFace(int faceId) Parameters Type Name Description Int32 faceId The face identifier. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source GetEnrolledFaces() Gets the enrolled faces. public Task<IEnumerable<KnownFace>> GetEnrolledFaces() Returns Type Description Task < IEnumerable < KnownFace >> A task that represents the asynchronous operation; the task result contains an enumeration of KnownFace instances. | Improve this Doc View Source UpdateEnrolledFace(KnownFace, Face, Boolean, Boolean, Boolean) Updates an existing enrolled face public Task<StatusCode> UpdateEnrolledFace(KnownFace faceToUpdate, Face faceToEnroll, bool saveToRobot = true, bool sayName = true, bool useMusic = true) Parameters Type Name Description KnownFace faceToUpdate An existing face to merge final enrollment into. Face faceToEnroll The specific observed face to enroll. Boolean saveToRobot Save the robot's NVStorage when done (NOTE: will (re)save everyone enrolled!) Boolean sayName Play say-name/celebration animations on success before completing Boolean useMusic Starts special music during say-name animations (will leave music playing) Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source UpdateEnrolledFace(KnownFace, Boolean, Boolean, Boolean) Updates an existing enrolled face public Task<StatusCode> UpdateEnrolledFace(KnownFace faceToUpdate, bool saveToRobot = true, bool sayName = true, bool useMusic = true) Parameters Type Name Description KnownFace faceToUpdate An existing face to merge final enrollment into. Boolean saveToRobot Save the robot's NVStorage when done (NOTE: will (re)save everyone enrolled!) Boolean sayName Play say-name/celebration animations on success before completing Boolean useMusic Starts special music during say-name animations (will leave music playing) Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source UpdateEnrolledFace(KnownFace, Int32, Boolean, Boolean, Boolean) Updates an existing enrolled face public Task<StatusCode> UpdateEnrolledFace(KnownFace faceToUpdate, int observedFaceId, bool saveToRobot = true, bool sayName = true, bool useMusic = true) Parameters Type Name Description KnownFace faceToUpdate An existing face to merge final enrollment into. Int32 observedFaceId The ID of a specific observed face to enroll (0 for next one we see) Boolean saveToRobot Save the robot's NVStorage when done (NOTE: will (re)save everyone enrolled!) Boolean sayName Play say-name/celebration animations on success before completing Boolean useMusic Starts special music during say-name animations (will leave music playing) Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. | Improve this Doc View Source UpdateEnrolledFaceName(KnownFace, String) Updates the name of the enrolled face. public Task<StatusCode> UpdateEnrolledFaceName(KnownFace face, string newName) Parameters Type Name Description KnownFace face The face to rename. String newName The new name. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation. The task result contains the result of the operation. | Improve this Doc View Source UpdateEnrolledFaceName(Int32, String, String) Updates the name of the enrolled face. public Task<StatusCode> UpdateEnrolledFaceName(int faceId, string oldName, string newName) Parameters Type Name Description Int32 faceId The ID of the face to rename. String oldName The old name of the face (must be correct, otherwise message is ignored). String newName The new name for the face. Returns Type Description Task < StatusCode > A task that represents the asynchronous operation; the task result contains the result from the robot. Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Anki.Vector.Authentication.html": {
    "href": "api/Anki.Vector.Authentication.html",
    "title": "Class Authentication",
    "keywords": "Class Authentication This static class for logging into Vector and creating RobotConfiguration instances for connecting to a Vector robot. The Login(String, String, String, String, IPAddress) method is the best way to use this class; provide all the necessary parameters and that method will retrieve the certificate, login to Anki's server, login to Vector, and return a RobotConfiguration instance that be stored and used to connect to Vector. The remaining methods in this class can be used to retrieve each piece of connection information separately Inheritance Object Authentication Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public static class Authentication Methods | Improve this Doc View Source FindRobotAddress(IRobotConfiguration) Finds the current robot address if possible or returns the address from the configuration. public static Task<IPAddress> FindRobotAddress(this IRobotConfiguration robotConfiguration) Parameters Type Name Description IRobotConfiguration robotConfiguration The robot configuration. Returns Type Description Task < IPAddress > A task that represents the asynchronous operation; the task result contains the IP address. | Improve this Doc View Source FindRobotAddress(String, Int32) Finds the robot IP address. public static Task<IPAddress> FindRobotAddress(string robotName, int timeout = 10000) Parameters Type Name Description String robotName Name of the robot. Int32 timeout The timeout in milliseconds. Returns Type Description Task < IPAddress > A task that represents the asynchronous operation. The task result contains the IP address of the robot (or null if not found). | Improve this Doc View Source GetCertificate(String) Gets the certificate for the specific robot by serial number. public static Task<string> GetCertificate(string serialNumber) Parameters Type Name Description String serialNumber The serial number. Returns Type Description Task < String > A task that represents the asynchronous operation; the task result contains the certificate. Exceptions Type Condition VectorAuthenticationException Serial number must be provided or Serial number is not in the correct format. or Serial number is invalid. or | Improve this Doc View Source GetSessionToken(String, String) Gets the session token for the user. public static Task<string> GetSessionToken(string emailAddress, string password) Parameters Type Name Description String emailAddress The login email address. String password The password. Returns Type Description Task < String > A task that represents the asynchronous operation; the task result contains the session token. Exceptions Type Condition VectorAuthenticationException Email must be provided. or Password must be provided. or Invalid email address or password. or Invalid response from Anki accounts API | Improve this Doc View Source GetTokenGuid(String, String, String, IPAddress) Gets the authentication token from the robot. public static Task<string> GetTokenGuid(string sessionId, string certificate, string robotName, IPAddress ipAddress) Parameters Type Name Description String sessionId The session identifier. String certificate The SSL certificate for the robot. String robotName Name of the robot. IPAddress ipAddress The IP address of the robot. Returns Type Description Task < String > A task that represents the asynchronous operation; the task result contains the authentication token. | Improve this Doc View Source GetTokenGuid(String, String, String, String) Gets the authentication token from the robot. public static Task<string> GetTokenGuid(string sessionId, string certificate, string robotName, string host) Parameters Type Name Description String sessionId The session identifier. String certificate The SSL certificate for the robot. String robotName Name of the robot. String host The host name or IP address with optional port. Returns Type Description Task < String > A task that represents the asynchronous operation; the task result contains the authentication token. | Improve this Doc View Source Login(RobotConfiguration, String, String, IPAddress) Updates the specified robot configuration with a new login public static Task<RobotConfiguration> Login(RobotConfiguration robotConfiguration, string emailAddress, string password, IPAddress ipAddress = null) Parameters Type Name Description RobotConfiguration robotConfiguration The robot configuration. String emailAddress The email address. String password The password. IPAddress ipAddress The IP address. Returns Type Description Task < RobotConfiguration > A task that represents the asynchronous operation; the task result the modified robot configuration parameter instance. Exceptions Type Condition VectorAuthenticationException IP address could not be determined; please provide IP address. | Improve this Doc View Source Login(String, String, String, String, IPAddress) Performs a complete login to the robot and returns a filled in RobotConfiguration instance. public static Task<RobotConfiguration> Login(string serialNumber, string robotName, string emailAddress, string password, IPAddress ipAddress = null) Parameters Type Name Description String serialNumber The robot serial number. String robotName Name of the robot. String emailAddress The user's username. String password The user's password. IPAddress ipAddress The optional robot IP address. Returns Type Description Task < RobotConfiguration > A task that represents the asynchronous operation; the task result contains the new robot configuration. Exceptions Type Condition ArgumentException Serial number must be provided - serialNumber or Robot name must be provided - robotName or User name must be provided - username or Password must be provided - password or IP address could not be determined; please provide IP address. - ipAddress | Improve this Doc View Source RemoteLogin(RobotConfiguration, String, String, String) Updates the specified robot configuration with a new login public static Task<RobotConfiguration> RemoteLogin(RobotConfiguration robotConfiguration, string emailAddress, string password, string remoteHost = null) Parameters Type Name Description RobotConfiguration robotConfiguration The robot configuration. String emailAddress The email address. String password The password. String remoteHost The optional remote host to connect to (otherwise uses configured remote host). Returns Type Description Task < RobotConfiguration > A task that represents the asynchronous operation; the task result the modified robot configuration parameter instance. Exceptions Type Condition ArgumentNullException robotConfiguration | Improve this Doc View Source RemoteLogin(String, String, String, String, String) Performs a complete login to the remote robot and returns a filled in RobotConfiguration instance. public static Task<RobotConfiguration> RemoteLogin(string serialNumber, string robotName, string emailAddress, string password, string remoteHost) Parameters Type Name Description String serialNumber The serial number. String robotName Name of the robot. String emailAddress The email address. String password The password. String remoteHost The remote host name or IP address and port. Returns Type Description Task < RobotConfiguration > A task that represents the asynchronous operation; the task result contains the new robot configuration. Exceptions Type Condition ArgumentException Remote host cannot be empty. - remoteHost | Improve this Doc View Source RobotNameIsValid(String) Validates the name of the robot. public static bool RobotNameIsValid(string robotName) Parameters Type Name Description String robotName Name of the robot. Returns Type Description Boolean True if the robot name is in the correct format. | Improve this Doc View Source SerialNumberIsValid(String) Validates the serial number. public static bool SerialNumberIsValid(string serialNumber) Parameters Type Name Description String serialNumber The serial number. Returns Type Description Boolean True if the serial number is in the correct format. | Improve this Doc View Source StandardizeRobotName(String) Standardizes the name of the robot. public static string StandardizeRobotName(string robotName) Parameters Type Name Description String robotName Name of the robot. Returns Type Description String A robot name in the correct format or the name unchanged. Exceptions Type Condition ArgumentException Invalid robot name. Please match the format exactly. Example: Vector-A1B2 - robotName | Improve this Doc View Source TryValidate(IRobotConfiguration) Validates the specified robot configuration. public static IEnumerable<string> TryValidate(this IRobotConfiguration robotConfiguration) Parameters Type Name Description IRobotConfiguration robotConfiguration The robot configuration. Returns Type Description IEnumerable < String > A list of errors | Improve this Doc View Source Validate(IRobotConfiguration) Validates the specified robot configuration. public static IRobotConfiguration Validate(this IRobotConfiguration robotConfiguration) Parameters Type Name Description IRobotConfiguration robotConfiguration The robot configuration. Returns Type Description IRobotConfiguration The robot configuration unchanged. Exceptions Type Condition VectorConfigurationException Validation error"
  },
  "api/Anki.Vector.Types.CameraConfig.html": {
    "href": "api/Anki.Vector.Types.CameraConfig.html",
    "title": "Class CameraConfig",
    "keywords": "Class CameraConfig The fixed properties for Vector's camera. A full 3x3 calibration matrix for doing 3D reasoning based on the camera images would look like: +--------------+--------------+---------------+ |focal_length.x| 0 | center.x | +--------------+--------------+---------------+ | 0 |focal_length.y| center.y | +--------------+--------------+---------------+ | 0 | 0 | 1 | +--------------+--------------+---------------+ Inheritance Object CameraConfig Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class CameraConfig Properties | Improve this Doc View Source Center Gets the focal center of the camera. This is the position of the optical center of projection within the image. It will be close to the center of the image, but adjusted based on the calibration of the lens. It is in floating point pixel values e.g. (155.11, 111.40). public Vector2 Center { get; } Property Type Vector2 | Improve this Doc View Source FocalLength Gets the focal length of the camera. This is focal length combined with pixel skew (as the pixels aren't perfectly square), so there are subtly different values for x and y. It is in floating point pixel values e.g. (288.87, 288.36) public Vector2 FocalLength { get; } Property Type Vector2 | Improve this Doc View Source FovX Gets the x (horizontal) field of view in radians. public float FovX { get; } Property Type Single | Improve this Doc View Source FovY Gets the y (vertical) field of view in radians. public float FovY { get; } Property Type Single | Improve this Doc View Source MaxCameraExposureTimeMs Gets the maximum supported exposure time in milliseconds. public uint MaxCameraExposureTimeMs { get; } Property Type UInt32 | Improve this Doc View Source MaxCameraGain Gets the maximum supported camera gain. public float MaxCameraGain { get; } Property Type Single | Improve this Doc View Source MinCameraExposureTimeMs Gets the minimum supported exposure time in milliseconds. public uint MinCameraExposureTimeMs { get; } Property Type UInt32 | Improve this Doc View Source MinCameraGain Gets the minimum supported camera gain. public float MinCameraGain { get; } Property Type Single"
  },
  "api/Anki.Vector.Types.Light.html": {
    "href": "api/Anki.Vector.Types.Light.html",
    "title": "Class Light",
    "keywords": "Class Light Lights are used with Vector's Cube. Lights may either be \"on\" or \"off\", though in practice any colors may be assigned to either state (including no color/light). Inheritance Object Light Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class Light Constructors | Improve this Doc View Source Light() Initializes a new instance of the Light class. public Light() | Improve this Doc View Source Light(Color) Initializes a new instance of the Light class. public Light(Color onColor) Parameters Type Name Description Color onColor Color shown when the light is on. | Improve this Doc View Source Light(Color, Color, UInt32, UInt32, UInt32, UInt32) Initializes a new instance of the Light class. public Light(Color onColor, Color offColor, uint onPeriodMs, uint offPeriodMs, uint transitionOnPeriodMs, uint transitionOffPeriodMs) Parameters Type Name Description Color onColor Color shown when the light is on. Color offColor Color shown when the light is off. UInt32 onPeriodMs The number of milliseconds the light should be \"on\" for for each cycle. UInt32 offPeriodMs The number of milliseconds the light should be \"off\" for for each cycle. UInt32 transitionOnPeriodMs The number of milliseconds to take to transition the light to the on color. UInt32 transitionOffPeriodMs The number of milliseconds to take to transition the light to the off color. Properties | Improve this Doc View Source OffColor Gets or sets the color shown when the light is off. public Color OffColor { get; set; } Property Type Color | Improve this Doc View Source OffPeriodMs Gets or sets the number of milliseconds the light should be \"off\" for for each cycle. public uint OffPeriodMs { get; set; } Property Type UInt32 | Improve this Doc View Source OnColor Gets or sets the color shown when the light is on. public Color OnColor { get; set; } Property Type Color | Improve this Doc View Source OnPeriodMs Gets or sets the number of milliseconds the light should be \"on\" for for each cycle. public uint OnPeriodMs { get; set; } Property Type UInt32 | Improve this Doc View Source TransitionOffPeriodMs Gets or sets the number of milliseconds to take to transition the light to the off color. public uint TransitionOffPeriodMs { get; set; } Property Type UInt32 | Improve this Doc View Source TransitionOnPeriodMs Gets or sets the number of milliseconds to take to transition the light to the on color. public uint TransitionOnPeriodMs { get; set; } Property Type UInt32"
  },
  "api/Anki.Vector.Types.NavMapGridNode.html": {
    "href": "api/Anki.Vector.Types.NavMapGridNode.html",
    "title": "Class NavMapGridNode",
    "keywords": "Class NavMapGridNode A node in the NavMap Leaf nodes contain content, all other nodes are split into 4 equally sized children. Child node indices are stored in the following X,Y orientation: +---+----+---+ | ^ | 2 | 0 | +---+----+---+ | Y | 3 | 1 | +---+----+---+ | | X->| | +---+----+---+ Inheritance Object NavMapGridNode NavMapGrid Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public class NavMapGridNode Properties | Improve this Doc View Source Center Gets the center of this node. public Vector3 Center { get; } Property Type Vector3 | Improve this Doc View Source Children Gets the child nodes of this node public IEnumerable<NavMapGridNode> Children { get; } Property Type IEnumerable < NavMapGridNode > | Improve this Doc View Source ColorRgba Gets the color of the node in RGBA. public uint ColorRgba { get; } Property Type UInt32 | Improve this Doc View Source Content Gets the content type in this node. Only leaf nodes have content, this is null for all other nodes. public NavNodeContentType? Content { get; } Property Type Nullable < NavNodeContentType > | Improve this Doc View Source Depth Gets the depth of this node (i.e. how far down the quad-tree it is). public int Depth { get; } Property Type Int32 | Improve this Doc View Source HasChildren Gets a value indicating whether this instance has child nodes. public bool HasChildren { get; } Property Type Boolean | Improve this Doc View Source Parent Gets the parent of this node. Is null for the root node. public NavMapGridNode Parent { get; } Property Type NavMapGridNode | Improve this Doc View Source Size Gets the size (width or length) of this square node in mm. public float Size { get; } Property Type Single Methods | Improve this Doc View Source ContainsPoint(Single, Single) Test if the node contains the given x,y coordinates. public bool ContainsPoint(float x, float y) Parameters Type Name Description Single x The x coordinate for the point. Single y The y coordinate for the point. Returns Type Description Boolean true if the node contains point; otherwise, false . | Improve this Doc View Source GetContent(Single, Single) Get the node's content at the given x,y coordinates. public NavNodeContentType GetContent(float x, float y) Parameters Type Name Description Single x The x coordinate for the point. Single y The y coordinate for the point. Returns Type Description NavNodeContentType The content included at that point. Will be NavNodeUnknown if point is outside the map. | Improve this Doc View Source GetNode(Single, Single) Get the node at the given x, y coordinates. public NavMapGridNode GetNode(float x, float y) Parameters Type Name Description Single x The x coordinate for the point. Single y The y coordinate for the point. Returns Type Description NavMapGridNode The smallest node that includes the point. Will return null if point is outside the map."
  },
  "api/Anki.Vector.Types.NavNodeContentType.html": {
    "href": "api/Anki.Vector.Types.NavNodeContentType.html",
    "title": "Enum NavNodeContentType",
    "keywords": "Enum NavNodeContentType The content types for a NavMapGridNode . Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public enum NavNodeContentType Fields Name Description NavNodeClearOfCliff The node is clear of any cliffs (a sharp drop) or obstacles. NavNodeClearOfObstacle The node is clear of obstacles, because Vector has seen objects on the other side, but it might contain a cliff. The node will be marked as either NavNodeCliff or NavNodeClearOfCliff once Vector has driven there. NavNodeCliff The node contains a cliff (a sharp drop). NavNodeInterestingEdge The node contains a visible edge (based on the camera feed). NavNodeNonInterestingEdge This entry is undocumented and not currently used NavNodeObstacleCube The node contains a LightCube . NavNodeObstacleProximity The node contains a proximity detected obstacle which has not been explored. NavNodeObstacleProximityExplored The node contains a proximity detected obstacle which has been explored. NavNodeObstacleUnrecognized The node contains an unrecognized obstacle. NavNodeUnknown The contents of the node is unknown."
  },
  "api/Anki.Vector.Types.StatusCodeExtensions.html": {
    "href": "api/Anki.Vector.Types.StatusCodeExtensions.html",
    "title": "Class StatusCodeExtensions",
    "keywords": "Class StatusCodeExtensions Extensions for status codes Inheritance Object StatusCodeExtensions Namespace : Anki.Vector.Types Assembly : Anki.Vector.dll Syntax public static class StatusCodeExtensions Methods | Improve this Doc View Source EnsureSuccess(StatusCode) Ensures that the status code was successful. If not successful, throws error code. public static void EnsureSuccess(this StatusCode statusCode) Parameters Type Name Description StatusCode statusCode The status code. Exceptions Type Condition VectorRequestException Received status code of {statusCode}"
  },
  "api/Anki.Vector.Types.html": {
    "href": "api/Anki.Vector.Types.html",
    "title": "Namespace Anki.Vector.Types",
    "keywords": "Namespace Anki.Vector.Types Classes ActionResult The result of the action method Angle Angle extensions Animation Animation that can be played by the robot. AnimationTrigger Animation trigger that can be played by the robot. BatteryState The state of the robot battery. BehaviorResult Result from the behavior methods CameraConfig The fixed properties for Vector's camera. A full 3x3 calibration matrix for doing 3D reasoning based on the camera images would look like: +--------------+--------------+---------------+ |focal_length.x| 0 | center.x | +--------------+--------------+---------------+ | 0 |focal_length.y| center.y | +--------------+--------------+---------------+ | 0 | 0 | 1 | +--------------+--------------+---------------+ CheckUpdateStatus The result of check update status methods. CloudConnection Cloud connection information CubeBatteryState The state of the cube battery. Image Represents a single image captured from the robot. ImageRect Image coordinates and size KnownFace A face that Vector has detected. LatestAttentionTransfer Vector attention transfer info event args Light Lights are used with Vector's Cube. Lights may either be \"on\" or \"off\", though in practice any colors may be assigned to either state (including no color/light). MotionProfile Tells Vector how to drive when receiving navigation and movement actions such as GoToPose and DockWithCube. NavMapGrid A navigation memory map, stored as a quad-tree. NavMapGridNode A node in the NavMap Leaf nodes contain content, all other nodes are split into 4 equally sized children. Child node indices are stored in the following X,Y orientation: +---+----+---+ | ^ | 2 | 0 | +---+----+---+ | Y | 3 | 1 | +---+----+---+ | | X->| | +---+----+---+ PhotoInfo Store photo information Pose Represents where an object is in the world. Whenever Vector is delocalized (i.e.whenever Vector no longer knows where he is - e.g.when he's picked up), Vector creates a new pose starting at (0,0,0) with no rotation, with origin_id incremented to show that these poses cannot be compared with earlier ones. As Vector drives around, his pose (and the pose of other objects he observes - e.g.faces, his LightCube, charger, etc.) is relative to this initial position and orientation. The coordinate space is relative to Vector, where Vector's origin is the point on the ground between Vector's two front wheels. The X axis is Vector's forward direction, the Y axis is to Vector's left, and the Z axis is up. Only poses of the same origin can safely be compared or operated on. RobotLifetimeStats Vector lifetime statistics RobotSettings THe permanently stored Vector robot settings StatusCodeExtensions Extensions for status codes VersionState The versioning information for Vector. Structs Acceleration Represents acceleration values AngularVelocity Represents the angular velocity Color Extensions for working with robot colors ColorProfile Applies transforms to make Vector’s lights and colors appear as intended, by limiting maximum channel intensity. Matrix Simplified matrix struct Point Represents a point. Position Represents the position of an object in the world. A position consists of its x, y and z values in millimeters. Quaternion Represents the rotation of an object in the world. Vector2 Represents a 2D Vector (type/units aren't specified) Vector3 Represents a 3D Vector (type/units aren't specified) Interfaces IAnimation Interface for animation and animation triggers Enums ActionResultCode The result of an action AttentionTransferReason The reason for the last attention transfer BatteryLevel Battery level BehaviorResultCode The result of a behavior ButtonWakeWord The service that responds when clicking Vector's back button CloudConnectionCode Cloud connection code CubeBatteryLevel Cube battery level CustomObjectMarker Defines all available custom object markers. CustomObjectType Custom object type. Vector has 20 slots for custom object types. You can define a Anki.Vector.ExternalInterface.CustomBoxDefinition , Anki.Vector.ExternalInterface.CustomCubeDefinition , or Anki.Vector.ExternalInterface.CustomWallDefinition in these slots and Vector will recognize objects of those types. EyeColor Vector's eye color setting ImageEncoding The image encoding NavNodeContentType The content types for a NavMapGridNode . RobotVolume The permanent settings volume level StatusCode Status result UpdateStatus Update status enum"
  },
  "api/Anki.Vector.html": {
    "href": "api/Anki.Vector.html",
    "title": "Namespace Anki.Vector",
    "keywords": "Namespace Anki.Vector Classes AnimationComponent Animation related classes, functions, events and values. Animations represent a sequence of highly coordinated movements, faces, lights, and sounds used to demonstrate an emotion or reaction. Animations can control the following tracks: head, lift, treads, face, audio and backpack lights. There are two ways to play an animation on Vector: PlayAnimation(Animation, UInt32, Boolean, Boolean, Boolean) and PlayAnimationTrigger(AnimationTrigger, UInt32, Boolean, Boolean, Boolean, Boolean) . For PlayAnimationTrigger, you select a pre-defined group of animations, and the robot will choose which animation from the group to run when you execute the method. When calling PlayAnimation, you select the specific animation you want the robot to run. We advise you to use PlayAnimationTrigger instead of PlayAnimation, since individual animations can be deleted between Vector OS versions. By default, when an SDK program starts, the SDK will request a list of known animation triggers and animations from the robot, which will be loaded and available from GetAnimationTriggers() and GetAnimations() , respectively. AudioComponent Support for Vector’s speakers Vector's speakers can be used for playing user-provided audio. You can use the PlayStream(Stream, UInt32, UInt32) method to play a stream of 16bit mono audio data. Authentication This static class for logging into Vector and creating RobotConfiguration instances for connecting to a Vector robot. The Login(String, String, String, String, IPAddress) method is the best way to use this class; provide all the necessary parameters and that method will retrieve the certificate, login to Anki's server, login to Vector, and return a RobotConfiguration instance that be stored and used to connect to Vector. The remaining methods in this class can be used to retrieve each piece of connection information separately BehaviorComponent Behavior related classes and functions. Behaviors represent a complex task which requires Vector’s internal logic to determine how long it will take.This may include combinations of animation, path planning or other functionality. For commands such as GoToPose(Pose, Boolean, Int32) , DriveOnCharger() and DockWithCube(LightCube, Nullable<Single>, AlignmentType, Single, Int32) , Vector uses path planning, which refers to the problem of navigating the robot from point A to B without collisions. Vector loads known obstacles from his map, creates a path to navigate around those objects, then starts following the path. If a new obstacle is found while following the path, a new plan may be created. CameraComponent Support for Vector’s camera. Vector has a built-in camera which he uses to observe the world around him. You can start receiving camera images from Vector by calling the StartFeed() method. The ImageReceived event will be raised for each frame received. Although there is an ImageEncoding property, the data received from Vector is always in the color JPEG format. The camera resolution is 1280 x 720 with a field of view of 90 deg (H) x 50 deg (V). Capabilities Features supported by the current robot firmware. Component Abstract base class for components. ControlComponent Management of the control of Vector's behaviors. When you connect to Vector with this SDK he will behave normally. Taking control of Vector will disable his internal behaviors (driving around autonomously, responding to voice commands, etc). You are required to take control of Vector in order to execute commands that move Vector or provide other output. Call the RequestControl(Int32) method to request control of Vector and ReleaseControl() to release control. Unless you use priority level OverrideBehaviors Vector will regain control automatically if he senses an edge or runs low on battery. You can subscribe to the ControlGranted and ControlLost events to get feedback on when you have acquired or lost control. EventComponent Event handlers to subscribe to robot events. FaceComponent Manage the state of the faces on the robot. MotorComponent Controls the low-level motor functions. NavMapComponent Represents Vector's navigation memory map. The NavMapComponent object subscribes for nav memory map updates from the robot to store and dispatch. PhotoComponent Access the photos on Vector. ReserveBehaviorControl A ReserveBehaviorControl object can be used to suppress the ordinary idle behaviors of the Robot and keep Vector still between SDK control instances. Care must be taken when blocking background behaviors, as this may make Vector appear non-responsive. As long as this object is not disposed, background behaviors will not activate, keeping Vector still while other SDK scripts may take control. Highest-level behaviors like returning to the charger due to low battery will still activate. If there is a need to keep background behaviors from activating in a single script, the class may be used to reserve behavior control while in scope. Robot The main robot class for managing Vector. The Robot object is responsible for managing the state and connections to a Vector, and is typically the entry-point to running the SDK. RobotConfiguration The robot configuration information RobotObject Abstract base class for all robot owned objects. ScreenComponent Manage the state of the faces on the robot. StimulationInfo Vector stimulation info VisionComponent Utility methods for Vector’s vision Vector’s can detect various types of objects through his camera feed. WorldComponent Vector’s known view of his world. This view includes objects and faces it knows about and can currently see with its camera. Structs ProximitySensorData A distance sample from the time-of-flight sensor with metadata describing reliability of the measurement The proximity sensor is located near the bottom of Vector between the two front wheels, facing forward.The reported distance describes how far in front of this sensor the robot feels an obstacle is. The sensor estimates based on time-of-flight information within a field of view which the engine resolves to a certain quality value. Four additional flags are supplied by the engine to indicate whether this proximity data is considered valid for the robot’s internal path finding. Respecting these is optional, but will help your code respect the behavior of the robot’s innate object avoidance. RobotStatus Robot Status class and exposed properties for Vector’s various states. TouchSensorData A touch sample from the capacitive touch sensor, accompanied with the robot’s conclusion on whether this is considered a valid touch. Interfaces IRemoteRobotConfiguration Robot configuration information for remote (over the Internet) connections. This structure does not include IP address, instead it has a RemoteHost property which can contain an IP address or hostname and optionally include the port to connect with. IRobotConfiguration Robot configuration information Enums AlignmentType Which part of the robot to align with an object. ControlPriority Vector control priority level DriveDirection The drive direction (forwards or backwards) MasterVolumeLevel Use these values for setting the master audio volume. See SetMasterVolume(MasterVolumeLevel) . MotorSpeed The speed of the motors for drive and move MoveDirection The direction for moving head or lift (up, down) PlaybackResult The playback result TurnDirection The drive turn direction (left, right)"
  },
  "api/Anki.Vector.Events.html": {
    "href": "api/Anki.Vector.Events.html",
    "title": "Namespace Anki.Vector.Events",
    "keywords": "Namespace Anki.Vector.Events Classes AlexaAuthEventArgs Alexa authorization event args AttentionTransferEventArgs Vector attention transfer info event args AudioReceivedEventArgs Audio received event args CameraSettingsUpdateEventArgs Camera settings update event args CheckUpdateStatusEventArgs Check update status event args ConnectedEventArgs Event args for the connected event ConnectionResponseEventArgs Connection response event args ControlGrantedEventArgs Event args for control granted event ControlLostEventArgs Event args for control lost event CubeBatteryEventArgs Cube battery level event args CubeConnectionLostEventArgs Cube connection lost event args DelocalizedEventArgs Event args for the delocalized event DisconnectedEventArgs Event args for the disconnected event ErrorEventArgs Event args for background SDK errors FaceEnrollmentCompletedEventArgs Face enrollment completed event args FaceScanCompleteEventArgs Face scan complete FaceScanStartedEventArgs Face scan started FeatureStatusEventArgs Feature status event args ImageReceivedEventArgs Image received event args JdocsChangedEventArgs JDocs changes event args KeepAliveEventArgs Keep alive event args KnownFaceAppearedEventArgs Known face detected event args MirrorModeDisabledEventArgs Mirror mode disabled event args NavMapUpdateEventArgs Nav map update event args ObjectAddedEventArgs Object added event args ObjectAppearedEventArgs Object appeared event args ObjectConnectedEventArgs Object disappeared event args ObjectDisappearedEventArgs Object disappeared event args ObjectDisconnectedEventArgs Object disappeared event args ObjectEventArgs Abstract base class event args for all object events ObjectFinishedMovingEventArgs Object stopped moving event args ObjectMovingEventArgs Object moved event args ObjectObservedEventArgs Object appeared event args ObjectTappedEventArgs Object tapped event args ObjectUpAxisChangedEventArgs Object up axis changed event args PhotoTakenEventArgs Photo taken event args RobotChangedObservedFaceIdEventArgs Robot changed observed face id event args RobotErasedEnrolledFaceEventArgs Robot erased enrolled face event args RobotEventArgs Robot event args RobotObjectAvailableEventArgs Cube availability event args RobotObjectConnectionStateEventArgs Object connection state event args RobotObjectEventArgs Object event args RobotObjectMovedEventArgs Object moved event args RobotObjectStoppedMovingEventArgs Object stopped moving event args RobotObjectTappedEventArgs Object tapped event args RobotObjectUpAxisChangedEventArgs Object up axis changed event args RobotObservedFaceEventArgs Robot Observed Face Event Args RobotObservedMotionEventArgs Robot observed motion event args RobotObservedObjectEventArgs Robot observed object event args RobotRenamedEnrolledFaceEventArgs Robot renamed enrolled face event args RobotStateEventArgs Gets robot state event args StimulationInfoEventArgs Vector stimulation info event args TimestampedStatusEventArgs The timestamped status event args UnexpectedMovementEventArgs Unexpected movement event args UserIntentEventArgs User intent event args. Contains the voice command information from the event stream. The UserIntent enumeration includes all of the voice commands that the SDK can intercept. Some UserIntents include information returned from the cloud and used when evaluating the voice commands. This information is available in the IntentData JSON formatted string. VisionModesAutoDisabledEventArgs Vision modes auto disabled event args WakeWordBeginEventArgs Wake word begin event args WakeWordEndEventArgs Wake word end event args. This is sent when the response (and potential intent) is received from the cloud. This is sent before the UserIntent event (if any). WakeWordEventArgs Wake word event args Enums AlexaAuthState Alexa authorization state CubeBatteryLevel Cube battery level EventType Event type FaceEnrollmentResult Face enrollment result JdocType The JDOC type that changed ObjectEventType Object event type StatusType Status type UnexpectedMovementSide The side of the unexpected movement UnexpectedMovementType Unexpected movement type UserIntent List of UserIntent events available to the SDK. Vector's voice recognition allows for variation in grammar and word selection, so the examples are not the only way to invoke the voice commands. This list reflect only the voice commands available to the SDK, as some are not available for development use. WakeWordEventType Wake word event types"
  },
  "api/Anki.Vector.Exceptions.html": {
    "href": "api/Anki.Vector.Exceptions.html",
    "title": "Namespace Anki.Vector.Exceptions",
    "keywords": "Namespace Anki.Vector.Exceptions Classes VectorAudioPlaybackException Request to Vector has failed VectorAuthenticationException Failure during authentication VectorConfigurationException The IRobotConfiguration instance is not valid. VectorConnectionException Connection to Vector failed VectorControlException Unable to run a function which requires behavior control. VectorControlTimeoutException Failed to get control of Vector. Please verify that Vector is connected to the Internet, is on a flat surface, and is fully charged. VectorException Base class of all Vector SDK exceptions. VectorExternalAudioPlaybackException Failed to play external audio on Vector. VectorInvalidValueException Failed to authenticate request. VectorInvalidVersionException Your SDK version is not compatible with Vector’s version or the specified operation is not compatible with Vector's version. VectorNotConnectedException Robot object is not connected. VectorNotFoundException Unable to establish a connection to Vector. Make sure you’re on the same network, and Vector is connected to the Internet. VectorRequestException Request to Vector has failed VectorTimeoutException Message took too long to complete. VectorUnauthenticatedException Failed to authenticate request. VectorUnavailableException Unable to reach Vector. VectorUnimplementedException Vector does not handle this message. Enums VectorAuthenticationFailureType Type of authentication failure."
  },
  "api/Anki.Vector.Objects.CustomObjectArchetype.html": {
    "href": "api/Anki.Vector.Objects.CustomObjectArchetype.html",
    "title": "Class CustomObjectArchetype",
    "keywords": "Class CustomObjectArchetype Abstract base class for all custom object definition types Inheritance Object CustomObjectArchetype CustomBoxArchetype CustomCubeArchetype CustomWallArchetype Namespace : Anki.Vector.Objects Assembly : Anki.Vector.dll Syntax public abstract class CustomObjectArchetype Properties | Improve this Doc View Source CustomObjectType Gets the type of the custom object. public CustomObjectType CustomObjectType { get; } Property Type CustomObjectType | Improve this Doc View Source MarkerHeightMm Gets or sets the height of the printed marker (in millimeters). public float MarkerHeightMm { get; set; } Property Type Single | Improve this Doc View Source MarkerWidthMm Gets or sets the width of the printed marker (in millimeters). public float MarkerWidthMm { get; set; } Property Type Single"
  },
  "api/Anki.Vector.MasterVolumeLevel.html": {
    "href": "api/Anki.Vector.MasterVolumeLevel.html",
    "title": "Enum MasterVolumeLevel",
    "keywords": "Enum MasterVolumeLevel Use these values for setting the master audio volume. See SetMasterVolume(MasterVolumeLevel) . Namespace : Anki.Vector Assembly : Anki.Vector.dll Syntax public enum MasterVolumeLevel Fields Name Description High Highest volume level Low Lowest volume level Medium Medium volume level MediumHigh Medium high volume level MediumLow Medium low volume level"
  }
}